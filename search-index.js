var N=null,E="",T="t",U="u",searchIndex={};
var r_0a="argmin::solver::newton",r_0b="Log general info",r_0c="Computes the gradient at parameter `param`. Returns an…",r_0d="Increment the hessian evaluation count",r_0e="Newton",r_1a="set_gamma",r_1b="This should be used to log iteration data only (because…",r_1c="Computes the Hessian at parameter `param`. Returns an…",r_1d="Increase the hessian evaluation count by a given value",r_1e="SATempFunc",r_2a="set gamma",r_2b="backtrace",r_2c="Returns the current parameter vector.",r_2d="termination_reason",r_2e="SimulatedAnnealing",r_3a="argmin::solver::trustregion",r_3b="argminlogger",r_3c="Returns the most recently stored gradient.",r_3d="duration",r_3e="CauchyPoint",r_4a="set_epsilon",r_4b="clone",r_4c="Returns the most recently stored Hessian.",r_4d="push",r_4e="Dogleg",r_5a="set_radius",r_5b="argminwriter",r_5c="Sets the current parameter to `param`.",r_5d="argminsloglogger",r_5e="Steihaug",r_6a="set_eta",r_6b="argminbase",r_6c="Sets the current gradient to `grad`.",r_6d="name",r_6e="TrustRegion",r_7a="Rastrigin test function",r_7b="cause",r_7c="Sets the current Hessian to `hessian`.",r_7d="context",r_7e="ArgminIterData",r_8a="Ackley test function",r_8b="perturbationvector",r_8c="Sets the best parameter vector to `param`.",r_8d="compat",r_8e="MinimalNoOperator",r_9a="argmin::prelude::finitediff",r_9b="requires_cur_grad",r_9c="Modify the parameter vector by calling the `modify` method…",r_9d="causes",r_9e="ArgminBase",r_Aa="Aborted",r_Ab="argmin::solver::quasinewton::bfgs",r_Ac="set_target_cost",r_Ad="argminiterdata",r_Ae="ArgminScaledAdd",r_Ba="argmin::prelude::ArgminError",r_Bb="argmin::solver::simulatedannealing",r_Bc="increment_cost_func_count",r_Bd="init",r_Be="ArgminAdd",r_Ca="text",r_Cb="argmin::solver::trustregion::cauchypoint",r_Cc="increase_cost_func_count",r_Cd="Perform one iteration of SA algorithm",r_Ce="ModCholeskySE99",r_Da="Compute the l2-norm (`U`) of `self`",r_Db="argmin::solver::trustregion::dogleg",r_Dc="cost_func_count",r_Dd="set_search_direction",r_De="GershgorinCircles",r_Ea="Subtract a `T` from `self`",r_Eb="argmin::solver::trustregion::steihaug",r_Ec="increment_grad_func_count",r_Ed="set_initial_parameter",r_Ee="ModCholeskySE90",r_Fa="(Pointwise) Divide a `T` by `self`",r_Fb="argmin::solver::trustregion::trustregion_method",r_Fc="increase_grad_func_count",r_Fd="set_initial_alpha",r_Fe="ModCholeskyGMW81",r_Ga="Add a `T` scaled by an `U` to `self`",r_Gb="formatter",r_Gc="grad_func_count",r_Gd="set_initial_cost",r_Ge="Decomposition",r_Ha="Error",r_Hb="ordering",r_Hc="Returns the current value of the counter for the…",r_Hd="set_initial_gradient",r_He="ArgminZero",r_Ia="Add a `T` to `self`",r_Ib="terminationreason",r_Ic="increment_hessian_func_count",r_Id="calc_initial_cost",r_Ie="ArgminDot",r_Ja="usize",r_Jb="checkpointmode",r_Jc="increase_hessian_func_count",r_Jd="calc_initial_gradient",r_Je="ConjugateGradient",r_Ka="arraybase",r_Kb="deserialize",r_Kc="hessian_func_count",r_Kd="Calculate initial cost function value",r_Ke="NonlinearConjugateGradient",r_La="argmin::prelude::modcholesky",r_Lb="argmincheckpoint",r_Lc="add_logger",r_Ld="Set search direction",r_Le="FletcherReeves",r_Ma="decomposition",r_Mb="__d",r_Mc="add_writer",r_Md="Set initial parameter",r_Me="PolakRibiere",r_Na="Return zero(s)",r_Nb="fmt",r_Nc="set_termination_reason",r_Nd="Set initial cost function value",r_Ne="PolakRibierePlus",r_Oa="Dot/scalar product of `T` and `self`",r_Ob="hash",r_Oc="terminate",r_Od="Set initial gradient",r_Oe="HestenesStiefel",r_Pa="argmin::solver::conjugategradient",r_Pb="default",r_Pc="base_reset",r_Pd="Set initial alpha value",r_Pe="SteepestDescent",r_Qa="u64",r_Qb="minimalnooperator",r_Qc="set_checkpoint_dir",r_Qd="set_grad",r_Qe="Landweber",r_Ra="Constructor",r_Rb="nooperator",r_Rc="Set checkpoint directory",r_Rd="set_hessian",r_Re="BacktrackingLineSearch",r_Sa="new",r_Sb="bool",r_Sc="str",r_Sd="update",r_Se="LineSearchCondition",r_Ta="argmin::solver",r_Tb="serialize",r_Tc="set_checkpoint_name",r_Td="param",r_Te="ArmijoCondition",r_Ua="set_cur_grad",r_Ub="__s",r_Uc="Set checkpoint name",r_Ud="terminated",r_Ue="WolfeCondition",r_Va="f64",r_Vb="write",r_Vc="set_checkpoint_mode",r_Vd="Increment the cost function evaluation count",r_Ve="StrongWolfeCondition",r_Wa="argmin::solver::linesearch",r_Wb="partial_cmp",r_Wc="Set checkpoint mode",r_Wd="Increaese the cost function evaluation count by a given…",r_We="GoldsteinCondition",r_Xa="set current gradient value",r_Xb="option",r_Xc="Run the optimization algorithm",r_Xd="Return the cost function evaluation count",r_Xe="HagerZhangLineSearch",r_Ya="set_alpha_min_max",r_Yb="log_info",r_Yc="Run the essential parts of the optimization algorithm (no…",r_Yd="Increment the gradient evaluation count",r_Ye="MoreThuenteLineSearch",r_Za="set alpha limits",r_Zb="log_iter",r_Zc="Applies the cost function or operator to a parameter…",r_Zd="Increase the gradient evaluation count by a given value",r_Ze="NewtonCG",r_aa="argmin",r_ab="try_from",r_ac="eval",r_ad="Returns the result of the optimization.",r_ae="Attempts to downcast this `Error` to a particular `Fail`…",r_af="ArgminWriter",r_ba="self",r_bb="borrow",r_bc="fletcherreeves",r_bd="Sets the maximum number of iterations to `iters`.",r_be="PerturbationVector",r_bf="ArgminLogger",r_ca="Calculation of the Jacobian J(x) of a vector function `fs`…",r_cb="type_id",r_cc="polakribiere",r_cd="Returns the maximum number of iterations.",r_ce="FiniteDiff",r_cf="ArgminSlogLogger",r_da="Calculation of the product of the Jacobian J(x) of a…",r_db="typeid",r_dc="polakribiereplus",r_dd="Increments the iteration counter.",r_de="ArgminSolver",r_df="ArgminCheckpoint",r_ea="Calculation of the product of the Hessian H(x) of a…",r_eb="borrow_mut",r_ec="hestenesstiefel",r_ed="Returns the current number of iterations.",r_ee="ArgminIter",r_ef="WriteToFile",r_fa="argmin::prelude",r_fb="try_into",r_fc="conjugategradient",r_fd="Returns the most recently stored cost function value.",r_fe="ArgminLog",r_ff="NoOperator",r_ga="return current gradient",r_gb="from",r_gc="armijocondition",r_gd="Sets the current cost function value to `cost`",r_ge="ArgminWrite",r_ha="set current gradient",r_hb="into",r_hc="wolfecondition",r_hd="Returns the best cost function value obtained so far.",r_he="ArgminOp",r_ia="set current parameter vector",r_ib="to_owned",r_ic="strongwolfecondition",r_id="Sets the best cost function value.",r_ie="ArgminLineSearch",r_ja="result",r_jb="clone_into",r_jc="goldsteincondition",r_jd="Sets the target cost function value to `cost`. The…",r_je="ArgminTrustRegion",r_ka="error",r_kb="to_string",r_kc="cmp",r_kd="Increments the counter for the computations of the cost…",r_ke="ArgminNLCGBetaUpdate",r_la="argminresult",r_lb="string",r_lc="run_fast",r_ld="Increases the counter for the computations of the cost…",r_le="ArgminMul",r_ma="Get current cost function value",r_mb="argmin::prelude::ctrlc",r_mc="cur_param",r_md="Increments the counter for the computations of the…",r_me="ArgminScaledSub",r_na="Return the gradient evaluation count",r_nb="as_fail",r_nc="cur_grad",r_nd="Increases the counter for the computations of the gradient…",r_ne="TerminationReason",r_oa="Hessian",r_ob="fail",r_oc="cur_hessian",r_od="Increments the counter for the computations of the Hessian…",r_oe="ArgminEye",r_pa="argminkv",r_pb="argmin::solver::conjugategradient::cg",r_pc="set_cur_param",r_pd="Increases the counter for the computations of the Hessian…",r_pe="ArgminKV",r_qa="Param",r_qb="argmin::solver::conjugategradient::nonlinear_cg",r_qc="set_cur_hessian",r_qd="Attaches a logger which implements `ArgminLog` to the…",r_qe="ArgminTranspose",r_ra="Output",r_rb="argmin::solver::conjugategradient::beta",r_rc="set_best_param",r_rd="argminlog",r_re="ArgminResult",r_sa="apply",r_sb="argmin::solver::gradientdescent::steepestdescent",r_sc="set_max_iters",r_sd="Attaches a writer which implements `ArgminWrite` to the…",r_se="ArgminWeightedDot",r_ta="gradient",r_tb="argmin::solver::landweber",r_tc="max_iters",r_td="argminwrite",r_te="ArgminError",r_ua="hessian",r_ub="argmin::solver::linesearch::backtracking",r_uc="increment_iter",r_ud="Sets the `TerminationReason`",r_ue="ArgminNorm",r_va="modify",r_vb="argmin::solver::linesearch::condition",r_vc="cur_iter",r_vd="Checks whether any of the conditions to terminate is true…",r_ve="CheckpointMode",r_wa="Set the initial step length",r_wb="argmin::solver::linesearch::hagerzhang",r_wc="cur_cost",r_wd="Resets the `base` field to it's initial conditions. This…",r_we="ArgminSub",r_xa="Set the gradient at the starting point",r_xb="argmin::solver::linesearch::morethuente",r_xc="set_cur_cost",r_xd="arc",r_xe="SignalType",r_ya="(Pointwise) Multiply a `T` with `self`",r_yb="argmin::solver::newton::newton_cg",r_yc="best_cost",r_yd="run",r_ye="ArgminDiv",r_za="Subtract a `T` scaled by an `U` from `self`",r_zb="argmin::solver::newton::newton_method",r_zc="set_best_cost",r_zd="next_iter",r_ze="ArgminInv";

searchIndex[r_aa]={"doc":"A pure Rust optimization framework","i":[[0,"prelude",r_aa,"Definition of all relevant traits and types # Re-export of…",N,N],[0,"macros",r_fa,"Macros # Macros",N,N],[0,"finitediff",E,"Finite Differentiation",N,N],[3,r_be,r_9a,"Perturbation Vector for the accelerated computation of the…",N,N],[12,"x_idx",E,"x indices",0,N],[12,"r_idx",E,"correspoding function indices",0,N],[6,"PerturbationVectors",E,"A collection of `PerturbationVector`s",N,N],[8,r_ce,E,E,N,N],[16,"Jacobian",E,E,1,N],[16,r_oa,E,E,1,N],[16,"OperatorOutput",E,E,1,N],[10,"forward_diff",E,"Forward difference calculated as",1,[[[r_ba],["fn"]],[r_ba]]],[10,"central_diff",E,"Central difference calculated as",1,[[[r_ba],["fn"]],[r_ba]]],[10,"forward_jacobian",E,r_ca,1,N],[10,"central_jacobian",E,r_ca,1,N],[10,"forward_jacobian_vec_prod",E,r_da,1,[[[r_ba],["fn"],[r_ba]],[r_ba]]],[10,"central_jacobian_vec_prod",E,r_da,1,[[[r_ba],["fn"],[r_ba]],[r_ba]]],[10,"forward_jacobian_pert",E,E,1,N],[10,"central_jacobian_pert",E,E,1,N],[10,"forward_hessian",E,"Calculation of the Hessian using forward differences",1,N],[10,"central_hessian",E,"Calculation of the Hessian using central differences",1,N],[10,"forward_hessian_vec_prod",E,r_ea,1,[[[r_ba],["fn"],[r_ba]],[r_ba]]],[10,"central_hessian_vec_prod",E,r_ea,1,[[[r_ba],["fn"],[r_ba]],[r_ba]]],[10,"forward_hessian_nograd",E,"Calculation of the Hessian using forward differences…",1,N],[10,"forward_hessian_nograd_sparse",E,"Calculation of a sparse Hessian using forward differences…",1,N],[8,r_de,r_fa,"Defines the interface to a solver. Usually, there is no…",N,N],[11,"from_checkpoint",E,"Load solver from checkpoint",2,[[["p"]],[r_ja,[r_ka]]]],[10,r_sa,E,"apply cost function or operator to a parameter vector",2,N],[10,r_ta,E,"compute the gradient for a parameter vector",2,N],[10,r_ua,E,"compute the hessian for a parameter vector",2,N],[10,r_va,E,"modify the parameter vector",2,N],[10,r_mc,E,"return current parameter vector",2,N],[10,r_nc,E,r_ga,2,N],[10,r_oc,E,r_ga,2,N],[10,r_pc,E,r_ia,2,N],[10,r_Ua,E,r_ha,2,N],[10,r_qc,E,r_ha,2,N],[10,r_rc,E,r_ia,2,N],[10,r_yd,E,"Execute the optimization algorithm.",2,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[10,r_lc,E,"Execute the optimization algorithm without Ctrl-C…",2,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[10,r_ja,E,"Returns the best solution found during optimization.",2,[[[r_ba]],[r_la]]],[10,r_Nc,E,"Set termination reason (doesn't terminate yet! -- this is…",2,N],[10,r_Oc,E,"Evaluate all stopping criterions and return the…",2,[[[r_ba]],[r_Ib]]],[10,r_sc,E,"Set max number of iterations.",2,N],[10,r_tc,E,"Get max number of iterations.",2,[[[r_ba]],[r_Qa]]],[10,r_vc,E,"Get current iteration number.",2,[[[r_ba]],[r_Qa]]],[10,r_uc,E,"Increment the iteration number by one",2,N],[10,r_wc,E,r_ma,2,[[[r_ba]],[r_Va]]],[10,r_xc,E,r_ma,2,N],[10,r_yc,E,"Get best cost function value",2,[[[r_ba]],[r_Va]]],[10,r_zc,E,"set best cost value",2,N],[10,r_Ac,E,"Set the target cost function value which is used as a…",2,N],[10,r_Lc,E,"Add a logger to the array of loggers",2,N],[10,r_Mc,E,"Add a writer to the array of writers",2,N],[10,r_Pc,E,"Reset the base of the algorithm to its initial state",2,N],[10,r_Bc,E,r_Vd,2,N],[10,r_Cc,E,r_Wd,2,N],[10,r_Dc,E,r_Xd,2,[[[r_ba]],[r_Qa]]],[10,r_Ec,E,r_Yd,2,N],[10,r_Fc,E,r_Zd,2,N],[10,r_Gc,E,r_na,2,[[[r_ba]],[r_Qa]]],[10,r_Ic,E,r_0d,2,N],[10,r_Jc,E,r_1d,2,N],[10,r_Kc,E,r_na,2,[[[r_ba]],[r_Qa]]],[10,r_Qc,E,r_Rc,2,N],[10,r_Tc,E,r_Uc,2,N],[10,r_Vc,E,r_Wc,2,N],[8,r_ee,E,"Main part of every solver: `next_iter` computes one…",N,N],[16,r_qa,E,"Parameter vectors",3,N],[16,r_ra,E,"Output of the operator",3,N],[16,r_oa,E,r_oa,3,N],[10,r_zd,E,"Computes one iteration of the algorithm.",3,[[[r_ba]],[r_ja,[r_Ad,r_ka]]]],[11,r_Bd,E,"Initializes the algorithm",3,[[[r_ba]],[r_ja,[r_ka]]]],[8,r_fe,E,"Defince the interface every logger needs to expose",N,N],[10,r_Yb,E,"Logs general information (a message `msg` and/or key-value…",4,[[[r_ba],[r_Sc],[r_pa]],[r_ja,[r_ka]]]],[10,r_Zb,E,"Logs information from iterations. Only accepts key-value…",4,[[[r_ba],[r_pa]],[r_ja,[r_ka]]]],[8,r_ge,E,"Every writer (which is something that writes parameter…",N,N],[16,r_qa,E,E,5,N],[10,r_Vb,E,"Writes the parameter vector somewhere",5,N],[3,r_7e,E,"The datastructure which is returned by the `next_iter`…",N,N],[8,r_he,E,"This trait needs to be implemented for every operator/cost…",N,N],[16,r_qa,E,"Type of the parameter vector",6,N],[16,r_ra,E,"Output of the operator. Most solvers expect `f64`.",6,N],[16,r_oa,E,"Type of Hessian",6,N],[11,r_sa,E,"Applies the operator/cost function to parameters",6,N],[11,r_ta,E,"Computes the gradient at the given parameters",6,N],[11,r_ua,E,"Computes the hessian at the given parameters",6,N],[11,r_va,E,"Modifies a parameter vector. Comes with a variable that…",6,N],[8,r_ie,E,"Defines a common interface to line search methods.…",N,N],[10,r_Ed,E,"Set the initial parameter (starting point)",7,N],[10,r_Dd,E,"Set the search direction",7,N],[10,r_Fd,E,r_wa,7,[[[r_ba],[r_Va]],[r_ja,[r_ka]]]],[10,r_Gd,E,"Set the cost function value at the starting point as…",7,N],[10,r_Hd,E,"Set the gradient at the starting point as opposed to…",7,N],[10,r_Id,E,"calculate the initial cost function value using an…",7,[[[r_ba]],[r_ja,[r_ka]]]],[10,r_Jd,E,"calculate the initial gradient using an operator as…",7,[[[r_ba]],[r_ja,[r_ka]]]],[8,r_je,E,"Defines a common interface to methods which calculate…",N,N],[10,r_5a,E,r_wa,8,N],[10,r_Qd,E,r_xa,8,N],[10,r_Rd,E,r_xa,8,N],[8,r_ke,E,"Every method for the update of beta needs to implement…",N,N],[10,r_Sd,E,"Update beta Parameter 1: \\nabla f_k Parameter 2: \\nabla…",9,[[[r_ba],[T],[T],[T]],[r_Va]]],[8,r_le,E,r_ya,N,N],[10,"mul",E,r_ya,10,[[[r_ba],[T]],[U]]],[14,"check_param",E,"Release an `T` from an `Option<T>` if it is not `None`. If…",N,N],[8,r_me,E,r_za,N,N],[10,"scaled_sub",E,r_za,11,[[[r_ba],[U],[T]],["v"]]],[4,r_ne,E,"Indicates why the optimization algorithm stopped",N,N],[13,"NotTerminated",E,"In case it has not terminated yet",12,N],[13,"MaxItersReached",E,"Maximum number of iterations reached",12,N],[13,"TargetCostReached",E,"Target cost function value reached",12,N],[13,"TargetPrecisionReached",E,"Target precision reached",12,N],[13,"AcceptedStallIterExceeded",E,"Acceped stall iter exceeded",12,N],[13,"BestStallIterExceeded",E,"Best stall iter exceeded",12,N],[13,"LineSearchConditionMet",E,"Condition for Line search met",12,N],[13,r_Aa,E,r_Aa,12,N],[8,r_oe,E,E,N,N],[10,"eye",E,E,13,[[[r_Ja]],[r_ba]]],[10,"eye_like",E,E,13,[[[r_ba]],[r_ba]]],[14,"make_kv",E,"Creates an `ArgminKV` at compile time in order to avoid…",N,N],[3,r_pe,E,"A simple key-value storage",N,N],[12,"kv",E,"The actual key value storage",14,N],[8,r_qe,E,E,N,N],[10,T,E,E,15,[[[r_ba]],[r_ba]]],[3,r_re,E,"Return struct for all solvers.",N,N],[12,r_Td,E,"Final parameter vector",16,N],[12,"cost",E,"Final cost value",16,N],[12,"iters",E,"Number of iterations",16,N],[12,r_Ud,E,"Indicated whether it terminated or not",16,N],[12,r_2d,E,"Reason of termination",16,N],[8,r_se,E,"Dot/scalar product of `T` and `self` weighted by W (p^TWv)",N,N],[10,"weighted_dot",E,r_Oa,17,[[[r_ba],["v"],[T]],[U]]],[3,r_8e,E,E,N,N],[3,r_9e,E,"Storage for data needed by most solvers",N,N],[4,r_te,E,E,N,N],[13,"InvalidParameter",E,"Indicates and invalid parameter",18,N],[12,r_Ca,r_Ba,E,18,N],[13,"NotImplemented",r_fa,"Indicates that a function is not implemented",18,N],[12,r_Ca,r_Ba,E,18,N],[13,"NotInitialized",r_fa,"Indicates that a function is not initialized",18,N],[12,r_Ca,r_Ba,E,18,N],[13,"ConditionViolated",r_fa,"Indicates that a condition is violated",18,N],[12,r_Ca,r_Ba,E,18,N],[13,"CheckpointNotFound",r_fa,"Checkpoint was not found",18,N],[12,r_Ca,r_Ba,E,18,N],[13,"ImpossibleError",r_fa,"Indicates an impossible error",18,N],[12,r_Ca,r_Ba,E,18,N],[8,r_ue,r_fa,r_Da,N,N],[10,"norm",E,r_Da,19,[[[r_ba]],[U]]],[4,r_ve,E,E,N,N],[13,"Never",E,E,20,N],[13,"Every",E,E,20,N],[13,"Always",E,E,20,N],[3,r_af,E,E,N,N],[5,"load_checkpoint",E,E,N,[[["p"]],[r_ja,[r_ka]]]],[3,r_bf,E,"Container for `ArgminLog`gers",N,N],[8,r_we,E,r_Ea,N,N],[10,"sub",E,r_Ea,21,[[[r_ba],[T]],[U]]],[5,"set_handler",r_mb,"Register signal handler for Ctrl-C.",N,[[["f"]],[r_ja,[r_ka]]]],[4,r_Ha,E,"Ctrl-C error.",N,N],[13,"NoSuchSignal",E,"Signal could not be found from the system.",22,N],[13,"MultipleHandlers",E,"Ctrl-C signal handler already registered.",22,N],[13,"System",E,"Unexpected system error.",22,N],[4,r_xe,E,"A cross-platform way to represent Ctrl-C or program…",N,N],[13,"Ctrlc",E,"Ctrl-C",23,N],[13,"Termination",E,"Program termination Maps to `SIGTERM` on *nix,…",23,N],[13,"Other",E,"Other signal/event using platform-specific data",23,N],[6,"Signal",E,"Platform specific signal type",N,N],[8,r_ye,r_fa,r_Fa,N,N],[10,"div",E,r_Fa,24,[[[r_ba],[T]],[U]]],[3,r_cf,E,"A logger based on `slog`",N,N],[8,r_ze,E,"Compute the inverse (`T`) of `self`",N,N],[10,"inv",E,E,25,[[[r_ba]],[r_ja,[r_ka]]]],[3,r_df,E,E,N,N],[8,r_Ae,E,r_Ga,N,N],[10,"scaled_add",E,r_Ga,26,[[[r_ba],[U],[T]],["v"]]],[3,r_Ha,E,"The `Error` type, which can contain any failure.",N,N],[8,r_Be,E,r_Ia,N,N],[10,"add",E,r_Ia,27,[[[r_ba],[T]],[U]]],[0,"modcholesky",E,"Modified Cholesky decompositions Modified Cholesky…",N,N],[8,r_Ce,r_La,"Schnabel & Eskow algorithm (1999)",N,N],[11,"mod_cholesky_se99",E,"Computes the modified Cholesky decomposition with the SE99…",28,[[[r_ba]],[r_Ma]]],[8,r_De,E,"Gershgorin circles",N,N],[10,"gershgorin_circles",E,"Computes the Gershgorin Circles of a matrix",29,[[[r_ba]],["vec"]]],[0,"utils",E,"Utility functions",N,N],[5,"eigenvalues_2x2","argmin::prelude::modcholesky::utils","Computes the Eigenvalues of a 2x2 matrix",N,N],[5,"swap_columns",E,"Swaps columns `idx1` and `idx2` of matrix `mat`",N,N],[5,"swap_rows",E,"Swaps rows `idx1` and `idx2` of matrix `mat`",N,N],[5,"index_of_largest",E,"Returns the index of the largest element in a 1D array",N,[[[r_Ka]],[r_Ja]]],[5,"index_of_largest_abs",E,"Returns the index of the element with the largest absolute…",N,[[[r_Ka]],[r_Ja]]],[5,"index_to_permutation_mat",E,"Returns the permutation matrix for a vector of permuted…",N,N],[5,"diag_mat_from_arr",E,"Builds a diagonal matrix from a 1D slice",N,N],[5,"random_householder",E,"Returns a random Householder matrix of dimension `dim` and…",N,[[[r_Ja],["u8"]],[r_Ka,["ownedrepr","dim"]]]],[5,"random_diagonal",E,"Returns a random diagonal matrix with Eigenvalues…",N,N],[8,r_Ee,r_La,"Schnabel & Eskow algorithm (1990)",N,N],[11,"mod_cholesky_se90",E,"Computes the modified Cholesky decomposition with the SE90…",30,[[[r_ba]],[r_Ma]]],[8,r_Fe,E,"Gill, Murray and Wright (1981)",N,N],[11,"mod_cholesky_gmw81",E,"Computes the modified Cholesky decomposition with the…",31,[[[r_ba]],[r_Ma]]],[3,r_Ge,E,E,N,N],[12,"l",E,E,32,N],[12,"e",E,E,32,N],[12,"p",E,E,32,N],[8,r_He,r_fa,"Return param vector of all zeros (for now, this is a hack.…",N,N],[10,"zero_like",E,r_Na,33,[[[r_ba]],[r_ba]]],[10,"zero",E,r_Na,33,[[],[r_ba]]],[8,r_Ie,E,r_Oa,N,N],[10,"dot",E,r_Oa,34,[[[r_ba],[T]],[U]]],[3,r_ef,E,E,N,N],[3,r_ff,E,E,N,N],[0,"solver",r_aa,"Solvers",N,N],[0,r_fc,r_Ta,"Conjugate Gradient methods",N,N],[0,"cg",r_Pa,"Conjugate gradient method # References:",N,N],[3,r_Je,r_pb,"The conjugate gradient method is a solver for systems of…",N,N],[11,r_Sa,E,r_Ra,35,N],[11,"p",E,"Return the current search direction (This is needed by…",35,N],[11,"p_prev",E,"Return the previous search direction (This is needed by…",35,N],[11,"residual",E,"Return the current residual (This is needed by NewtonCG…",35,N],[0,"nonlinear_cg",r_Pa,"Nonlinear conjugate gradient method Important TODO: Find…",N,N],[3,r_Ke,r_qb,"The nonlinear conjugate gradient is a generalization of…",N,N],[11,r_Sa,E,"Constructor (Polak Ribiere Conjugate Gradient (PR-CG))",36,N],[11,"set_restart_iters",E,"Specifiy the number of iterations after which a restart…",36,[[[r_ba],[r_Qa]],[r_ba]]],[11,"set_restart_orthogonality",E,"Set the value for the orthogonality measure. Setting this…",36,[[[r_ba],[r_Va]],[r_ba]]],[0,"beta",r_Pa,"Beta update methods for nonlinear CG # Beta update methods",N,N],[3,r_Le,r_rb,"Fletcher and Reeves (FR) method TODO: Reference",N,N],[3,r_Me,E,"Polak and Ribiere (PR) method TODO: Reference",N,N],[3,r_Ne,E,"Polak and Ribiere Plus (PR+) method TODO: Reference",N,N],[3,r_Oe,E,"Hestenes and Stiefel (HS) method TODO: Reference",N,N],[11,r_Sa,E,r_Ra,37,[[],[r_ba]]],[11,r_Sa,E,r_Ra,38,[[],[r_ba]]],[11,r_Sa,E,r_Ra,39,[[],[r_ba]]],[11,r_Sa,E,r_Ra,40,[[],[r_ba]]],[0,"gradientdescent",r_Ta,"Gradient descent methods",N,N],[0,"steepestdescent","argmin::solver::gradientdescent","Steepest Descent method",N,N],[3,r_Pe,r_sb,"Steepest descent iteratively takes steps in the direction…",N,N],[11,r_Sa,E,r_Ra,41,N],[0,"landweber",r_Ta,"Landweber iteration",N,N],[3,r_Qe,r_tb,"The Landweber iteration is a solver for ill-posed linear…",N,N],[11,r_Sa,E,r_Ra,42,N],[0,"linesearch",r_Ta,"Line search methods",N,N],[0,"backtracking",r_Wa,"Backtracking line search algorithm * Backtracking line…",N,N],[3,r_Re,r_ub,"The Backtracking line search is a simple method to find a…",N,N],[11,r_Sa,E,r_Ra,43,[[["o"],["l"]],[r_ba]]],[11,r_Ua,E,r_Xa,43,N],[11,"set_rho",E,"Set contraction factor rho",43,[[[r_ba],[r_Va]],[r_ja,[r_ka]]]],[0,"condition",r_Wa,"Acceptance conditions # References:",N,N],[3,r_Te,r_vb,"Armijo Condition",N,N],[3,r_Ue,E,"Wolfe Condition",N,N],[3,r_Ve,E,"Strong Wolfe conditions",N,N],[3,r_We,E,"Goldstein conditions",N,N],[8,r_Se,E,"Needs to be implemented by everything that wants to be a…",N,N],[10,r_ac,E,"Evaluate the condition",44,[[[r_ba],[r_Va],[T],[r_Va],[T],[T],[r_Va]],[r_Sb]]],[10,r_9b,E,"Indicates whether this condition requires the computation…",44,[[[r_ba]],[r_Sb]]],[11,r_Sa,E,r_Ra,45,[[[r_Va]],[r_ja,[r_ka]]]],[11,r_Sa,E,r_Ra,46,[[[r_Va],[r_Va]],[r_ja,[r_ka]]]],[11,r_Sa,E,r_Ra,47,[[[r_Va],[r_Va]],[r_ja,[r_ka]]]],[11,r_Sa,E,r_Ra,48,[[[r_Va]],[r_ja,[r_ka]]]],[0,"hagerzhang",r_Wa,"Hager-Zhang line search algorithm * Hager-Zhang line search",N,N],[3,r_Xe,r_wb,"The Hager-Zhang line search is a method to find a step…",N,N],[11,r_Sa,E,r_Ra,49,[[["o"]],[r_ba]]],[11,r_Ua,E,r_Xa,49,N],[11,"set_delta",E,"set delta",49,[[[r_ba],[r_Va]],[r_ja,[r_ka]]]],[11,"set_sigma",E,"set sigma",49,[[[r_ba],[r_Va]],[r_ja,[r_ka]]]],[11,r_4a,E,"set epsilon",49,[[[r_ba],[r_Va]],[r_ja,[r_ka]]]],[11,"set_theta",E,"set theta",49,[[[r_ba],[r_Va]],[r_ja,[r_ka]]]],[11,r_1a,E,r_2a,49,[[[r_ba],[r_Va]],[r_ja,[r_ka]]]],[11,r_6a,E,"set eta",49,[[[r_ba],[r_Va]],[r_ja,[r_ka]]]],[11,r_Ya,E,r_Za,49,[[[r_ba],[r_Va],[r_Va]],[r_ja,[r_ka]]]],[0,"morethuente",r_Wa,"More-Thuente line search algorithm * More-Thuente line…",N,N],[3,r_Ye,r_xb,"The More-Thuente line search is a method to find a step…",N,N],[11,r_Sa,E,r_Ra,50,[[["o"]],[r_ba]]],[11,r_Ua,E,r_Xa,50,N],[11,"set_c",E,"Set c1 and c2 where 0 < c1 < c2 < 1.",50,[[[r_ba],[r_Va],[r_Va]],[r_ja,[r_ka]]]],[11,r_Ya,E,r_Za,50,[[[r_ba],[r_Va],[r_Va]],[r_ja,[r_ka]]]],[0,"newton",r_Ta,"Newton Methods",N,N],[0,"newton_cg",r_0a,"Newton-CG method TODO: Stop when search direction is close…",N,N],[3,r_Ze,r_yb,"The Newton-CG method (also called truncated Newton method)…",N,N],[11,r_Sa,E,r_Ra,51,N],[11,"set_curvature_threshold",E,"Set curvature threshold",51,[[[r_ba],[r_Va]],[r_ba]]],[0,"newton_method",r_0a,"Newton's method # References:",N,N],[3,r_0e,r_zb,"Newton's method iteratively finds the stationary points of…",N,N],[11,r_Sa,E,r_Ra,52,N],[11,r_1a,E,r_2a,52,[[[r_ba],[r_Va]],[r_ja,[r_ka]]]],[0,"quasinewton",r_Ta,"Quasi-Newton methods",N,N],[0,"bfgs","argmin::solver::quasinewton","References:",N,N],[3,"BFGS",r_Ab,"BFGS method",N,N],[11,r_Sa,E,r_Ra,53,N],[0,"simulatedannealing",r_Ta,E,N,N],[3,r_2e,r_Bb,"Simulated Annealing",N,N],[4,r_1e,E,"Temperature functions for Simulated Annealing.",N,N],[13,"TemperatureFast",E,"`t_i = t_init / i`",54,N],[13,"Boltzmann",E,"`t_i = t_init / ln(i)`",54,N],[13,"Exponential",E,"`t_i = t_init * x^i`",54,N],[13,"Custom",E,"User-provided temperature function. The first parameter…",54,N],[11,r_Sa,E,r_Ra,55,N],[11,"temp_func",E,"Set temperature function to one of the options in…",55,[[[r_ba],["satempfunc"]],[r_ba]]],[11,"stall_accepted",E,"The optimization stops after there has been no accepted…",55,[[[r_ba],[r_Qa]],[r_ba]]],[11,"stall_best",E,"The optimization stops after there has been no new best…",55,[[[r_ba],[r_Qa]],[r_ba]]],[11,"reannealing_fixed",E,"Start reannealing after `iter` iterations",55,[[[r_ba],[r_Qa]],[r_ba]]],[11,"reannealing_accepted",E,"Start reannealing after no accepted solution has been…",55,[[[r_ba],[r_Qa]],[r_ba]]],[11,"reannealing_best",E,"Start reannealing after no new best solution has been…",55,[[[r_ba],[r_Qa]],[r_ba]]],[0,"trustregion",r_Ta,"Argmin Trust region methods",N,N],[5,"reduction_ratio",r_3a,"Computes reduction ratio",N,[[[r_Va],[r_Va],[r_Va],[r_Va]],[r_Va]]],[0,"cauchypoint",E,"Cauchy Point # References:",N,N],[3,r_3e,r_Cb,"The Cauchy point is the minimum of the quadratic…",N,N],[11,r_Sa,E,r_Ra,56,[[["o"]],[r_ba]]],[0,"dogleg",r_3a,"Dogleg method # References:",N,N],[3,r_4e,r_Db,"The Dogleg method computes the intersection of the trust…",N,N],[11,r_Sa,E,r_Ra,57,[[["o"]],[r_ba]]],[0,"steihaug",r_3a,"Steihaug method # References:",N,N],[3,r_5e,r_Eb,"The Steihaug method is a conjugate gradients based…",N,N],[11,r_Sa,E,r_Ra,58,[[["o"]],[r_ba]]],[11,r_4a,E,"Set epsilon",58,[[[r_ba],[r_Va]],[r_ja,[r_ka]]]],[0,"trustregion_method",r_3a,"Trust region solver # References:",N,N],[3,r_6e,r_Fb,"The trust region method approximates the cost function…",N,N],[11,r_Sa,E,r_Ra,59,N],[11,r_5a,E,"set radius",59,[[[r_ba],[r_Va]],[r_ba]]],[11,"set_max_radius",E,"Set maximum radius",59,[[[r_ba],[r_Va]],[r_ba]]],[11,r_6a,E,"Set eta",59,[[[r_ba],[r_Va]],[r_ja,[r_ka]]]],[0,"testfunctions",r_aa,"Testfunctions # Testfunctions",N,N],[5,"mccorminck","argmin::testfunctions","McCorminck test function",N,N],[5,"himmelblau",E,"Himmelblau test function",N,N],[5,"sphere_derivative",E,"Derivative of sphere test function",N,N],[5,"schaffer_n2",E,"Schaffer test function No. 2",N,N],[5,"holder_table",E,"Holder table test function",N,N],[5,"rosenbrock_2d_hessian",E,"Hessian of 2D Rosenbrock function",N,N],[5,"rastrigin",E,r_7a,N,N],[5,"rosenbrock_2d",E,"2D Rosenbrock test function",N,N],[5,"ackley",E,r_8a,N,N],[5,"zero",E,"Zero test function",N,N],[5,"goldsteinprice",E,"Goldstein-Price test function",N,N],[5,"matyas",E,"Matyas test function",N,N],[5,"schaffer_n4",E,"Schaffer test function No. 4",N,N],[5,"booth",E,"Booth test function",N,N],[5,"eggholder",E,"Eggholder test function",N,N],[5,"picheny",E,"Picheny test function",N,N],[5,"rastrigin_a",E,r_7a,N,N],[5,"levy_n13",E,"Levy test function No. 13",N,N],[5,"cross_in_tray",E,"Cross-in-tray test function",N,N],[5,"sphere",E,"Sphere test function",N,N],[5,"zero_derivative",E,"Derivative of zero test function",N,N],[5,"threehumpcamel",E,"Three-hump camel test function",N,N],[5,"styblinski_tang",E,"Styblinski-Tang test function",N,N],[5,"levy",E,"Levy test function",N,N],[5,"rosenbrock_2d_derivative",E,"Derivative of 2D Rosenbrock function",N,N],[5,"easom",E,"Easom test function",N,N],[5,"rosenbrock",E,"Multidimensional Rosenbrock test function",N,N],[5,"ackley_param",E,r_8a,N,N],[5,"bukin_n6",E,"Bukin test function No. 6",N,N],[5,"beale",E,"Beale test function",N,N],[11,r_gb,r_9a,E,0,[[[T]],[T]]],[11,r_hb,E,E,0,[[[r_ba]],[U]]],[11,r_ib,E,E,0,[[[r_ba]],[T]]],[11,r_jb,E,E,0,N],[11,r_ab,E,E,0,[[[U]],[r_ja]]],[11,r_bb,E,E,0,[[[r_ba]],[T]]],[11,r_cb,E,E,0,[[[r_ba]],[r_db]]],[11,r_eb,E,E,0,[[[r_ba]],[T]]],[11,r_fb,E,E,0,[[[r_ba]],[r_ja]]],[11,r_gb,r_fa,E,60,[[[T]],[T]]],[11,r_hb,E,E,60,[[[r_ba]],[U]]],[11,r_ab,E,E,60,[[[U]],[r_ja]]],[11,r_bb,E,E,60,[[[r_ba]],[T]]],[11,r_cb,E,E,60,[[[r_ba]],[r_db]]],[11,r_eb,E,E,60,[[[r_ba]],[T]]],[11,r_fb,E,E,60,[[[r_ba]],[r_ja]]],[11,r_kb,E,E,12,[[[r_ba]],[r_lb]]],[11,r_gb,E,E,12,[[[T]],[T]]],[11,r_hb,E,E,12,[[[r_ba]],[U]]],[11,r_ib,E,E,12,[[[r_ba]],[T]]],[11,r_jb,E,E,12,N],[11,r_ab,E,E,12,[[[U]],[r_ja]]],[11,r_bb,E,E,12,[[[r_ba]],[T]]],[11,r_cb,E,E,12,[[[r_ba]],[r_db]]],[11,r_eb,E,E,12,[[[r_ba]],[T]]],[11,r_fb,E,E,12,[[[r_ba]],[r_ja]]],[11,r_kb,E,E,14,[[[r_ba]],[r_lb]]],[11,r_gb,E,E,14,[[[T]],[T]]],[11,r_hb,E,E,14,[[[r_ba]],[U]]],[11,r_ib,E,E,14,[[[r_ba]],[T]]],[11,r_jb,E,E,14,N],[11,r_ab,E,E,14,[[[U]],[r_ja]]],[11,r_bb,E,E,14,[[[r_ba]],[T]]],[11,r_cb,E,E,14,[[[r_ba]],[r_db]]],[11,r_eb,E,E,14,[[[r_ba]],[T]]],[11,r_fb,E,E,14,[[[r_ba]],[r_ja]]],[11,r_kb,E,E,16,[[[r_ba]],[r_lb]]],[11,r_gb,E,E,16,[[[T]],[T]]],[11,r_hb,E,E,16,[[[r_ba]],[U]]],[11,r_ib,E,E,16,[[[r_ba]],[T]]],[11,r_jb,E,E,16,N],[11,r_ab,E,E,16,[[[U]],[r_ja]]],[11,r_bb,E,E,16,[[[r_ba]],[T]]],[11,r_cb,E,E,16,[[[r_ba]],[r_db]]],[11,r_eb,E,E,16,[[[r_ba]],[T]]],[11,r_fb,E,E,16,[[[r_ba]],[r_ja]]],[11,r_gb,E,E,61,[[[T]],[T]]],[11,r_hb,E,E,61,[[[r_ba]],[U]]],[11,r_ib,E,E,61,[[[r_ba]],[T]]],[11,r_jb,E,E,61,N],[11,r_ab,E,E,61,[[[U]],[r_ja]]],[11,r_bb,E,E,61,[[[r_ba]],[T]]],[11,r_cb,E,E,61,[[[r_ba]],[r_db]]],[11,r_eb,E,E,61,[[[r_ba]],[T]]],[11,r_fb,E,E,61,[[[r_ba]],[r_ja]]],[11,r_gb,E,E,62,[[[T]],[T]]],[11,r_hb,E,E,62,[[[r_ba]],[U]]],[11,r_ib,E,E,62,[[[r_ba]],[T]]],[11,r_jb,E,E,62,N],[11,r_ab,E,E,62,[[[U]],[r_ja]]],[11,r_bb,E,E,62,[[[r_ba]],[T]]],[11,r_cb,E,E,62,[[[r_ba]],[r_db]]],[11,r_eb,E,E,62,[[[r_ba]],[T]]],[11,r_fb,E,E,62,[[[r_ba]],[r_ja]]],[11,r_kb,E,E,18,[[[r_ba]],[r_lb]]],[11,r_gb,E,E,18,[[[T]],[T]]],[11,r_hb,E,E,18,[[[r_ba]],[U]]],[11,r_ab,E,E,18,[[[U]],[r_ja]]],[11,r_bb,E,E,18,[[[r_ba]],[T]]],[11,r_cb,E,E,18,[[[r_ba]],[r_db]]],[11,r_eb,E,E,18,[[[r_ba]],[T]]],[11,r_fb,E,E,18,[[[r_ba]],[r_ja]]],[11,r_nb,E,E,18,[[[r_ba]],[r_ob]]],[11,r_gb,E,E,20,[[[T]],[T]]],[11,r_hb,E,E,20,[[[r_ba]],[U]]],[11,r_ib,E,E,20,[[[r_ba]],[T]]],[11,r_jb,E,E,20,N],[11,r_ab,E,E,20,[[[U]],[r_ja]]],[11,r_bb,E,E,20,[[[r_ba]],[T]]],[11,r_cb,E,E,20,[[[r_ba]],[r_db]]],[11,r_eb,E,E,20,[[[r_ba]],[T]]],[11,r_fb,E,E,20,[[[r_ba]],[r_ja]]],[11,r_gb,E,E,63,[[[T]],[T]]],[11,r_hb,E,E,63,[[[r_ba]],[U]]],[11,r_ib,E,E,63,[[[r_ba]],[T]]],[11,r_jb,E,E,63,N],[11,r_ab,E,E,63,[[[U]],[r_ja]]],[11,r_bb,E,E,63,[[[r_ba]],[T]]],[11,r_cb,E,E,63,[[[r_ba]],[r_db]]],[11,r_eb,E,E,63,[[[r_ba]],[T]]],[11,r_fb,E,E,63,[[[r_ba]],[r_ja]]],[11,r_gb,E,E,64,[[[T]],[T]]],[11,r_hb,E,E,64,[[[r_ba]],[U]]],[11,r_ib,E,E,64,[[[r_ba]],[T]]],[11,r_jb,E,E,64,N],[11,r_ab,E,E,64,[[[U]],[r_ja]]],[11,r_bb,E,E,64,[[[r_ba]],[T]]],[11,r_cb,E,E,64,[[[r_ba]],[r_db]]],[11,r_eb,E,E,64,[[[r_ba]],[T]]],[11,r_fb,E,E,64,[[[r_ba]],[r_ja]]],[11,r_kb,r_mb,E,22,[[[r_ba]],[r_lb]]],[11,r_gb,E,E,22,[[[T]],[T]]],[11,r_hb,E,E,22,[[[r_ba]],[U]]],[11,r_ab,E,E,22,[[[U]],[r_ja]]],[11,r_bb,E,E,22,[[[r_ba]],[T]]],[11,r_cb,E,E,22,[[[r_ba]],[r_db]]],[11,r_eb,E,E,22,[[[r_ba]],[T]]],[11,r_fb,E,E,22,[[[r_ba]],[r_ja]]],[11,r_nb,E,E,22,[[[r_ba]],[r_ob]]],[11,r_gb,E,E,23,[[[T]],[T]]],[11,r_hb,E,E,23,[[[r_ba]],[U]]],[11,r_ab,E,E,23,[[[U]],[r_ja]]],[11,r_bb,E,E,23,[[[r_ba]],[T]]],[11,r_cb,E,E,23,[[[r_ba]],[r_db]]],[11,r_eb,E,E,23,[[[r_ba]],[T]]],[11,r_fb,E,E,23,[[[r_ba]],[r_ja]]],[11,r_gb,r_fa,E,65,[[[T]],[T]]],[11,r_hb,E,E,65,[[[r_ba]],[U]]],[11,r_ib,E,E,65,[[[r_ba]],[T]]],[11,r_jb,E,E,65,N],[11,r_ab,E,E,65,[[[U]],[r_ja]]],[11,r_bb,E,E,65,[[[r_ba]],[T]]],[11,r_cb,E,E,65,[[[r_ba]],[r_db]]],[11,r_eb,E,E,65,[[[r_ba]],[T]]],[11,r_fb,E,E,65,[[[r_ba]],[r_ja]]],[11,r_gb,E,E,66,[[[T]],[T]]],[11,r_hb,E,E,66,[[[r_ba]],[U]]],[11,r_ib,E,E,66,[[[r_ba]],[T]]],[11,r_jb,E,E,66,N],[11,r_ab,E,E,66,[[[U]],[r_ja]]],[11,r_bb,E,E,66,[[[r_ba]],[T]]],[11,r_cb,E,E,66,[[[r_ba]],[r_db]]],[11,r_eb,E,E,66,[[[r_ba]],[T]]],[11,r_fb,E,E,66,[[[r_ba]],[r_ja]]],[11,r_kb,E,E,67,[[[r_ba]],[r_lb]]],[11,r_gb,E,E,67,[[[T]],[T]]],[11,r_hb,E,E,67,[[[r_ba]],[U]]],[11,r_ab,E,E,67,[[[U]],[r_ja]]],[11,r_bb,E,E,67,[[[r_ba]],[T]]],[11,r_cb,E,E,67,[[[r_ba]],[r_db]]],[11,r_eb,E,E,67,[[[r_ba]],[T]]],[11,r_fb,E,E,67,[[[r_ba]],[r_ja]]],[11,r_nb,E,E,67,[[[r_ba]],[r_ob]]],[11,r_gb,r_La,E,32,[[[T]],[T]]],[11,r_hb,E,E,32,[[[r_ba]],[U]]],[11,r_ab,E,E,32,[[[U]],[r_ja]]],[11,r_bb,E,E,32,[[[r_ba]],[T]]],[11,r_cb,E,E,32,[[[r_ba]],[r_db]]],[11,r_eb,E,E,32,[[[r_ba]],[T]]],[11,r_fb,E,E,32,[[[r_ba]],[r_ja]]],[11,r_gb,r_fa,E,68,[[[T]],[T]]],[11,r_hb,E,E,68,[[[r_ba]],[U]]],[11,r_ab,E,E,68,[[[U]],[r_ja]]],[11,r_bb,E,E,68,[[[r_ba]],[T]]],[11,r_cb,E,E,68,[[[r_ba]],[r_db]]],[11,r_eb,E,E,68,[[[r_ba]],[T]]],[11,r_fb,E,E,68,[[[r_ba]],[r_ja]]],[11,r_gb,E,E,69,[[[T]],[T]]],[11,r_hb,E,E,69,[[[r_ba]],[U]]],[11,r_ib,E,E,69,[[[r_ba]],[T]]],[11,r_jb,E,E,69,N],[11,r_ab,E,E,69,[[[U]],[r_ja]]],[11,r_bb,E,E,69,[[[r_ba]],[T]]],[11,r_cb,E,E,69,[[[r_ba]],[r_db]]],[11,r_eb,E,E,69,[[[r_ba]],[T]]],[11,r_fb,E,E,69,[[[r_ba]],[r_ja]]],[11,r_gb,r_pb,E,35,[[[T]],[T]]],[11,r_hb,E,E,35,[[[r_ba]],[U]]],[11,r_ib,E,E,35,[[[r_ba]],[T]]],[11,r_jb,E,E,35,N],[11,r_ab,E,E,35,[[[U]],[r_ja]]],[11,r_bb,E,E,35,[[[r_ba]],[T]]],[11,r_cb,E,E,35,[[[r_ba]],[r_db]]],[11,r_eb,E,E,35,[[[r_ba]],[T]]],[11,r_fb,E,E,35,[[[r_ba]],[r_ja]]],[11,r_gb,r_qb,E,36,[[[T]],[T]]],[11,r_hb,E,E,36,[[[r_ba]],[U]]],[11,r_ab,E,E,36,[[[U]],[r_ja]]],[11,r_bb,E,E,36,[[[r_ba]],[T]]],[11,r_cb,E,E,36,[[[r_ba]],[r_db]]],[11,r_eb,E,E,36,[[[r_ba]],[T]]],[11,r_fb,E,E,36,[[[r_ba]],[r_ja]]],[11,r_gb,r_rb,E,37,[[[T]],[T]]],[11,r_hb,E,E,37,[[[r_ba]],[U]]],[11,r_ib,E,E,37,[[[r_ba]],[T]]],[11,r_jb,E,E,37,N],[11,r_ab,E,E,37,[[[U]],[r_ja]]],[11,r_bb,E,E,37,[[[r_ba]],[T]]],[11,r_cb,E,E,37,[[[r_ba]],[r_db]]],[11,r_eb,E,E,37,[[[r_ba]],[T]]],[11,r_fb,E,E,37,[[[r_ba]],[r_ja]]],[11,r_gb,E,E,38,[[[T]],[T]]],[11,r_hb,E,E,38,[[[r_ba]],[U]]],[11,r_ib,E,E,38,[[[r_ba]],[T]]],[11,r_jb,E,E,38,N],[11,r_ab,E,E,38,[[[U]],[r_ja]]],[11,r_bb,E,E,38,[[[r_ba]],[T]]],[11,r_cb,E,E,38,[[[r_ba]],[r_db]]],[11,r_eb,E,E,38,[[[r_ba]],[T]]],[11,r_fb,E,E,38,[[[r_ba]],[r_ja]]],[11,r_gb,E,E,39,[[[T]],[T]]],[11,r_hb,E,E,39,[[[r_ba]],[U]]],[11,r_ib,E,E,39,[[[r_ba]],[T]]],[11,r_jb,E,E,39,N],[11,r_ab,E,E,39,[[[U]],[r_ja]]],[11,r_bb,E,E,39,[[[r_ba]],[T]]],[11,r_cb,E,E,39,[[[r_ba]],[r_db]]],[11,r_eb,E,E,39,[[[r_ba]],[T]]],[11,r_fb,E,E,39,[[[r_ba]],[r_ja]]],[11,r_gb,E,E,40,[[[T]],[T]]],[11,r_hb,E,E,40,[[[r_ba]],[U]]],[11,r_ib,E,E,40,[[[r_ba]],[T]]],[11,r_jb,E,E,40,N],[11,r_ab,E,E,40,[[[U]],[r_ja]]],[11,r_bb,E,E,40,[[[r_ba]],[T]]],[11,r_cb,E,E,40,[[[r_ba]],[r_db]]],[11,r_eb,E,E,40,[[[r_ba]],[T]]],[11,r_fb,E,E,40,[[[r_ba]],[r_ja]]],[11,r_gb,r_sb,E,41,[[[T]],[T]]],[11,r_hb,E,E,41,[[[r_ba]],[U]]],[11,r_ab,E,E,41,[[[U]],[r_ja]]],[11,r_bb,E,E,41,[[[r_ba]],[T]]],[11,r_cb,E,E,41,[[[r_ba]],[r_db]]],[11,r_eb,E,E,41,[[[r_ba]],[T]]],[11,r_fb,E,E,41,[[[r_ba]],[r_ja]]],[11,r_gb,r_tb,E,42,[[[T]],[T]]],[11,r_hb,E,E,42,[[[r_ba]],[U]]],[11,r_ab,E,E,42,[[[U]],[r_ja]]],[11,r_bb,E,E,42,[[[r_ba]],[T]]],[11,r_cb,E,E,42,[[[r_ba]],[r_db]]],[11,r_eb,E,E,42,[[[r_ba]],[T]]],[11,r_fb,E,E,42,[[[r_ba]],[r_ja]]],[11,r_gb,r_ub,E,43,[[[T]],[T]]],[11,r_hb,E,E,43,[[[r_ba]],[U]]],[11,r_ab,E,E,43,[[[U]],[r_ja]]],[11,r_bb,E,E,43,[[[r_ba]],[T]]],[11,r_cb,E,E,43,[[[r_ba]],[r_db]]],[11,r_eb,E,E,43,[[[r_ba]],[T]]],[11,r_fb,E,E,43,[[[r_ba]],[r_ja]]],[11,r_gb,r_vb,E,45,[[[T]],[T]]],[11,r_hb,E,E,45,[[[r_ba]],[U]]],[11,r_ib,E,E,45,[[[r_ba]],[T]]],[11,r_jb,E,E,45,N],[11,r_ab,E,E,45,[[[U]],[r_ja]]],[11,r_bb,E,E,45,[[[r_ba]],[T]]],[11,r_cb,E,E,45,[[[r_ba]],[r_db]]],[11,r_eb,E,E,45,[[[r_ba]],[T]]],[11,r_fb,E,E,45,[[[r_ba]],[r_ja]]],[11,r_gb,E,E,46,[[[T]],[T]]],[11,r_hb,E,E,46,[[[r_ba]],[U]]],[11,r_ib,E,E,46,[[[r_ba]],[T]]],[11,r_jb,E,E,46,N],[11,r_ab,E,E,46,[[[U]],[r_ja]]],[11,r_bb,E,E,46,[[[r_ba]],[T]]],[11,r_cb,E,E,46,[[[r_ba]],[r_db]]],[11,r_eb,E,E,46,[[[r_ba]],[T]]],[11,r_fb,E,E,46,[[[r_ba]],[r_ja]]],[11,r_gb,E,E,47,[[[T]],[T]]],[11,r_hb,E,E,47,[[[r_ba]],[U]]],[11,r_ib,E,E,47,[[[r_ba]],[T]]],[11,r_jb,E,E,47,N],[11,r_ab,E,E,47,[[[U]],[r_ja]]],[11,r_bb,E,E,47,[[[r_ba]],[T]]],[11,r_cb,E,E,47,[[[r_ba]],[r_db]]],[11,r_eb,E,E,47,[[[r_ba]],[T]]],[11,r_fb,E,E,47,[[[r_ba]],[r_ja]]],[11,r_gb,E,E,48,[[[T]],[T]]],[11,r_hb,E,E,48,[[[r_ba]],[U]]],[11,r_ib,E,E,48,[[[r_ba]],[T]]],[11,r_jb,E,E,48,N],[11,r_ab,E,E,48,[[[U]],[r_ja]]],[11,r_bb,E,E,48,[[[r_ba]],[T]]],[11,r_cb,E,E,48,[[[r_ba]],[r_db]]],[11,r_eb,E,E,48,[[[r_ba]],[T]]],[11,r_fb,E,E,48,[[[r_ba]],[r_ja]]],[11,r_gb,r_wb,E,49,[[[T]],[T]]],[11,r_hb,E,E,49,[[[r_ba]],[U]]],[11,r_ab,E,E,49,[[[U]],[r_ja]]],[11,r_bb,E,E,49,[[[r_ba]],[T]]],[11,r_cb,E,E,49,[[[r_ba]],[r_db]]],[11,r_eb,E,E,49,[[[r_ba]],[T]]],[11,r_fb,E,E,49,[[[r_ba]],[r_ja]]],[11,r_gb,r_xb,E,50,[[[T]],[T]]],[11,r_hb,E,E,50,[[[r_ba]],[U]]],[11,r_ab,E,E,50,[[[U]],[r_ja]]],[11,r_bb,E,E,50,[[[r_ba]],[T]]],[11,r_cb,E,E,50,[[[r_ba]],[r_db]]],[11,r_eb,E,E,50,[[[r_ba]],[T]]],[11,r_fb,E,E,50,[[[r_ba]],[r_ja]]],[11,r_gb,r_yb,E,51,[[[T]],[T]]],[11,r_hb,E,E,51,[[[r_ba]],[U]]],[11,r_ab,E,E,51,[[[U]],[r_ja]]],[11,r_bb,E,E,51,[[[r_ba]],[T]]],[11,r_cb,E,E,51,[[[r_ba]],[r_db]]],[11,r_eb,E,E,51,[[[r_ba]],[T]]],[11,r_fb,E,E,51,[[[r_ba]],[r_ja]]],[11,r_gb,r_zb,E,52,[[[T]],[T]]],[11,r_hb,E,E,52,[[[r_ba]],[U]]],[11,r_ab,E,E,52,[[[U]],[r_ja]]],[11,r_bb,E,E,52,[[[r_ba]],[T]]],[11,r_cb,E,E,52,[[[r_ba]],[r_db]]],[11,r_eb,E,E,52,[[[r_ba]],[T]]],[11,r_fb,E,E,52,[[[r_ba]],[r_ja]]],[11,r_gb,r_Ab,E,53,[[[T]],[T]]],[11,r_hb,E,E,53,[[[r_ba]],[U]]],[11,r_ab,E,E,53,[[[U]],[r_ja]]],[11,r_bb,E,E,53,[[[r_ba]],[T]]],[11,r_cb,E,E,53,[[[r_ba]],[r_db]]],[11,r_eb,E,E,53,[[[r_ba]],[T]]],[11,r_fb,E,E,53,[[[r_ba]],[r_ja]]],[11,r_gb,r_Bb,E,55,[[[T]],[T]]],[11,r_hb,E,E,55,[[[r_ba]],[U]]],[11,r_ab,E,E,55,[[[U]],[r_ja]]],[11,r_bb,E,E,55,[[[r_ba]],[T]]],[11,r_cb,E,E,55,[[[r_ba]],[r_db]]],[11,r_eb,E,E,55,[[[r_ba]],[T]]],[11,r_fb,E,E,55,[[[r_ba]],[r_ja]]],[11,r_gb,E,E,54,[[[T]],[T]]],[11,r_hb,E,E,54,[[[r_ba]],[U]]],[11,r_ab,E,E,54,[[[U]],[r_ja]]],[11,r_bb,E,E,54,[[[r_ba]],[T]]],[11,r_cb,E,E,54,[[[r_ba]],[r_db]]],[11,r_eb,E,E,54,[[[r_ba]],[T]]],[11,r_fb,E,E,54,[[[r_ba]],[r_ja]]],[11,r_gb,r_Cb,E,56,[[[T]],[T]]],[11,r_hb,E,E,56,[[[r_ba]],[U]]],[11,r_ab,E,E,56,[[[U]],[r_ja]]],[11,r_bb,E,E,56,[[[r_ba]],[T]]],[11,r_cb,E,E,56,[[[r_ba]],[r_db]]],[11,r_eb,E,E,56,[[[r_ba]],[T]]],[11,r_fb,E,E,56,[[[r_ba]],[r_ja]]],[11,r_gb,r_Db,E,57,[[[T]],[T]]],[11,r_hb,E,E,57,[[[r_ba]],[U]]],[11,r_ab,E,E,57,[[[U]],[r_ja]]],[11,r_bb,E,E,57,[[[r_ba]],[T]]],[11,r_cb,E,E,57,[[[r_ba]],[r_db]]],[11,r_eb,E,E,57,[[[r_ba]],[T]]],[11,r_fb,E,E,57,[[[r_ba]],[r_ja]]],[11,r_gb,r_Eb,E,58,[[[T]],[T]]],[11,r_hb,E,E,58,[[[r_ba]],[U]]],[11,r_ab,E,E,58,[[[U]],[r_ja]]],[11,r_bb,E,E,58,[[[r_ba]],[T]]],[11,r_cb,E,E,58,[[[r_ba]],[r_db]]],[11,r_eb,E,E,58,[[[r_ba]],[T]]],[11,r_fb,E,E,58,[[[r_ba]],[r_ja]]],[11,r_gb,r_Fb,E,59,[[[T]],[T]]],[11,r_hb,E,E,59,[[[r_ba]],[U]]],[11,r_ab,E,E,59,[[[U]],[r_ja]]],[11,r_bb,E,E,59,[[[r_ba]],[T]]],[11,r_cb,E,E,59,[[[r_ba]],[r_db]]],[11,r_eb,E,E,59,[[[r_ba]],[T]]],[11,r_fb,E,E,59,[[[r_ba]],[r_ja]]],[11,r_Nb,r_fa,E,18,[[[r_ba],[r_Gb]],[r_ja,[r_ka]]]],[11,r_Nb,E,E,14,[[[r_ba],[r_Gb]],[r_ja,[r_ka]]]],[11,r_Nb,E,E,12,[[[r_ba],[r_Gb]],[r_ja,[r_ka]]]],[11,r_Nb,E,E,16,[[[r_ba],[r_Gb]],[r_ja,[r_ka]]]],[11,r_kc,E,E,16,[[[r_ba],[r_la]],[r_Hb]]],[11,r_kc,E,E,20,[[[r_ba],[r_Jb]],[r_Hb]]],[11,r_kc,E,E,14,[[[r_ba],[r_pa]],[r_Hb]]],[11,r_kc,E,E,12,[[[r_ba],[r_Ib]],[r_Hb]]],[11,r_kc,E,E,66,[[[r_ba],[r_Lb]],[r_Hb]]],[11,r_Kb,E,E,20,[[[r_Mb]],[r_ja,[r_Jb]]]],[11,r_Kb,E,E,12,[[[r_Mb]],[r_ja,[r_Ib]]]],[11,r_Kb,E,E,61,[[[r_Mb]],[r_ja,[r_Qb]]]],[11,r_Kb,E,E,16,[[[r_Mb]],[r_ja,[r_la]]]],[11,r_Kb,E,E,66,[[[r_Mb]],[r_ja,[r_Lb]]]],[11,r_Kb,E,E,14,[[[r_Mb]],[r_ja,[r_pa]]]],[11,r_Kb,E,E,69,[[[r_Mb]],[r_ja,[r_Rb]]]],[11,r_Kb,E,E,62,[[[r_Mb]],[r_ja,[r_6b]]]],[11,r_Nb,E,E,12,[[[r_ba],[r_Gb]],[r_ja,[r_ka]]]],[11,r_Nb,E,E,18,[[[r_ba],[r_Gb]],[r_ja,[r_ka]]]],[11,r_Nb,E,E,69,[[[r_ba],[r_Gb]],[r_ja,[r_ka]]]],[11,r_Nb,E,E,20,[[[r_ba],[r_Gb]],[r_ja,[r_ka]]]],[11,r_Nb,E,E,14,[[[r_ba],[r_Gb]],[r_ja,[r_ka]]]],[11,r_Nb,E,E,16,[[[r_ba],[r_Gb]],[r_ja,[r_ka]]]],[11,r_Nb,E,E,66,[[[r_ba],[r_Gb]],[r_ja,[r_ka]]]],[11,r_Nb,E,E,62,[[[r_ba],[r_Gb]],[r_ja,[r_ka]]]],[11,r_Nb,E,E,61,[[[r_ba],[r_Gb]],[r_ja,[r_ka]]]],[11,r_Ob,E,E,66,N],[11,r_Ob,E,E,20,N],[11,r_Ob,E,E,14,N],[11,r_Ob,E,E,12,N],[11,r_sa,E,E,61,N],[11,r_ta,E,E,61,N],[11,r_ua,E,E,61,N],[11,r_va,E,E,61,N],[11,r_sa,E,E,69,N],[11,r_ta,E,E,69,N],[11,r_ua,E,E,69,N],[11,r_va,E,E,69,N],[11,r_Pb,E,E,64,[[],[r_3b]]],[11,r_Pb,E,E,61,[[],[r_Qb]]],[11,r_Pb,E,E,12,[[],[r_Ib]]],[11,r_Pb,E,E,63,[[],[r_5b]]],[11,r_Pb,E,E,16,[[],[r_la]]],[11,r_Pb,E,E,69,[[],[r_Rb]]],[11,r_Pb,E,E,14,[[],[r_pa]]],[11,r_Pb,E,E,66,[[],[r_Lb]]],[11,r_Pb,E,E,20,[[],[r_Jb]]],[11,"from_iter",E,E,14,[[["i"]],[r_pa]]],[11,"eq",E,E,16,[[[r_ba],[r_la]],[r_Sb]]],[11,"eq",E,E,12,[[[r_ba],[r_Ib]],[r_Sb]]],[11,"eq",E,E,20,[[[r_ba],[r_Jb]],[r_Sb]]],[11,"ne",E,E,20,[[[r_ba],[r_Jb]],[r_Sb]]],[11,"eq",E,E,14,[[[r_ba],[r_pa]],[r_Sb]]],[11,"ne",E,E,14,[[[r_ba],[r_pa]],[r_Sb]]],[11,"eq",E,E,66,[[[r_ba],[r_Lb]],[r_Sb]]],[11,"ne",E,E,66,[[[r_ba],[r_Lb]],[r_Sb]]],[11,"extend",E,E,14,N],[11,r_Tb,E,E,69,[[[r_ba],[r_Ub]],[r_ja]]],[11,r_Tb,E,E,66,[[[r_ba],[r_Ub]],[r_ja]]],[11,r_Tb,E,E,61,[[[r_ba],[r_Ub]],[r_ja]]],[11,r_Tb,E,E,16,[[[r_ba],[r_Ub]],[r_ja]]],[11,r_Tb,E,E,20,[[[r_ba],[r_Ub]],[r_ja]]],[11,r_Tb,E,E,14,[[[r_ba],[r_Ub]],[r_ja]]],[11,r_Tb,E,E,12,[[[r_ba],[r_Ub]],[r_ja]]],[11,r_Tb,E,E,62,[[[r_ba],[r_Ub]],[r_ja]]],[11,r_Vb,E,E,68,[[[r_ba],[T]],[r_ja,[r_ka]]]],[11,r_Vb,E,E,63,[[[r_ba],[T]],[r_ja,[r_ka]]]],[11,r_Wb,E,E,14,[[[r_ba],[r_pa]],[r_Xb,[r_Hb]]]],[11,"lt",E,E,14,[[[r_ba],[r_pa]],[r_Sb]]],[11,"le",E,E,14,[[[r_ba],[r_pa]],[r_Sb]]],[11,"gt",E,E,14,[[[r_ba],[r_pa]],[r_Sb]]],[11,"ge",E,E,14,[[[r_ba],[r_pa]],[r_Sb]]],[11,r_Wb,E,E,12,[[[r_ba],[r_Ib]],[r_Xb,[r_Hb]]]],[11,r_Wb,E,E,16,[[[r_ba],[r_la]],[r_Xb,[r_Hb]]]],[11,r_Wb,E,E,20,[[[r_ba],[r_Jb]],[r_Xb,[r_Hb]]]],[11,"lt",E,E,20,[[[r_ba],[r_Jb]],[r_Sb]]],[11,"le",E,E,20,[[[r_ba],[r_Jb]],[r_Sb]]],[11,"gt",E,E,20,[[[r_ba],[r_Jb]],[r_Sb]]],[11,"ge",E,E,20,[[[r_ba],[r_Jb]],[r_Sb]]],[11,r_Wb,E,E,66,[[[r_ba],[r_Lb]],[r_Xb,[r_Hb]]]],[11,"lt",E,E,66,[[[r_ba],[r_Lb]],[r_Sb]]],[11,"le",E,E,66,[[[r_ba],[r_Lb]],[r_Sb]]],[11,"gt",E,E,66,[[[r_ba],[r_Lb]],[r_Sb]]],[11,"ge",E,E,66,[[[r_ba],[r_Lb]],[r_Sb]]],[11,r_Yb,E,r_0b,64,[[[r_ba],[r_Sc],[r_pa]],[r_ja,[r_ka]]]],[11,r_Zb,E,r_1b,64,[[[r_ba],[r_pa]],[r_ja,[r_ka]]]],[11,r_Yb,E,r_0b,65,[[[r_ba],[r_Sc],[r_pa]],[r_ja,[r_ka]]]],[11,r_Zb,E,r_1b,65,[[[r_ba],[r_pa]],[r_ja,[r_ka]]]],[11,r_6d,E,E,18,[[[r_ba]],[r_Xb,[r_Sc]]]],[11,r_7b,E,E,18,[[[r_ba]],[r_Xb,[r_ob]]]],[11,r_2b,E,E,18,[[[r_ba]],[r_Xb,[r_2b]]]],[11,r_4b,E,E,64,[[[r_ba]],[r_3b]]],[11,r_4b,E,E,66,[[[r_ba]],[r_Lb]]],[11,r_4b,E,E,16,[[[r_ba]],[r_la]]],[11,r_4b,E,E,61,[[[r_ba]],[r_Qb]]],[11,r_4b,E,E,65,[[[r_ba]],[r_5d]]],[11,r_4b,E,E,63,[[[r_ba]],[r_5b]]],[11,r_4b,E,E,20,[[[r_ba]],[r_Jb]]],[11,r_4b,E,E,62,[[[r_ba]],[r_6b]]],[11,r_4b,E,E,12,[[[r_ba]],[r_Ib]]],[11,r_4b,E,E,14,[[[r_ba]],[r_pa]]],[11,r_4b,E,E,69,[[[r_ba]],[r_Rb]]],[11,r_Nb,r_mb,E,22,[[[r_ba],[r_Gb]],[r_ja,[r_ka]]]],[11,"description",E,E,22,[[[r_ba]],[r_Sc]]],[11,r_7b,E,E,22,[[[r_ba]],[r_Xb,[r_ka]]]],[11,r_Nb,E,E,23,[[[r_ba],[r_Gb]],[r_ja,[r_ka]]]],[11,r_Nb,E,E,22,[[[r_ba],[r_Gb]],[r_ja,[r_ka]]]],[11,r_gb,E,E,22,[[[r_ka]],[r_ka]]],[11,r_Nb,r_fa,E,67,[[[r_ba],[r_Gb]],[r_ja,[r_ka]]]],[11,r_nb,E,E,67,[[[r_ba]],[r_ob]]],[11,"as_ref",E,E,67,[[[r_ba]],[r_ob]]],[11,r_Nb,E,E,67,[[[r_ba],[r_Gb]],[r_ja,[r_ka]]]],[11,r_gb,E,E,67,[[["f"]],[r_ka]]],[11,r_Pb,r_9a,E,0,[[],[r_8b]]],[11,r_4b,E,E,0,[[[r_ba]],[r_8b]]],[11,r_ac,r_vb,E,45,[[[r_ba],[r_Va],[T],[r_Va],[T],[T],[r_Va]],[r_Sb]]],[11,r_9b,E,E,45,[[[r_ba]],[r_Sb]]],[11,r_ac,E,E,46,[[[r_ba],[r_Va],[T],[r_Va],[T],[T],[r_Va]],[r_Sb]]],[11,r_9b,E,E,46,[[[r_ba]],[r_Sb]]],[11,r_ac,E,E,47,[[[r_ba],[r_Va],[T],[r_Va],[T],[T],[r_Va]],[r_Sb]]],[11,r_9b,E,E,47,[[[r_ba]],[r_Sb]]],[11,r_ac,E,E,48,[[[r_ba],[r_Va],[T],[r_Va],[T],[T],[r_Va]],[r_Sb]]],[11,r_9b,E,E,48,[[[r_ba]],[r_Sb]]],[11,"eq",r_rb,E,37,[[[r_ba],[r_bc]],[r_Sb]]],[11,"eq",E,E,38,[[[r_ba],[r_cc]],[r_Sb]]],[11,"eq",E,E,39,[[[r_ba],[r_dc]],[r_Sb]]],[11,"eq",E,E,40,[[[r_ba],[r_ec]],[r_Sb]]],[11,r_Pb,E,E,37,[[],[r_bc]]],[11,r_Pb,E,E,38,[[],[r_cc]]],[11,r_Pb,E,E,39,[[],[r_dc]]],[11,r_Pb,E,E,40,[[],[r_ec]]],[11,r_Pb,r_vb,E,45,[[],[r_gc]]],[11,r_Pb,E,E,46,[[],[r_hc]]],[11,r_Pb,E,E,47,[[],[r_ic]]],[11,r_Pb,E,E,48,[[],[r_jc]]],[11,r_Pb,r_Bb,E,54,[[],[r_ba]]],[11,r_4b,r_pb,E,35,[[[r_ba]],[r_fc]]],[11,r_4b,r_rb,E,37,[[[r_ba]],[r_bc]]],[11,r_4b,E,E,38,[[[r_ba]],[r_cc]]],[11,r_4b,E,E,39,[[[r_ba]],[r_dc]]],[11,r_4b,E,E,40,[[[r_ba]],[r_ec]]],[11,r_4b,r_vb,E,45,[[[r_ba]],[r_gc]]],[11,r_4b,E,E,46,[[[r_ba]],[r_hc]]],[11,r_4b,E,E,47,[[[r_ba]],[r_ic]]],[11,r_4b,E,E,48,[[[r_ba]],[r_jc]]],[11,r_kc,r_rb,E,37,[[[r_ba],[r_bc]],[r_Hb]]],[11,r_kc,E,E,38,[[[r_ba],[r_cc]],[r_Hb]]],[11,r_kc,E,E,39,[[[r_ba],[r_dc]],[r_Hb]]],[11,r_kc,E,E,40,[[[r_ba],[r_ec]],[r_Hb]]],[11,r_Wb,E,E,37,[[[r_ba],[r_bc]],[r_Xb,[r_Hb]]]],[11,r_Wb,E,E,38,[[[r_ba],[r_cc]],[r_Xb,[r_Hb]]]],[11,r_Wb,E,E,39,[[[r_ba],[r_dc]],[r_Xb,[r_Hb]]]],[11,r_Wb,E,E,40,[[[r_ba],[r_ec]],[r_Xb,[r_Hb]]]],[11,r_Nb,E,E,37,[[[r_ba],[r_Gb]],[r_ja]]],[11,r_Nb,E,E,38,[[[r_ba],[r_Gb]],[r_ja]]],[11,r_Nb,E,E,39,[[[r_ba],[r_Gb]],[r_ja]]],[11,r_Nb,E,E,40,[[[r_ba],[r_Gb]],[r_ja]]],[11,r_Nb,r_vb,E,45,[[[r_ba],[r_Gb]],[r_ja]]],[11,r_Nb,E,E,46,[[[r_ba],[r_Gb]],[r_ja]]],[11,r_Nb,E,E,47,[[[r_ba],[r_Gb]],[r_ja]]],[11,r_Nb,E,E,48,[[[r_ba],[r_Gb]],[r_ja]]],[11,r_Ob,r_rb,E,37,N],[11,r_Ob,E,E,38,N],[11,r_Ob,E,E,39,N],[11,r_Ob,E,E,40,N],[11,r_Kb,r_pb,E,35,[[[r_Mb]],[r_ja]]],[11,r_Kb,r_qb,E,36,[[[r_Mb]],[r_ja]]],[11,r_Kb,r_rb,E,37,[[[r_Mb]],[r_ja]]],[11,r_Kb,E,E,38,[[[r_Mb]],[r_ja]]],[11,r_Kb,E,E,39,[[[r_Mb]],[r_ja]]],[11,r_Kb,E,E,40,[[[r_Mb]],[r_ja]]],[11,r_Kb,r_sb,E,41,[[[r_Mb]],[r_ja]]],[11,r_Kb,r_tb,E,42,[[[r_Mb]],[r_ja]]],[11,r_Kb,r_ub,E,43,[[[r_Mb]],[r_ja]]],[11,r_Kb,r_vb,E,45,[[[r_Mb]],[r_ja]]],[11,r_Kb,E,E,46,[[[r_Mb]],[r_ja]]],[11,r_Kb,E,E,47,[[[r_Mb]],[r_ja]]],[11,r_Kb,E,E,48,[[[r_Mb]],[r_ja]]],[11,r_Kb,r_wb,E,49,[[[r_Mb]],[r_ja]]],[11,r_Kb,r_xb,E,50,[[[r_Mb]],[r_ja]]],[11,r_Kb,r_yb,E,51,[[[r_Mb]],[r_ja]]],[11,r_Kb,r_zb,E,52,[[[r_Mb]],[r_ja]]],[11,r_Kb,r_Ab,E,53,[[[r_Mb]],[r_ja]]],[11,r_Kb,r_Bb,E,55,[[[r_Mb]],[r_ja]]],[11,r_Kb,r_Cb,E,56,[[[r_Mb]],[r_ja]]],[11,r_Kb,r_Db,E,57,[[[r_Mb]],[r_ja]]],[11,r_Kb,r_Eb,E,58,[[[r_Mb]],[r_ja]]],[11,r_Kb,r_Fb,E,59,[[[r_Mb]],[r_ja]]],[11,r_Tb,r_pb,E,35,[[[r_ba],[r_Ub]],[r_ja]]],[11,r_Tb,r_qb,E,36,[[[r_ba],[r_Ub]],[r_ja]]],[11,r_Tb,r_rb,E,37,[[[r_ba],[r_Ub]],[r_ja]]],[11,r_Tb,E,E,38,[[[r_ba],[r_Ub]],[r_ja]]],[11,r_Tb,E,E,39,[[[r_ba],[r_Ub]],[r_ja]]],[11,r_Tb,E,E,40,[[[r_ba],[r_Ub]],[r_ja]]],[11,r_Tb,r_sb,E,41,[[[r_ba],[r_Ub]],[r_ja]]],[11,r_Tb,r_tb,E,42,[[[r_ba],[r_Ub]],[r_ja]]],[11,r_Tb,r_ub,E,43,[[[r_ba],[r_Ub]],[r_ja]]],[11,r_Tb,r_vb,E,45,[[[r_ba],[r_Ub]],[r_ja]]],[11,r_Tb,E,E,46,[[[r_ba],[r_Ub]],[r_ja]]],[11,r_Tb,E,E,47,[[[r_ba],[r_Ub]],[r_ja]]],[11,r_Tb,E,E,48,[[[r_ba],[r_Ub]],[r_ja]]],[11,r_Tb,r_wb,E,49,[[[r_ba],[r_Ub]],[r_ja]]],[11,r_Tb,r_xb,E,50,[[[r_ba],[r_Ub]],[r_ja]]],[11,r_Tb,r_yb,E,51,[[[r_ba],[r_Ub]],[r_ja]]],[11,r_Tb,r_zb,E,52,[[[r_ba],[r_Ub]],[r_ja]]],[11,r_Tb,r_Ab,E,53,[[[r_ba],[r_Ub]],[r_ja]]],[11,r_Tb,r_Bb,E,55,[[[r_ba],[r_Ub]],[r_ja]]],[11,r_Tb,r_Cb,E,56,[[[r_ba],[r_Ub]],[r_ja]]],[11,r_Tb,r_Db,E,57,[[[r_ba],[r_Ub]],[r_ja]]],[11,r_Tb,r_Eb,E,58,[[[r_ba],[r_Ub]],[r_ja]]],[11,r_Tb,r_Fb,E,59,[[[r_ba],[r_Ub]],[r_ja]]],[11,r_yd,r_pb,r_Xc,35,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_lc,E,r_Yc,35,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_sa,E,r_Zc,35,N],[11,r_ta,E,r_0c,35,N],[11,r_ua,E,r_1c,35,N],[11,r_mc,E,r_2c,35,N],[11,r_nc,E,r_3c,35,N],[11,r_oc,E,r_4c,35,N],[11,r_pc,E,r_5c,35,N],[11,r_Ua,E,r_6c,35,N],[11,r_qc,E,r_7c,35,N],[11,r_rc,E,r_8c,35,N],[11,r_va,E,r_9c,35,N],[11,r_ja,E,r_ad,35,[[[r_ba]],[r_la]]],[11,r_sc,E,r_bd,35,[[[r_ba],[r_Qa]]]],[11,r_tc,E,r_cd,35,[[[r_ba]],[r_Qa]]],[11,r_uc,E,r_dd,35,[[[r_ba]]]],[11,r_vc,E,r_ed,35,[[[r_ba]],[r_Qa]]],[11,r_wc,E,r_fd,35,[[[r_ba]],[r_Va]]],[11,r_xc,E,r_gd,35,[[[r_ba],[r_Va]]]],[11,r_yc,E,r_hd,35,[[[r_ba]],[r_Va]]],[11,r_zc,E,r_id,35,[[[r_ba],[r_Va]]]],[11,r_Ac,E,r_jd,35,[[[r_ba],[r_Va]]]],[11,r_Bc,E,r_kd,35,[[[r_ba]]]],[11,r_Cc,E,r_ld,35,[[[r_ba],[r_Qa]]]],[11,r_Dc,E,r_Hc,35,[[[r_ba]],[r_Qa]]],[11,r_Ec,E,r_md,35,[[[r_ba]]]],[11,r_Fc,E,r_nd,35,[[[r_ba],[r_Qa]]]],[11,r_Gc,E,r_Hc,35,[[[r_ba]],[r_Qa]]],[11,r_Ic,E,r_od,35,[[[r_ba]]]],[11,r_Jc,E,r_pd,35,[[[r_ba],[r_Qa]]]],[11,r_Kc,E,r_Hc,35,[[[r_ba]],[r_Qa]]],[11,r_Lc,E,r_qd,35,[[[r_ba],[r_xd,[r_rd]]]]],[11,r_Mc,E,r_sd,35,[[[r_ba],[r_xd,[r_td]]]]],[11,r_Nc,E,r_ud,35,[[[r_ba],[r_Ib]]]],[11,r_Oc,E,r_vd,35,[[[r_ba]],[r_Ib]]],[11,r_Pc,E,r_wd,35,[[[r_ba]]]],[11,r_Qc,E,r_Rc,35,[[[r_ba],[r_Sc]]]],[11,r_Tc,E,r_Uc,35,[[[r_ba],[r_Sc]]]],[11,r_Vc,E,r_Wc,35,[[[r_ba],[r_Jb]]]],[11,r_yd,r_qb,r_Xc,36,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_lc,E,r_Yc,36,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_sa,E,r_Zc,36,N],[11,r_ta,E,r_0c,36,N],[11,r_ua,E,r_1c,36,N],[11,r_mc,E,r_2c,36,N],[11,r_nc,E,r_3c,36,N],[11,r_oc,E,r_4c,36,N],[11,r_pc,E,r_5c,36,N],[11,r_Ua,E,r_6c,36,N],[11,r_qc,E,r_7c,36,N],[11,r_rc,E,r_8c,36,N],[11,r_va,E,r_9c,36,N],[11,r_ja,E,r_ad,36,[[[r_ba]],[r_la]]],[11,r_sc,E,r_bd,36,[[[r_ba],[r_Qa]]]],[11,r_tc,E,r_cd,36,[[[r_ba]],[r_Qa]]],[11,r_uc,E,r_dd,36,[[[r_ba]]]],[11,r_vc,E,r_ed,36,[[[r_ba]],[r_Qa]]],[11,r_wc,E,r_fd,36,[[[r_ba]],[r_Va]]],[11,r_xc,E,r_gd,36,[[[r_ba],[r_Va]]]],[11,r_yc,E,r_hd,36,[[[r_ba]],[r_Va]]],[11,r_zc,E,r_id,36,[[[r_ba],[r_Va]]]],[11,r_Ac,E,r_jd,36,[[[r_ba],[r_Va]]]],[11,r_Bc,E,r_kd,36,[[[r_ba]]]],[11,r_Cc,E,r_ld,36,[[[r_ba],[r_Qa]]]],[11,r_Dc,E,r_Hc,36,[[[r_ba]],[r_Qa]]],[11,r_Ec,E,r_md,36,[[[r_ba]]]],[11,r_Fc,E,r_nd,36,[[[r_ba],[r_Qa]]]],[11,r_Gc,E,r_Hc,36,[[[r_ba]],[r_Qa]]],[11,r_Ic,E,r_od,36,[[[r_ba]]]],[11,r_Jc,E,r_pd,36,[[[r_ba],[r_Qa]]]],[11,r_Kc,E,r_Hc,36,[[[r_ba]],[r_Qa]]],[11,r_Lc,E,r_qd,36,[[[r_ba],[r_xd,[r_rd]]]]],[11,r_Mc,E,r_sd,36,[[[r_ba],[r_xd,[r_td]]]]],[11,r_Nc,E,r_ud,36,[[[r_ba],[r_Ib]]]],[11,r_Oc,E,r_vd,36,[[[r_ba]],[r_Ib]]],[11,r_Pc,E,r_wd,36,[[[r_ba]]]],[11,r_Qc,E,r_Rc,36,[[[r_ba],[r_Sc]]]],[11,r_Tc,E,r_Uc,36,[[[r_ba],[r_Sc]]]],[11,r_Vc,E,r_Wc,36,[[[r_ba],[r_Jb]]]],[11,r_yd,r_sb,r_Xc,41,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_lc,E,r_Yc,41,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_sa,E,r_Zc,41,N],[11,r_ta,E,r_0c,41,N],[11,r_ua,E,r_1c,41,N],[11,r_mc,E,r_2c,41,N],[11,r_nc,E,r_3c,41,N],[11,r_oc,E,r_4c,41,N],[11,r_pc,E,r_5c,41,N],[11,r_Ua,E,r_6c,41,N],[11,r_qc,E,r_7c,41,N],[11,r_rc,E,r_8c,41,N],[11,r_va,E,r_9c,41,N],[11,r_ja,E,r_ad,41,[[[r_ba]],[r_la]]],[11,r_sc,E,r_bd,41,[[[r_ba],[r_Qa]]]],[11,r_tc,E,r_cd,41,[[[r_ba]],[r_Qa]]],[11,r_uc,E,r_dd,41,[[[r_ba]]]],[11,r_vc,E,r_ed,41,[[[r_ba]],[r_Qa]]],[11,r_wc,E,r_fd,41,[[[r_ba]],[r_Va]]],[11,r_xc,E,r_gd,41,[[[r_ba],[r_Va]]]],[11,r_yc,E,r_hd,41,[[[r_ba]],[r_Va]]],[11,r_zc,E,r_id,41,[[[r_ba],[r_Va]]]],[11,r_Ac,E,r_jd,41,[[[r_ba],[r_Va]]]],[11,r_Bc,E,r_kd,41,[[[r_ba]]]],[11,r_Cc,E,r_ld,41,[[[r_ba],[r_Qa]]]],[11,r_Dc,E,r_Hc,41,[[[r_ba]],[r_Qa]]],[11,r_Ec,E,r_md,41,[[[r_ba]]]],[11,r_Fc,E,r_nd,41,[[[r_ba],[r_Qa]]]],[11,r_Gc,E,r_Hc,41,[[[r_ba]],[r_Qa]]],[11,r_Ic,E,r_od,41,[[[r_ba]]]],[11,r_Jc,E,r_pd,41,[[[r_ba],[r_Qa]]]],[11,r_Kc,E,r_Hc,41,[[[r_ba]],[r_Qa]]],[11,r_Lc,E,r_qd,41,[[[r_ba],[r_xd,[r_rd]]]]],[11,r_Mc,E,r_sd,41,[[[r_ba],[r_xd,[r_td]]]]],[11,r_Nc,E,r_ud,41,[[[r_ba],[r_Ib]]]],[11,r_Oc,E,r_vd,41,[[[r_ba]],[r_Ib]]],[11,r_Pc,E,r_wd,41,[[[r_ba]]]],[11,r_Qc,E,r_Rc,41,[[[r_ba],[r_Sc]]]],[11,r_Tc,E,r_Uc,41,[[[r_ba],[r_Sc]]]],[11,r_Vc,E,r_Wc,41,[[[r_ba],[r_Jb]]]],[11,r_yd,r_tb,r_Xc,42,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_lc,E,r_Yc,42,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_sa,E,r_Zc,42,N],[11,r_ta,E,r_0c,42,N],[11,r_ua,E,r_1c,42,N],[11,r_mc,E,r_2c,42,N],[11,r_nc,E,r_3c,42,N],[11,r_oc,E,r_4c,42,N],[11,r_pc,E,r_5c,42,N],[11,r_Ua,E,r_6c,42,N],[11,r_qc,E,r_7c,42,N],[11,r_rc,E,r_8c,42,N],[11,r_va,E,r_9c,42,N],[11,r_ja,E,r_ad,42,[[[r_ba]],[r_la]]],[11,r_sc,E,r_bd,42,[[[r_ba],[r_Qa]]]],[11,r_tc,E,r_cd,42,[[[r_ba]],[r_Qa]]],[11,r_uc,E,r_dd,42,[[[r_ba]]]],[11,r_vc,E,r_ed,42,[[[r_ba]],[r_Qa]]],[11,r_wc,E,r_fd,42,[[[r_ba]],[r_Va]]],[11,r_xc,E,r_gd,42,[[[r_ba],[r_Va]]]],[11,r_yc,E,r_hd,42,[[[r_ba]],[r_Va]]],[11,r_zc,E,r_id,42,[[[r_ba],[r_Va]]]],[11,r_Ac,E,r_jd,42,[[[r_ba],[r_Va]]]],[11,r_Bc,E,r_kd,42,[[[r_ba]]]],[11,r_Cc,E,r_ld,42,[[[r_ba],[r_Qa]]]],[11,r_Dc,E,r_Hc,42,[[[r_ba]],[r_Qa]]],[11,r_Ec,E,r_md,42,[[[r_ba]]]],[11,r_Fc,E,r_nd,42,[[[r_ba],[r_Qa]]]],[11,r_Gc,E,r_Hc,42,[[[r_ba]],[r_Qa]]],[11,r_Ic,E,r_od,42,[[[r_ba]]]],[11,r_Jc,E,r_pd,42,[[[r_ba],[r_Qa]]]],[11,r_Kc,E,r_Hc,42,[[[r_ba]],[r_Qa]]],[11,r_Lc,E,r_qd,42,[[[r_ba],[r_xd,[r_rd]]]]],[11,r_Mc,E,r_sd,42,[[[r_ba],[r_xd,[r_td]]]]],[11,r_Nc,E,r_ud,42,[[[r_ba],[r_Ib]]]],[11,r_Oc,E,r_vd,42,[[[r_ba]],[r_Ib]]],[11,r_Pc,E,r_wd,42,[[[r_ba]]]],[11,r_Qc,E,r_Rc,42,[[[r_ba],[r_Sc]]]],[11,r_Tc,E,r_Uc,42,[[[r_ba],[r_Sc]]]],[11,r_Vc,E,r_Wc,42,[[[r_ba],[r_Jb]]]],[11,r_yd,r_ub,r_Xc,43,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_lc,E,r_Yc,43,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_sa,E,r_Zc,43,N],[11,r_ta,E,r_0c,43,N],[11,r_ua,E,r_1c,43,N],[11,r_mc,E,r_2c,43,N],[11,r_nc,E,r_3c,43,N],[11,r_oc,E,r_4c,43,N],[11,r_pc,E,r_5c,43,N],[11,r_Ua,E,r_6c,43,N],[11,r_qc,E,r_7c,43,N],[11,r_rc,E,r_8c,43,N],[11,r_va,E,r_9c,43,N],[11,r_ja,E,r_ad,43,[[[r_ba]],[r_la]]],[11,r_sc,E,r_bd,43,[[[r_ba],[r_Qa]]]],[11,r_tc,E,r_cd,43,[[[r_ba]],[r_Qa]]],[11,r_uc,E,r_dd,43,[[[r_ba]]]],[11,r_vc,E,r_ed,43,[[[r_ba]],[r_Qa]]],[11,r_wc,E,r_fd,43,[[[r_ba]],[r_Va]]],[11,r_xc,E,r_gd,43,[[[r_ba],[r_Va]]]],[11,r_yc,E,r_hd,43,[[[r_ba]],[r_Va]]],[11,r_zc,E,r_id,43,[[[r_ba],[r_Va]]]],[11,r_Ac,E,r_jd,43,[[[r_ba],[r_Va]]]],[11,r_Bc,E,r_kd,43,[[[r_ba]]]],[11,r_Cc,E,r_ld,43,[[[r_ba],[r_Qa]]]],[11,r_Dc,E,r_Hc,43,[[[r_ba]],[r_Qa]]],[11,r_Ec,E,r_md,43,[[[r_ba]]]],[11,r_Fc,E,r_nd,43,[[[r_ba],[r_Qa]]]],[11,r_Gc,E,r_Hc,43,[[[r_ba]],[r_Qa]]],[11,r_Ic,E,r_od,43,[[[r_ba]]]],[11,r_Jc,E,r_pd,43,[[[r_ba],[r_Qa]]]],[11,r_Kc,E,r_Hc,43,[[[r_ba]],[r_Qa]]],[11,r_Lc,E,r_qd,43,[[[r_ba],[r_xd,[r_rd]]]]],[11,r_Mc,E,r_sd,43,[[[r_ba],[r_xd,[r_td]]]]],[11,r_Nc,E,r_ud,43,[[[r_ba],[r_Ib]]]],[11,r_Oc,E,r_vd,43,[[[r_ba]],[r_Ib]]],[11,r_Pc,E,r_wd,43,[[[r_ba]]]],[11,r_Qc,E,r_Rc,43,[[[r_ba],[r_Sc]]]],[11,r_Tc,E,r_Uc,43,[[[r_ba],[r_Sc]]]],[11,r_Vc,E,r_Wc,43,[[[r_ba],[r_Jb]]]],[11,r_yd,r_wb,r_Xc,49,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_lc,E,r_Yc,49,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_sa,E,r_Zc,49,N],[11,r_ta,E,r_0c,49,N],[11,r_ua,E,r_1c,49,N],[11,r_mc,E,r_2c,49,N],[11,r_nc,E,r_3c,49,N],[11,r_oc,E,r_4c,49,N],[11,r_pc,E,r_5c,49,N],[11,r_Ua,E,r_6c,49,N],[11,r_qc,E,r_7c,49,N],[11,r_rc,E,r_8c,49,N],[11,r_va,E,r_9c,49,N],[11,r_ja,E,r_ad,49,[[[r_ba]],[r_la]]],[11,r_sc,E,r_bd,49,[[[r_ba],[r_Qa]]]],[11,r_tc,E,r_cd,49,[[[r_ba]],[r_Qa]]],[11,r_uc,E,r_dd,49,[[[r_ba]]]],[11,r_vc,E,r_ed,49,[[[r_ba]],[r_Qa]]],[11,r_wc,E,r_fd,49,[[[r_ba]],[r_Va]]],[11,r_xc,E,r_gd,49,[[[r_ba],[r_Va]]]],[11,r_yc,E,r_hd,49,[[[r_ba]],[r_Va]]],[11,r_zc,E,r_id,49,[[[r_ba],[r_Va]]]],[11,r_Ac,E,r_jd,49,[[[r_ba],[r_Va]]]],[11,r_Bc,E,r_kd,49,[[[r_ba]]]],[11,r_Cc,E,r_ld,49,[[[r_ba],[r_Qa]]]],[11,r_Dc,E,r_Hc,49,[[[r_ba]],[r_Qa]]],[11,r_Ec,E,r_md,49,[[[r_ba]]]],[11,r_Fc,E,r_nd,49,[[[r_ba],[r_Qa]]]],[11,r_Gc,E,r_Hc,49,[[[r_ba]],[r_Qa]]],[11,r_Ic,E,r_od,49,[[[r_ba]]]],[11,r_Jc,E,r_pd,49,[[[r_ba],[r_Qa]]]],[11,r_Kc,E,r_Hc,49,[[[r_ba]],[r_Qa]]],[11,r_Lc,E,r_qd,49,[[[r_ba],[r_xd,[r_rd]]]]],[11,r_Mc,E,r_sd,49,[[[r_ba],[r_xd,[r_td]]]]],[11,r_Nc,E,r_ud,49,[[[r_ba],[r_Ib]]]],[11,r_Oc,E,r_vd,49,[[[r_ba]],[r_Ib]]],[11,r_Pc,E,r_wd,49,[[[r_ba]]]],[11,r_Qc,E,r_Rc,49,[[[r_ba],[r_Sc]]]],[11,r_Tc,E,r_Uc,49,[[[r_ba],[r_Sc]]]],[11,r_Vc,E,r_Wc,49,[[[r_ba],[r_Jb]]]],[11,r_yd,r_xb,r_Xc,50,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_lc,E,r_Yc,50,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_sa,E,r_Zc,50,N],[11,r_ta,E,r_0c,50,N],[11,r_ua,E,r_1c,50,N],[11,r_mc,E,r_2c,50,N],[11,r_nc,E,r_3c,50,N],[11,r_oc,E,r_4c,50,N],[11,r_pc,E,r_5c,50,N],[11,r_Ua,E,r_6c,50,N],[11,r_qc,E,r_7c,50,N],[11,r_rc,E,r_8c,50,N],[11,r_va,E,r_9c,50,N],[11,r_ja,E,r_ad,50,[[[r_ba]],[r_la]]],[11,r_sc,E,r_bd,50,[[[r_ba],[r_Qa]]]],[11,r_tc,E,r_cd,50,[[[r_ba]],[r_Qa]]],[11,r_uc,E,r_dd,50,[[[r_ba]]]],[11,r_vc,E,r_ed,50,[[[r_ba]],[r_Qa]]],[11,r_wc,E,r_fd,50,[[[r_ba]],[r_Va]]],[11,r_xc,E,r_gd,50,[[[r_ba],[r_Va]]]],[11,r_yc,E,r_hd,50,[[[r_ba]],[r_Va]]],[11,r_zc,E,r_id,50,[[[r_ba],[r_Va]]]],[11,r_Ac,E,r_jd,50,[[[r_ba],[r_Va]]]],[11,r_Bc,E,r_kd,50,[[[r_ba]]]],[11,r_Cc,E,r_ld,50,[[[r_ba],[r_Qa]]]],[11,r_Dc,E,r_Hc,50,[[[r_ba]],[r_Qa]]],[11,r_Ec,E,r_md,50,[[[r_ba]]]],[11,r_Fc,E,r_nd,50,[[[r_ba],[r_Qa]]]],[11,r_Gc,E,r_Hc,50,[[[r_ba]],[r_Qa]]],[11,r_Ic,E,r_od,50,[[[r_ba]]]],[11,r_Jc,E,r_pd,50,[[[r_ba],[r_Qa]]]],[11,r_Kc,E,r_Hc,50,[[[r_ba]],[r_Qa]]],[11,r_Lc,E,r_qd,50,[[[r_ba],[r_xd,[r_rd]]]]],[11,r_Mc,E,r_sd,50,[[[r_ba],[r_xd,[r_td]]]]],[11,r_Nc,E,r_ud,50,[[[r_ba],[r_Ib]]]],[11,r_Oc,E,r_vd,50,[[[r_ba]],[r_Ib]]],[11,r_Pc,E,r_wd,50,[[[r_ba]]]],[11,r_Qc,E,r_Rc,50,[[[r_ba],[r_Sc]]]],[11,r_Tc,E,r_Uc,50,[[[r_ba],[r_Sc]]]],[11,r_Vc,E,r_Wc,50,[[[r_ba],[r_Jb]]]],[11,r_yd,r_yb,r_Xc,51,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_lc,E,r_Yc,51,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_sa,E,r_Zc,51,N],[11,r_ta,E,r_0c,51,N],[11,r_ua,E,r_1c,51,N],[11,r_mc,E,r_2c,51,N],[11,r_nc,E,r_3c,51,N],[11,r_oc,E,r_4c,51,N],[11,r_pc,E,r_5c,51,N],[11,r_Ua,E,r_6c,51,N],[11,r_qc,E,r_7c,51,N],[11,r_rc,E,r_8c,51,N],[11,r_va,E,r_9c,51,N],[11,r_ja,E,r_ad,51,[[[r_ba]],[r_la]]],[11,r_sc,E,r_bd,51,[[[r_ba],[r_Qa]]]],[11,r_tc,E,r_cd,51,[[[r_ba]],[r_Qa]]],[11,r_uc,E,r_dd,51,[[[r_ba]]]],[11,r_vc,E,r_ed,51,[[[r_ba]],[r_Qa]]],[11,r_wc,E,r_fd,51,[[[r_ba]],[r_Va]]],[11,r_xc,E,r_gd,51,[[[r_ba],[r_Va]]]],[11,r_yc,E,r_hd,51,[[[r_ba]],[r_Va]]],[11,r_zc,E,r_id,51,[[[r_ba],[r_Va]]]],[11,r_Ac,E,r_jd,51,[[[r_ba],[r_Va]]]],[11,r_Bc,E,r_kd,51,[[[r_ba]]]],[11,r_Cc,E,r_ld,51,[[[r_ba],[r_Qa]]]],[11,r_Dc,E,r_Hc,51,[[[r_ba]],[r_Qa]]],[11,r_Ec,E,r_md,51,[[[r_ba]]]],[11,r_Fc,E,r_nd,51,[[[r_ba],[r_Qa]]]],[11,r_Gc,E,r_Hc,51,[[[r_ba]],[r_Qa]]],[11,r_Ic,E,r_od,51,[[[r_ba]]]],[11,r_Jc,E,r_pd,51,[[[r_ba],[r_Qa]]]],[11,r_Kc,E,r_Hc,51,[[[r_ba]],[r_Qa]]],[11,r_Lc,E,r_qd,51,[[[r_ba],[r_xd,[r_rd]]]]],[11,r_Mc,E,r_sd,51,[[[r_ba],[r_xd,[r_td]]]]],[11,r_Nc,E,r_ud,51,[[[r_ba],[r_Ib]]]],[11,r_Oc,E,r_vd,51,[[[r_ba]],[r_Ib]]],[11,r_Pc,E,r_wd,51,[[[r_ba]]]],[11,r_Qc,E,r_Rc,51,[[[r_ba],[r_Sc]]]],[11,r_Tc,E,r_Uc,51,[[[r_ba],[r_Sc]]]],[11,r_Vc,E,r_Wc,51,[[[r_ba],[r_Jb]]]],[11,r_yd,r_zb,r_Xc,52,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_lc,E,r_Yc,52,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_sa,E,r_Zc,52,N],[11,r_ta,E,r_0c,52,N],[11,r_ua,E,r_1c,52,N],[11,r_mc,E,r_2c,52,N],[11,r_nc,E,r_3c,52,N],[11,r_oc,E,r_4c,52,N],[11,r_pc,E,r_5c,52,N],[11,r_Ua,E,r_6c,52,N],[11,r_qc,E,r_7c,52,N],[11,r_rc,E,r_8c,52,N],[11,r_va,E,r_9c,52,N],[11,r_ja,E,r_ad,52,[[[r_ba]],[r_la]]],[11,r_sc,E,r_bd,52,[[[r_ba],[r_Qa]]]],[11,r_tc,E,r_cd,52,[[[r_ba]],[r_Qa]]],[11,r_uc,E,r_dd,52,[[[r_ba]]]],[11,r_vc,E,r_ed,52,[[[r_ba]],[r_Qa]]],[11,r_wc,E,r_fd,52,[[[r_ba]],[r_Va]]],[11,r_xc,E,r_gd,52,[[[r_ba],[r_Va]]]],[11,r_yc,E,r_hd,52,[[[r_ba]],[r_Va]]],[11,r_zc,E,r_id,52,[[[r_ba],[r_Va]]]],[11,r_Ac,E,r_jd,52,[[[r_ba],[r_Va]]]],[11,r_Bc,E,r_kd,52,[[[r_ba]]]],[11,r_Cc,E,r_ld,52,[[[r_ba],[r_Qa]]]],[11,r_Dc,E,r_Hc,52,[[[r_ba]],[r_Qa]]],[11,r_Ec,E,r_md,52,[[[r_ba]]]],[11,r_Fc,E,r_nd,52,[[[r_ba],[r_Qa]]]],[11,r_Gc,E,r_Hc,52,[[[r_ba]],[r_Qa]]],[11,r_Ic,E,r_od,52,[[[r_ba]]]],[11,r_Jc,E,r_pd,52,[[[r_ba],[r_Qa]]]],[11,r_Kc,E,r_Hc,52,[[[r_ba]],[r_Qa]]],[11,r_Lc,E,r_qd,52,[[[r_ba],[r_xd,[r_rd]]]]],[11,r_Mc,E,r_sd,52,[[[r_ba],[r_xd,[r_td]]]]],[11,r_Nc,E,r_ud,52,[[[r_ba],[r_Ib]]]],[11,r_Oc,E,r_vd,52,[[[r_ba]],[r_Ib]]],[11,r_Pc,E,r_wd,52,[[[r_ba]]]],[11,r_Qc,E,r_Rc,52,[[[r_ba],[r_Sc]]]],[11,r_Tc,E,r_Uc,52,[[[r_ba],[r_Sc]]]],[11,r_Vc,E,r_Wc,52,[[[r_ba],[r_Jb]]]],[11,r_yd,r_Ab,r_Xc,53,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_lc,E,r_Yc,53,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_sa,E,r_Zc,53,N],[11,r_ta,E,r_0c,53,N],[11,r_ua,E,r_1c,53,N],[11,r_mc,E,r_2c,53,N],[11,r_nc,E,r_3c,53,N],[11,r_oc,E,r_4c,53,N],[11,r_pc,E,r_5c,53,N],[11,r_Ua,E,r_6c,53,N],[11,r_qc,E,r_7c,53,N],[11,r_rc,E,r_8c,53,N],[11,r_va,E,r_9c,53,N],[11,r_ja,E,r_ad,53,[[[r_ba]],[r_la]]],[11,r_sc,E,r_bd,53,[[[r_ba],[r_Qa]]]],[11,r_tc,E,r_cd,53,[[[r_ba]],[r_Qa]]],[11,r_uc,E,r_dd,53,[[[r_ba]]]],[11,r_vc,E,r_ed,53,[[[r_ba]],[r_Qa]]],[11,r_wc,E,r_fd,53,[[[r_ba]],[r_Va]]],[11,r_xc,E,r_gd,53,[[[r_ba],[r_Va]]]],[11,r_yc,E,r_hd,53,[[[r_ba]],[r_Va]]],[11,r_zc,E,r_id,53,[[[r_ba],[r_Va]]]],[11,r_Ac,E,r_jd,53,[[[r_ba],[r_Va]]]],[11,r_Bc,E,r_kd,53,[[[r_ba]]]],[11,r_Cc,E,r_ld,53,[[[r_ba],[r_Qa]]]],[11,r_Dc,E,r_Hc,53,[[[r_ba]],[r_Qa]]],[11,r_Ec,E,r_md,53,[[[r_ba]]]],[11,r_Fc,E,r_nd,53,[[[r_ba],[r_Qa]]]],[11,r_Gc,E,r_Hc,53,[[[r_ba]],[r_Qa]]],[11,r_Ic,E,r_od,53,[[[r_ba]]]],[11,r_Jc,E,r_pd,53,[[[r_ba],[r_Qa]]]],[11,r_Kc,E,r_Hc,53,[[[r_ba]],[r_Qa]]],[11,r_Lc,E,r_qd,53,[[[r_ba],[r_xd,[r_rd]]]]],[11,r_Mc,E,r_sd,53,[[[r_ba],[r_xd,[r_td]]]]],[11,r_Nc,E,r_ud,53,[[[r_ba],[r_Ib]]]],[11,r_Oc,E,r_vd,53,[[[r_ba]],[r_Ib]]],[11,r_Pc,E,r_wd,53,[[[r_ba]]]],[11,r_Qc,E,r_Rc,53,[[[r_ba],[r_Sc]]]],[11,r_Tc,E,r_Uc,53,[[[r_ba],[r_Sc]]]],[11,r_Vc,E,r_Wc,53,[[[r_ba],[r_Jb]]]],[11,r_yd,r_Bb,r_Xc,55,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_lc,E,r_Yc,55,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_sa,E,r_Zc,55,N],[11,r_ta,E,r_0c,55,N],[11,r_ua,E,r_1c,55,N],[11,r_mc,E,r_2c,55,N],[11,r_nc,E,r_3c,55,N],[11,r_oc,E,r_4c,55,N],[11,r_pc,E,r_5c,55,N],[11,r_Ua,E,r_6c,55,N],[11,r_qc,E,r_7c,55,N],[11,r_rc,E,r_8c,55,N],[11,r_va,E,r_9c,55,N],[11,r_ja,E,r_ad,55,[[[r_ba]],[r_la]]],[11,r_sc,E,r_bd,55,[[[r_ba],[r_Qa]]]],[11,r_tc,E,r_cd,55,[[[r_ba]],[r_Qa]]],[11,r_uc,E,r_dd,55,[[[r_ba]]]],[11,r_vc,E,r_ed,55,[[[r_ba]],[r_Qa]]],[11,r_wc,E,r_fd,55,[[[r_ba]],[r_Va]]],[11,r_xc,E,r_gd,55,[[[r_ba],[r_Va]]]],[11,r_yc,E,r_hd,55,[[[r_ba]],[r_Va]]],[11,r_zc,E,r_id,55,[[[r_ba],[r_Va]]]],[11,r_Ac,E,r_jd,55,[[[r_ba],[r_Va]]]],[11,r_Bc,E,r_kd,55,[[[r_ba]]]],[11,r_Cc,E,r_ld,55,[[[r_ba],[r_Qa]]]],[11,r_Dc,E,r_Hc,55,[[[r_ba]],[r_Qa]]],[11,r_Ec,E,r_md,55,[[[r_ba]]]],[11,r_Fc,E,r_nd,55,[[[r_ba],[r_Qa]]]],[11,r_Gc,E,r_Hc,55,[[[r_ba]],[r_Qa]]],[11,r_Ic,E,r_od,55,[[[r_ba]]]],[11,r_Jc,E,r_pd,55,[[[r_ba],[r_Qa]]]],[11,r_Kc,E,r_Hc,55,[[[r_ba]],[r_Qa]]],[11,r_Lc,E,r_qd,55,[[[r_ba],[r_xd,[r_rd]]]]],[11,r_Mc,E,r_sd,55,[[[r_ba],[r_xd,[r_td]]]]],[11,r_Nc,E,r_ud,55,[[[r_ba],[r_Ib]]]],[11,r_Oc,E,r_vd,55,[[[r_ba]],[r_Ib]]],[11,r_Pc,E,r_wd,55,[[[r_ba]]]],[11,r_Qc,E,r_Rc,55,[[[r_ba],[r_Sc]]]],[11,r_Tc,E,r_Uc,55,[[[r_ba],[r_Sc]]]],[11,r_Vc,E,r_Wc,55,[[[r_ba],[r_Jb]]]],[11,r_yd,r_Cb,r_Xc,56,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_lc,E,r_Yc,56,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_sa,E,r_Zc,56,N],[11,r_ta,E,r_0c,56,N],[11,r_ua,E,r_1c,56,N],[11,r_mc,E,r_2c,56,N],[11,r_nc,E,r_3c,56,N],[11,r_oc,E,r_4c,56,N],[11,r_pc,E,r_5c,56,N],[11,r_Ua,E,r_6c,56,N],[11,r_qc,E,r_7c,56,N],[11,r_rc,E,r_8c,56,N],[11,r_va,E,r_9c,56,N],[11,r_ja,E,r_ad,56,[[[r_ba]],[r_la]]],[11,r_sc,E,r_bd,56,[[[r_ba],[r_Qa]]]],[11,r_tc,E,r_cd,56,[[[r_ba]],[r_Qa]]],[11,r_uc,E,r_dd,56,[[[r_ba]]]],[11,r_vc,E,r_ed,56,[[[r_ba]],[r_Qa]]],[11,r_wc,E,r_fd,56,[[[r_ba]],[r_Va]]],[11,r_xc,E,r_gd,56,[[[r_ba],[r_Va]]]],[11,r_yc,E,r_hd,56,[[[r_ba]],[r_Va]]],[11,r_zc,E,r_id,56,[[[r_ba],[r_Va]]]],[11,r_Ac,E,r_jd,56,[[[r_ba],[r_Va]]]],[11,r_Bc,E,r_kd,56,[[[r_ba]]]],[11,r_Cc,E,r_ld,56,[[[r_ba],[r_Qa]]]],[11,r_Dc,E,r_Hc,56,[[[r_ba]],[r_Qa]]],[11,r_Ec,E,r_md,56,[[[r_ba]]]],[11,r_Fc,E,r_nd,56,[[[r_ba],[r_Qa]]]],[11,r_Gc,E,r_Hc,56,[[[r_ba]],[r_Qa]]],[11,r_Ic,E,r_od,56,[[[r_ba]]]],[11,r_Jc,E,r_pd,56,[[[r_ba],[r_Qa]]]],[11,r_Kc,E,r_Hc,56,[[[r_ba]],[r_Qa]]],[11,r_Lc,E,r_qd,56,[[[r_ba],[r_xd,[r_rd]]]]],[11,r_Mc,E,r_sd,56,[[[r_ba],[r_xd,[r_td]]]]],[11,r_Nc,E,r_ud,56,[[[r_ba],[r_Ib]]]],[11,r_Oc,E,r_vd,56,[[[r_ba]],[r_Ib]]],[11,r_Pc,E,r_wd,56,[[[r_ba]]]],[11,r_Qc,E,r_Rc,56,[[[r_ba],[r_Sc]]]],[11,r_Tc,E,r_Uc,56,[[[r_ba],[r_Sc]]]],[11,r_Vc,E,r_Wc,56,[[[r_ba],[r_Jb]]]],[11,r_yd,r_Db,r_Xc,57,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_lc,E,r_Yc,57,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_sa,E,r_Zc,57,N],[11,r_ta,E,r_0c,57,N],[11,r_ua,E,r_1c,57,N],[11,r_mc,E,r_2c,57,N],[11,r_nc,E,r_3c,57,N],[11,r_oc,E,r_4c,57,N],[11,r_pc,E,r_5c,57,N],[11,r_Ua,E,r_6c,57,N],[11,r_qc,E,r_7c,57,N],[11,r_rc,E,r_8c,57,N],[11,r_va,E,r_9c,57,N],[11,r_ja,E,r_ad,57,[[[r_ba]],[r_la]]],[11,r_sc,E,r_bd,57,[[[r_ba],[r_Qa]]]],[11,r_tc,E,r_cd,57,[[[r_ba]],[r_Qa]]],[11,r_uc,E,r_dd,57,[[[r_ba]]]],[11,r_vc,E,r_ed,57,[[[r_ba]],[r_Qa]]],[11,r_wc,E,r_fd,57,[[[r_ba]],[r_Va]]],[11,r_xc,E,r_gd,57,[[[r_ba],[r_Va]]]],[11,r_yc,E,r_hd,57,[[[r_ba]],[r_Va]]],[11,r_zc,E,r_id,57,[[[r_ba],[r_Va]]]],[11,r_Ac,E,r_jd,57,[[[r_ba],[r_Va]]]],[11,r_Bc,E,r_kd,57,[[[r_ba]]]],[11,r_Cc,E,r_ld,57,[[[r_ba],[r_Qa]]]],[11,r_Dc,E,r_Hc,57,[[[r_ba]],[r_Qa]]],[11,r_Ec,E,r_md,57,[[[r_ba]]]],[11,r_Fc,E,r_nd,57,[[[r_ba],[r_Qa]]]],[11,r_Gc,E,r_Hc,57,[[[r_ba]],[r_Qa]]],[11,r_Ic,E,r_od,57,[[[r_ba]]]],[11,r_Jc,E,r_pd,57,[[[r_ba],[r_Qa]]]],[11,r_Kc,E,r_Hc,57,[[[r_ba]],[r_Qa]]],[11,r_Lc,E,r_qd,57,[[[r_ba],[r_xd,[r_rd]]]]],[11,r_Mc,E,r_sd,57,[[[r_ba],[r_xd,[r_td]]]]],[11,r_Nc,E,r_ud,57,[[[r_ba],[r_Ib]]]],[11,r_Oc,E,r_vd,57,[[[r_ba]],[r_Ib]]],[11,r_Pc,E,r_wd,57,[[[r_ba]]]],[11,r_Qc,E,r_Rc,57,[[[r_ba],[r_Sc]]]],[11,r_Tc,E,r_Uc,57,[[[r_ba],[r_Sc]]]],[11,r_Vc,E,r_Wc,57,[[[r_ba],[r_Jb]]]],[11,r_yd,r_Eb,r_Xc,58,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_lc,E,r_Yc,58,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_sa,E,r_Zc,58,N],[11,r_ta,E,r_0c,58,N],[11,r_ua,E,r_1c,58,N],[11,r_mc,E,r_2c,58,N],[11,r_nc,E,r_3c,58,N],[11,r_oc,E,r_4c,58,N],[11,r_pc,E,r_5c,58,N],[11,r_Ua,E,r_6c,58,N],[11,r_qc,E,r_7c,58,N],[11,r_rc,E,r_8c,58,N],[11,r_va,E,r_9c,58,N],[11,r_ja,E,r_ad,58,[[[r_ba]],[r_la]]],[11,r_sc,E,r_bd,58,[[[r_ba],[r_Qa]]]],[11,r_tc,E,r_cd,58,[[[r_ba]],[r_Qa]]],[11,r_uc,E,r_dd,58,[[[r_ba]]]],[11,r_vc,E,r_ed,58,[[[r_ba]],[r_Qa]]],[11,r_wc,E,r_fd,58,[[[r_ba]],[r_Va]]],[11,r_xc,E,r_gd,58,[[[r_ba],[r_Va]]]],[11,r_yc,E,r_hd,58,[[[r_ba]],[r_Va]]],[11,r_zc,E,r_id,58,[[[r_ba],[r_Va]]]],[11,r_Ac,E,r_jd,58,[[[r_ba],[r_Va]]]],[11,r_Bc,E,r_kd,58,[[[r_ba]]]],[11,r_Cc,E,r_ld,58,[[[r_ba],[r_Qa]]]],[11,r_Dc,E,r_Hc,58,[[[r_ba]],[r_Qa]]],[11,r_Ec,E,r_md,58,[[[r_ba]]]],[11,r_Fc,E,r_nd,58,[[[r_ba],[r_Qa]]]],[11,r_Gc,E,r_Hc,58,[[[r_ba]],[r_Qa]]],[11,r_Ic,E,r_od,58,[[[r_ba]]]],[11,r_Jc,E,r_pd,58,[[[r_ba],[r_Qa]]]],[11,r_Kc,E,r_Hc,58,[[[r_ba]],[r_Qa]]],[11,r_Lc,E,r_qd,58,[[[r_ba],[r_xd,[r_rd]]]]],[11,r_Mc,E,r_sd,58,[[[r_ba],[r_xd,[r_td]]]]],[11,r_Nc,E,r_ud,58,[[[r_ba],[r_Ib]]]],[11,r_Oc,E,r_vd,58,[[[r_ba]],[r_Ib]]],[11,r_Pc,E,r_wd,58,[[[r_ba]]]],[11,r_Qc,E,r_Rc,58,[[[r_ba],[r_Sc]]]],[11,r_Tc,E,r_Uc,58,[[[r_ba],[r_Sc]]]],[11,r_Vc,E,r_Wc,58,[[[r_ba],[r_Jb]]]],[11,r_yd,r_Fb,r_Xc,59,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_lc,E,r_Yc,59,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_sa,E,r_Zc,59,N],[11,r_ta,E,r_0c,59,N],[11,r_ua,E,r_1c,59,N],[11,r_mc,E,r_2c,59,N],[11,r_nc,E,r_3c,59,N],[11,r_oc,E,r_4c,59,N],[11,r_pc,E,r_5c,59,N],[11,r_Ua,E,r_6c,59,N],[11,r_qc,E,r_7c,59,N],[11,r_rc,E,r_8c,59,N],[11,r_va,E,r_9c,59,N],[11,r_ja,E,r_ad,59,[[[r_ba]],[r_la]]],[11,r_sc,E,r_bd,59,[[[r_ba],[r_Qa]]]],[11,r_tc,E,r_cd,59,[[[r_ba]],[r_Qa]]],[11,r_uc,E,r_dd,59,[[[r_ba]]]],[11,r_vc,E,r_ed,59,[[[r_ba]],[r_Qa]]],[11,r_wc,E,r_fd,59,[[[r_ba]],[r_Va]]],[11,r_xc,E,r_gd,59,[[[r_ba],[r_Va]]]],[11,r_yc,E,r_hd,59,[[[r_ba]],[r_Va]]],[11,r_zc,E,r_id,59,[[[r_ba],[r_Va]]]],[11,r_Ac,E,r_jd,59,[[[r_ba],[r_Va]]]],[11,r_Bc,E,r_kd,59,[[[r_ba]]]],[11,r_Cc,E,r_ld,59,[[[r_ba],[r_Qa]]]],[11,r_Dc,E,r_Hc,59,[[[r_ba]],[r_Qa]]],[11,r_Ec,E,r_md,59,[[[r_ba]]]],[11,r_Fc,E,r_nd,59,[[[r_ba],[r_Qa]]]],[11,r_Gc,E,r_Hc,59,[[[r_ba]],[r_Qa]]],[11,r_Ic,E,r_od,59,[[[r_ba]]]],[11,r_Jc,E,r_pd,59,[[[r_ba],[r_Qa]]]],[11,r_Kc,E,r_Hc,59,[[[r_ba]],[r_Qa]]],[11,r_Lc,E,r_qd,59,[[[r_ba],[r_xd,[r_rd]]]]],[11,r_Mc,E,r_sd,59,[[[r_ba],[r_xd,[r_td]]]]],[11,r_Nc,E,r_ud,59,[[[r_ba],[r_Ib]]]],[11,r_Oc,E,r_vd,59,[[[r_ba]],[r_Ib]]],[11,r_Pc,E,r_wd,59,[[[r_ba]]]],[11,r_Qc,E,r_Rc,59,[[[r_ba],[r_Sc]]]],[11,r_Tc,E,r_Uc,59,[[[r_ba],[r_Sc]]]],[11,r_Vc,E,r_Wc,59,[[[r_ba],[r_Jb]]]],[11,r_Bd,r_pb,E,35,[[[r_ba]],[r_ja,[r_ka]]]],[11,r_zd,E,r_Cd,35,[[[r_ba]],[r_ja,[r_Ad,r_ka]]]],[11,r_Bd,r_qb,E,36,[[[r_ba]],[r_ja,[r_ka]]]],[11,r_zd,E,r_Cd,36,[[[r_ba]],[r_ja,[r_Ad,r_ka]]]],[11,r_zd,r_sb,r_Cd,41,[[[r_ba]],[r_ja,[r_Ad,r_ka]]]],[11,r_zd,r_tb,E,42,[[[r_ba]],[r_ja,[r_Ad,r_ka]]]],[11,r_zd,r_ub,E,43,[[[r_ba]],[r_ja,[r_Ad,r_ka]]]],[11,r_Bd,r_wb,E,49,[[[r_ba]],[r_ja,[r_ka]]]],[11,r_zd,E,E,49,[[[r_ba]],[r_ja,[r_Ad,r_ka]]]],[11,r_Bd,r_xb,E,50,[[[r_ba]],[r_ja,[r_ka]]]],[11,r_zd,E,E,50,[[[r_ba]],[r_ja,[r_Ad,r_ka]]]],[11,r_zd,r_yb,E,51,[[[r_ba]],[r_ja,[r_Ad,r_ka]]]],[11,r_zd,r_zb,E,52,[[[r_ba]],[r_ja,[r_Ad,r_ka]]]],[11,r_Bd,r_Ab,E,53,[[[r_ba]],[r_ja,[r_ka]]]],[11,r_zd,E,E,53,[[[r_ba]],[r_ja,[r_Ad,r_ka]]]],[11,r_zd,r_Bb,r_Cd,55,[[[r_ba]],[r_ja,[r_Ad,r_ka]]]],[11,r_Bd,r_Cb,E,56,[[[r_ba]],[r_ja,[r_ka]]]],[11,r_zd,E,E,56,[[[r_ba]],[r_ja,[r_Ad,r_ka]]]],[11,r_Bd,r_Db,E,57,[[[r_ba]],[r_ja,[r_ka]]]],[11,r_zd,E,E,57,[[[r_ba]],[r_ja,[r_Ad,r_ka]]]],[11,r_Bd,r_Eb,E,58,[[[r_ba]],[r_ja,[r_ka]]]],[11,r_zd,E,E,58,[[[r_ba]],[r_ja,[r_Ad,r_ka]]]],[11,r_Bd,r_Fb,E,59,[[[r_ba]],[r_ja,[r_ka]]]],[11,r_zd,E,E,59,[[[r_ba]],[r_ja,[r_Ad,r_ka]]]],[11,r_Dd,r_ub,r_Ld,43,N],[11,r_Ed,E,r_Md,43,N],[11,r_Fd,E,r_Pd,43,[[[r_ba],[r_Va]],[r_ja,[r_ka]]]],[11,r_Gd,E,r_Nd,43,[[[r_ba],[r_Va]]]],[11,r_Hd,E,r_Od,43,N],[11,r_Id,E,r_Kd,43,[[[r_ba]],[r_ja,[r_ka]]]],[11,r_Jd,E,r_Kd,43,[[[r_ba]],[r_ja,[r_ka]]]],[11,r_Dd,r_wb,r_Ld,49,N],[11,r_Ed,E,r_Md,49,N],[11,r_Gd,E,r_Nd,49,[[[r_ba],[r_Va]]]],[11,r_Hd,E,r_Od,49,N],[11,r_Id,E,r_Kd,49,[[[r_ba]],[r_ja,[r_ka]]]],[11,r_Jd,E,r_Kd,49,[[[r_ba]],[r_ja,[r_ka]]]],[11,r_Fd,E,r_Pd,49,[[[r_ba],[r_Va]],[r_ja,[r_ka]]]],[11,r_Dd,r_xb,r_Ld,50,N],[11,r_Ed,E,r_Md,50,N],[11,r_Gd,E,r_Nd,50,[[[r_ba],[r_Va]]]],[11,r_Hd,E,r_Od,50,N],[11,r_Id,E,r_Kd,50,[[[r_ba]],[r_ja,[r_ka]]]],[11,r_Jd,E,r_Kd,50,[[[r_ba]],[r_ja,[r_ka]]]],[11,r_Fd,E,r_Pd,50,[[[r_ba],[r_Va]],[r_ja,[r_ka]]]],[11,r_5a,r_Cb,E,56,[[[r_ba],[r_Va]]]],[11,r_Qd,E,E,56,N],[11,r_Rd,E,E,56,N],[11,r_5a,r_Db,E,57,[[[r_ba],[r_Va]]]],[11,r_Qd,E,E,57,N],[11,r_Rd,E,E,57,N],[11,r_5a,r_Eb,E,58,[[[r_ba],[r_Va]]]],[11,r_Qd,E,E,58,N],[11,r_Rd,E,E,58,N],[11,r_Sd,r_rb,E,37,[[[r_ba],[T],[T],[T]],[r_Va]]],[11,r_Sd,E,E,38,[[[r_ba],[T],[T],[T]],[r_Va]]],[11,r_Sd,E,E,39,[[[r_ba],[T],[T],[T]],[r_Va]]],[11,r_Sd,E,E,40,[[[r_ba],[T],[T],[T]],[r_Va]]],[11,r_Sa,r_9a,"Create a new empty `PerturbationVector`",0,[[],[r_8b]]],[11,"add",E,"Add an index `x_idx` and the corresponding function…",0,[[[r_ba],[r_Ja],["vec",[r_Ja]]],[r_8b]]],[11,r_Sa,r_fa,r_Ra,60,[[[T],[r_Va]],[r_Ad]]],[11,r_Td,E,"Returns the parameter vector",60,[[[r_ba]],[T]]],[11,"cost",E,"Returns the cost function value",60,[[[r_ba]],[r_Va]]],[11,"add_kv",E,"Adds an `ArgminKV`",60,[[[r_ba],[r_pa]],[r_Ad]]],[11,"get_kv",E,"Returns an `ArgminKV`",60,[[[r_ba]],[r_Xb,[r_pa]]]],[11,r_Ud,E,"Returns `true` if a solver terminated and `false` otherwise",12,[[[r_ba]],[r_Sb]]],[11,r_Ca,E,"Returns a texual representation of what happened",12,[[[r_ba]],[r_Sc]]],[11,r_Sa,E,r_Ra,14,[[],[r_pa]]],[11,r_4d,E,"Push a key-value pair to the `kv` vector.",14,[[[r_ba],[r_Sc],[T]],[r_pa]]],[11,"merge",E,"Merge another `kv` into `self.kv`",14,[[[r_ba],[r_pa]],[r_pa]]],[11,r_Sa,E,r_Ra,16,[[[T],[r_Va],[r_Qa],[r_Ib]],[r_la]]],[11,r_Sa,E,E,61,[[],[r_Qb]]],[11,r_Sa,E,r_Ra,62,N],[11,"kv_for_logs",E,"Return the KV for the initial logging",62,[[[r_ba]],[r_pa]]],[11,"kv_for_iter",E,"Return the KV for logging of the iterations",62,[[[r_ba]],[r_pa]]],[11,"reset",E,"Reset `self` to its initial state.",62,N],[11,r_sa,E,"Apply the operator to `param`",62,N],[11,r_ta,E,"Compute the gradient at `param`",62,N],[11,r_ua,E,"Compute the hessian at `param`",62,N],[11,r_va,E,"Modify a `param` with the `modify` method of `operator`.",62,N],[11,r_pc,E,"Set the current parameter vector",62,N],[11,r_mc,E,"Return the current parameter vector",62,N],[11,r_rc,E,"Set the new best parameter vector",62,N],[11,"best_param",E,"Return the current best parameter vector",62,N],[11,r_xc,E,"Set the current cost function value",62,[[[r_ba],[r_Va]],[r_6b]]],[11,r_wc,E,"Return the current cost function value",62,[[[r_ba]],[r_Va]]],[11,r_zc,E,"Set the cost function value of the current best parameter…",62,[[[r_ba],[r_Va]],[r_6b]]],[11,r_yc,E,"Return the cost function value of the current best…",62,[[[r_ba]],[r_Va]]],[11,r_Ua,E,"Set the current gradient",62,N],[11,r_nc,E,"Return the current gradient",62,N],[11,r_qc,E,"Set the current hessian",62,N],[11,r_oc,E,"Return the current hessian",62,N],[11,r_Ac,E,"Set the target cost function value",62,[[[r_ba],[r_Va]],[r_6b]]],[11,"target_cost",E,"Return the target cost function value",62,[[[r_ba]],[r_Va]]],[11,r_uc,E,"Increment the number of iterations.",62,[[[r_ba]],[r_6b]]],[11,r_vc,E,"Return the current number of iterations",62,[[[r_ba]],[r_Qa]]],[11,r_Bc,E,r_Vd,62,[[[r_ba]],[r_6b]]],[11,r_Cc,E,r_Wd,62,[[[r_ba],[r_Qa]],[r_6b]]],[11,r_Dc,E,r_Xd,62,[[[r_ba]],[r_Qa]]],[11,r_Ec,E,r_Yd,62,[[[r_ba]],[r_6b]]],[11,r_Fc,E,r_Zd,62,[[[r_ba],[r_Qa]],[r_6b]]],[11,r_Gc,E,r_na,62,[[[r_ba]],[r_Qa]]],[11,r_Ic,E,r_0d,62,[[[r_ba]],[r_6b]]],[11,r_Jc,E,r_1d,62,[[[r_ba],[r_Qa]],[r_6b]]],[11,r_Kc,E,r_na,62,[[[r_ba]],[r_Qa]]],[11,r_sc,E,"Set the maximum number of iterations.",62,[[[r_ba],[r_Qa]],[r_6b]]],[11,r_tc,E,"Return the maximum number of iterations",62,[[[r_ba]],[r_Qa]]],[11,r_Nc,E,"Set the `TerminationReason`",62,[[[r_ba],[r_Ib]],[r_6b]]],[11,r_2d,E,"Return the `TerminationReason`",62,[[[r_ba]],[r_Ib]]],[11,"termination_reason_text",E,"Return the textual representation of the `TerminationReason`",62,[[[r_ba]],[r_Sc]]],[11,r_Ud,E,"Return whether the algorithm has terminated or not",62,[[[r_ba]],[r_Sb]]],[11,r_ja,E,"Return the result.",62,[[[r_ba]],[r_la]]],[11,"set_total_time",E,"Set the total time needed by the solver",62,[[[r_ba],[r_3d]],[r_6b]]],[11,"total_time",E,"Return the total time",62,[[[r_ba]],[r_3d]]],[11,r_Lc,E,"Add a logger to the list of loggers",62,[[[r_ba],[r_xd,[r_rd]]],[r_6b]]],[11,r_Mc,E,"Add a writer to the list of writers",62,[[[r_ba],[r_xd,[r_td]]],[r_6b]]],[11,r_Zb,E,"Log a `kv`",62,[[[r_ba],[r_pa]],[r_ja,[r_ka]]]],[11,r_Yb,E,"Log a message and a `kv`",62,[[[r_ba],[r_Sc],[r_pa]],[r_ja,[r_ka]]]],[11,r_Vb,E,"Write (TODO)",62,N],[11,r_Qc,E,r_Rc,62,N],[11,r_Tc,E,r_Uc,62,N],[11,r_Vc,E,E,62,N],[11,"store_checkpoint",E,E,62,[[[r_ba],[T]],[r_ja,[r_ka]]]],[11,r_Sa,E,E,63,[[],[r_5b]]],[11,r_4d,E,E,63,[[[r_ba],[r_xd,[r_td]]],[r_5b]]],[11,r_Sa,E,r_Ra,64,[[],[r_3b]]],[11,r_4d,E,"Push another `ArgminLog` to the `logger` field",64,[[[r_ba],[r_xd,[r_rd]]],[r_3b]]],[11,"term",E,"Log to the terminal in a blocking way",65,[[],[r_xd,[r_5d]]]],[11,"term_noblock",E,"Log to the terminal in a non-blocking way (in case of…",65,[[],[r_xd,[r_5d]]]],[11,"file",E,"Log JSON to a file in a blocking way",65,[[[r_Sc]],[r_ja,[r_xd,r_ka]]]],[11,"file_noblock",E,"Log JSON to a file in a non-blocking way (in case of…",65,[[[r_Sc]],[r_ja,[r_xd,r_ka]]]],[11,r_Sa,E,E,66,[[[r_Sc],[r_Jb]],[r_ja,[r_Lb,r_ka]]]],[11,"set_dir",E,E,66,N],[11,"dir",E,E,66,[[[r_ba]],[r_lb]]],[11,"set_name",E,E,66,N],[11,r_6d,E,E,66,[[[r_ba]],[r_lb]]],[11,"set_mode",E,E,66,N],[11,"store",E,E,66,[[[r_ba],[T],[r_lb]],[r_ja,[r_ka]]]],[11,"store_cond",E,E,66,[[[r_ba],[T],[r_Qa]],[r_ja,[r_ka]]]],[11,"from_boxed_compat",E,"Creates an `Error` from `Box<std::error::Error>`.",67,[[["box",[r_ka]]],[r_ka]]],[11,r_nb,E,"Return a reference to the underlying failure that this…",67,[[[r_ba]],[r_ob]]],[11,r_6d,E,"Returns the name of the underlying fail.",67,[[[r_ba]],[r_Xb,[r_Sc]]]],[11,r_7b,E,"Returns a reference to the underlying cause of this…",67,[[[r_ba]],[r_ob]]],[11,r_2b,E,"Gets a reference to the `Backtrace` for this `Error`.",67,[[[r_ba]],[r_2b]]],[11,r_7d,E,"Provides context for this `Error`.",67,[[[r_ba],["d"]],[r_7d]]],[11,r_8d,E,"Wraps `Error` in a compatibility type.",67,[[[r_ba]],[r_8d,[r_ka]]]],[11,"downcast",E,r_ae,67,[[[r_ba]],[r_ja,[r_ka]]]],[11,"find_root_cause",E,"Returns the \"root cause\" of this error - the last value in…",67,[[[r_ba]],[r_ob]]],[11,"iter_causes",E,"Returns a iterator over the causes of this error with the…",67,[[[r_ba]],[r_9d]]],[11,"iter_chain",E,"Returns a iterator over all fails up the chain from the…",67,[[[r_ba]],[r_9d]]],[11,"downcast_ref",E,r_ae,67,[[[r_ba]],[r_Xb]]],[11,"downcast_mut",E,r_ae,67,[[[r_ba]],[r_Xb]]],[11,"root_cause",E,"Deprecated alias to `find_root_cause`.",67,[[[r_ba]],[r_ob]]],[11,r_9d,E,"Deprecated alias to `iter_causes`.",67,[[[r_ba]],[r_9d]]],[11,r_Sa,r_La,E,32,[[["l"],["e"],["p"]],[r_Ma]]],[11,r_Sa,r_fa,E,68,[[],[r_xd,["writetofile"]]]],[11,r_Sa,E,E,69,[[],[r_Rb]]]],"p":[[3,r_be],[8,r_ce],[8,r_de],[8,r_ee],[8,r_fe],[8,r_ge],[8,r_he],[8,r_ie],[8,r_je],[8,r_ke],[8,r_le],[8,r_me],[4,r_ne],[8,r_oe],[3,r_pe],[8,r_qe],[3,r_re],[8,r_se],[4,r_te],[8,r_ue],[4,r_ve],[8,r_we],[4,r_Ha],[4,r_xe],[8,r_ye],[8,r_ze],[8,r_Ae],[8,r_Be],[8,r_Ce],[8,r_De],[8,r_Ee],[8,r_Fe],[3,r_Ge],[8,r_He],[8,r_Ie],[3,r_Je],[3,r_Ke],[3,r_Le],[3,r_Me],[3,r_Ne],[3,r_Oe],[3,r_Pe],[3,r_Qe],[3,r_Re],[8,r_Se],[3,r_Te],[3,r_Ue],[3,r_Ve],[3,r_We],[3,r_Xe],[3,r_Ye],[3,r_Ze],[3,r_0e],[3,"BFGS"],[4,r_1e],[3,r_2e],[3,r_3e],[3,r_4e],[3,r_5e],[3,r_6e],[3,r_7e],[3,r_8e],[3,r_9e],[3,r_af],[3,r_bf],[3,r_cf],[3,r_df],[3,r_Ha],[3,r_ef],[3,r_ff]]};
initSearch(searchIndex);addSearchOptions(searchIndex);