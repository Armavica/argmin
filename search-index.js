var N=null,E="",T="t",U="u",searchIndex={};
var r_0a="set current gradient value",r_0b="backtrace",r_0c="Increments the counter for the computations of the cost…",r_0d="ArgminTrustRegion",r_1a="set_alpha_min_max",r_1b="clone",r_1c="Increases the counter for the computations of the cost…",r_1d="ArgminNLCGBetaUpdate",r_2a="set alpha limits",r_2b="argminlogger",r_2c="Increments the counter for the computations of the…",r_2d="ArgminNorm",r_3a="argmin::solver::newton",r_3b="argminwriter",r_3c="Increases the counter for the computations of the gradient…",r_3d="ArgminKV",r_4a="set_gamma",r_4b="cause",r_4c="Increments the counter for the computations of the Hessian…",r_4d="TerminationReason",r_5a="set gamma",r_5b="perturbationvector",r_5c="Increases the counter for the computations of the Hessian…",r_5d="ArgminDiv",r_6a="box",r_6b="requires_cur_grad",r_6c="Attaches a logger which implements `ArgminLog` to the…",r_6d="ModCholeskySE99",r_7a="argmin::solver::trustregion",r_7b="eval",r_7c="argminlog",r_7d="GershgorinCircles",r_8a="set_epsilon",r_8b="run_fast",r_8c="Attaches a writer which implements `ArgminWrite` to the…",r_8d="ModCholeskySE90",r_9a="set_radius",r_9b="cur_param",r_9c="argminwrite",r_9d="ModCholeskyGMW81",r_Aa="(Pointwise) Divide a `T` by `self`",r_Ab="argmin::solver::linesearch::condition",r_Ac="set_termination_reason",r_Ad="str",r_Ae="WolfeCondition",r_Ba="decomposition",r_Bb="argmin::solver::linesearch::hagerzhang",r_Bc="terminate",r_Bd="argminbase",r_Be="StrongWolfeCondition",r_Ca="arraybase",r_Cb="argmin::solver::linesearch::morethuente",r_Cc="base_reset",r_Cd="Increment the cost function evaluation count",r_Ce="GoldsteinCondition",r_Da="usize",r_Db="argmin::solver::newton::newton_cg",r_Dc="Run the optimization algorithm",r_Dd="Increaese the cost function evaluation count by a given…",r_De="HagerZhangLineSearch",r_Ea="argmin::prelude::ArgminError",r_Eb="argmin::solver::newton::newton_method",r_Ec="Run the essential parts of the optimization algorithm (no…",r_Ed="Return the cost function evaluation count",r_Ee="MoreThuenteLineSearch",r_Fa="text",r_Fb="argmin::solver::quasinewton::bfgs",r_Fc="Applies the cost function or operator to a parameter…",r_Fd="Increment the gradient evaluation count",r_Fe="NewtonCG",r_Ga="(Pointwise) Multiply a `T` with `self`",r_Gb="argmin::solver::simulatedannealing",r_Gc="Computes the gradient at parameter `param`. Returns an…",r_Gd="Increase the gradient evaluation count by a given value",r_Ge="Newton",r_Ha="Add a `T` scaled by an `U` to `self`",r_Hb="argmin::solver::trustregion::cauchypoint",r_Hc="Computes the Hessian at parameter `param`. Returns an…",r_Hd="Increment the hessian evaluation count",r_He="SATempFunc",r_Ia="Dot/scalar product of `T` and `self`",r_Ib="argmin::solver::trustregion::dogleg",r_Ic="Returns the current parameter vector.",r_Id="Increase the hessian evaluation count by a given value",r_Ie="SimulatedAnnealing",r_Ja="Return zero(s)",r_Jb="argmin::solver::trustregion::steihaug",r_Jc="Returns the most recently stored gradient.",r_Jd="termination_reason",r_Je="CauchyPoint",r_Ka="Error",r_Kb="argmin::solver::trustregion::trustregion_method",r_Kc="Returns the most recently stored Hessian.",r_Kd="terminated",r_Ke="Dogleg",r_La="Add a `T` to `self`",r_Lb="formatter",r_Lc="Sets the current parameter to `param`.",r_Ld="duration",r_Le="Steihaug",r_Ma="Subtract a `T` scaled by an `U` from `self`",r_Mb="terminationreason",r_Mc="Sets the current gradient to `grad`.",r_Md="context",r_Me="TrustRegion",r_Na="Subtract a `T` from `self`",r_Nb="ordering",r_Nc="Sets the current Hessian to `hessian`.",r_Nd="compat",r_Ne="ArgminIterationData",r_Oa="argmin::solver::conjugategradient",r_Ob="deserialize",r_Oc="Sets the best parameter vector to `param`.",r_Od="causes",r_Oe="ArgminBase",r_Pa="argminoperator",r_Pb="fmt",r_Pc="Modify the parameter vector by calling the `modify` method…",r_Pd="Attempts to downcast this `Error` to a particular `Fail`…",r_Pe="ArgminLogger",r_Qa="u64",r_Qb="default",r_Qc="Returns the result of the optimization.",r_Qd="argminsloglogger",r_Qe="ArgminSlogLogger",r_Ra="Constructor",r_Rb="write",r_Rc="Sets the maximum number of iterations to `iters`.",r_Rd="push",r_Re="ArgminWriter",r_Sa="new",r_Sb="bool",r_Sc="Returns the maximum number of iterations.",r_Sd="PerturbationVector",r_Se="WriteToFile",r_Ta="argmin::solver",r_Tb="log_info",r_Tc="Increments the iteration counter.",r_Td="FiniteDiff",r_Ua="set_linesearch",r_Ub="log_iter",r_Uc="Returns the current number of iterations.",r_Ud="ArgminSolver",r_Va="Specify line search method",r_Vb="Log general info",r_Vc="Returns the most recently stored cost function value.",r_Vd="ArgminNextIter",r_Wa="argminlinesearch",r_Wb="This should be used to log iteration data only (because…",r_Wc="Sets the current cost function value to `cost`",r_Wd="ArgminLog",r_Xa="f64",r_Xb="serialize",r_Xc="Returns the best cost function value obtained so far.",r_Xd="ArgminWrite",r_Ya="set_cur_grad",r_Yb="partial_cmp",r_Yc="Sets the best cost function value.",r_Yd="ArgminOperator",r_Za="argmin::solver::linesearch",r_Zb="option",r_Zc="Sets the target cost function value to `cost`. The…",r_Zd="ArgminLineSearch",r_aa="argmin",r_ab="set_eta",r_ac="cur_grad",r_ad="Sets the `TerminationReason`",r_ae="Decomposition",r_ba="self",r_bb="Rastrigin test function",r_bc="cur_hessian",r_bd="Checks whether any of the conditions to terminate is true…",r_be="ArgminInv",r_ca="Calculation of the Jacobian J(x) of a vector function `fs`…",r_cb="Ackley test function",r_cc="set_cur_param",r_cd="Resets the `base` field to it's initial conditions. This…",r_ce="ArgminError",r_da="Calculation of the product of the Jacobian J(x) of a…",r_db="argmin::prelude::finitediff",r_dc="set_cur_hessian",r_dd="arc",r_de="ArgminMul",r_ea="Calculation of the product of the Hessian H(x) of a…",r_eb="try_from",r_ec="set_best_param",r_ed="run",r_ee="ArgminResult",r_fa="argmin::prelude",r_fb="borrow",r_fc="set_max_iters",r_fd="next_iter",r_fe="ArgminScaledAdd",r_ga="return current gradient",r_gb="type_id",r_gc="max_iters",r_gd="argminiterationdata",r_ge="ArgminDot",r_ha="set current gradient",r_hb="typeid",r_hc="increment_iter",r_hd="init",r_he="ArgminZero",r_ia="set current parameter vector",r_ib="borrow_mut",r_ic="cur_iter",r_id="Perform one iteration of SA algorithm",r_ie="SignalType",r_ja="result",r_jb="try_into",r_jc="cur_cost",r_jd="set_search_direction",r_je="ArgminAdd",r_ka="argminresult",r_kb="from",r_kc="set_cur_cost",r_kd="set_initial_parameter",r_ke="ArgminWeightedDot",r_la="error",r_lb="into",r_lc="best_cost",r_ld="set_initial_alpha",r_le="ArgminScaledSub",r_ma="Get current cost function value",r_mb="to_owned",r_mc="set_best_cost",r_md="set_initial_cost",r_me="ArgminTranspose",r_na="Return the gradient evaluation count",r_nb="clone_into",r_nc="set_target_cost",r_nd="set_initial_gradient",r_ne="ArgminEye",r_oa="OperatorOutput",r_ob="to_string",r_oc="increment_cost_func_count",r_od="calc_initial_cost",r_oe="ArgminSub",r_pa="Hessian",r_pb="string",r_pc="increase_cost_func_count",r_pd="calc_initial_gradient",r_pe="ConjugateGradient",r_qa="argminkv",r_qb="argmin::prelude::modcholesky",r_qc="cost_func_count",r_qd="Calculate initial cost function value",r_qe="NonlinearConjugateGradient",r_ra="Parameters",r_rb="as_fail",r_rc="increment_grad_func_count",r_rd="Set search direction",r_re="FletcherReeves",r_sa="apply",r_sb="argmin::prelude::ctrlc",r_sc="increase_grad_func_count",r_sd="Set initial parameter",r_se="PolakRibiere",r_ta="gradient",r_tb="fail",r_tc="grad_func_count",r_td="Set initial cost function value",r_te="PolakRibierePlus",r_ua="hessian",r_ub="argmin::solver::conjugategradient::cg",r_uc="Returns the current value of the counter for the…",r_ud="Set initial gradient",r_ue="HestenesStiefel",r_va="modify",r_vb="argmin::solver::conjugategradient::nonlinear_cg",r_vc="increment_hessian_func_count",r_vd="Set initial alpha value",r_ve="SteepestDescent",r_wa="Set the initial step length",r_wb="argmin::solver::conjugategradient::beta",r_wc="increase_hessian_func_count",r_wd="set_grad",r_we="Landweber",r_xa="Set the gradient at the starting point",r_xb="argmin::solver::gradientdescent::steepestdescent",r_xc="hessian_func_count",r_xd="set_hessian",r_xe="BacktrackingLineSearch",r_ya="Compute the l2-norm (`U`) of `self`",r_yb="argmin::solver::landweber",r_yc="add_logger",r_yd="update",r_ye="LineSearchCondition",r_za="Aborted",r_zb="argmin::solver::linesearch::backtracking",r_zc="add_writer",r_zd="param",r_ze="ArmijoCondition";

searchIndex[r_aa]={"doc":"A pure Rust optimization framework","i":[[0,"prelude",r_aa,"Definition of all relevant traits and types # Re-export of…",N,N],[0,"macros",r_fa,"Macros # Macros",N,N],[0,"finitediff",E,"Finite Differentiation",N,N],[3,r_Sd,r_db,"Perturbation Vector for the accelerated computation of the…",N,N],[12,"x_idx",E,"x indices",0,N],[12,"r_idx",E,"correspoding function indices",0,N],[6,"PerturbationVectors",E,"A collection of `PerturbationVector`s",N,N],[8,r_Td,E,E,N,N],[16,"Jacobian",E,E,1,N],[16,r_pa,E,E,1,N],[16,r_oa,E,E,1,N],[10,"forward_diff",E,"Forward difference calculated as",1,[[[r_ba],["fn"]],[r_ba]]],[10,"central_diff",E,"Central difference calculated as",1,[[[r_ba],["fn"]],[r_ba]]],[10,"forward_jacobian",E,r_ca,1,N],[10,"central_jacobian",E,r_ca,1,N],[10,"forward_jacobian_vec_prod",E,r_da,1,[[[r_ba],["fn"],[r_ba]],[r_ba]]],[10,"central_jacobian_vec_prod",E,r_da,1,[[[r_ba],["fn"],[r_ba]],[r_ba]]],[10,"forward_jacobian_pert",E,E,1,N],[10,"central_jacobian_pert",E,E,1,N],[10,"forward_hessian",E,"Calculation of the Hessian using forward differences",1,N],[10,"central_hessian",E,"Calculation of the Hessian using central differences",1,N],[10,"forward_hessian_vec_prod",E,r_ea,1,[[[r_ba],["fn"],[r_ba]],[r_ba]]],[10,"central_hessian_vec_prod",E,r_ea,1,[[[r_ba],["fn"],[r_ba]],[r_ba]]],[10,"forward_hessian_nograd",E,"Calculation of the Hessian using forward differences…",1,N],[10,"forward_hessian_nograd_sparse",E,"Calculation of a sparse Hessian using forward differences…",1,N],[8,r_Ud,r_fa,"Defines the interface to a solver. Usually, there is no…",N,N],[10,r_sa,E,"apply cost function or operator to a parameter vector",2,N],[10,r_ta,E,"compute the gradient for a parameter vector",2,N],[10,r_ua,E,"compute the hessian for a parameter vector",2,N],[10,r_va,E,"modify the parameter vector",2,N],[10,r_9b,E,"return current parameter vector",2,N],[10,r_ac,E,r_ga,2,N],[10,r_bc,E,r_ga,2,N],[10,r_cc,E,r_ia,2,N],[10,r_Ya,E,r_ha,2,N],[10,r_dc,E,r_ha,2,N],[10,r_ec,E,r_ia,2,N],[10,r_ed,E,"Execute the optimization algorithm.",2,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[10,r_8b,E,"Execute the optimization algorithm without Ctrl-C…",2,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[10,r_ja,E,"Returns the best solution found during optimization.",2,[[[r_ba]],[r_ka]]],[10,r_Ac,E,"Set termination reason (doesn't terminate yet! -- this is…",2,N],[10,r_Bc,E,"Evaluate all stopping criterions and return the…",2,[[[r_ba]],[r_Mb]]],[10,r_fc,E,"Set max number of iterations.",2,N],[10,r_gc,E,"Get max number of iterations.",2,[[[r_ba]],[r_Qa]]],[10,r_ic,E,"Get current iteration number.",2,[[[r_ba]],[r_Qa]]],[10,r_hc,E,"Increment the iteration number by one",2,N],[10,r_jc,E,r_ma,2,[[[r_ba]],[r_Xa]]],[10,r_kc,E,r_ma,2,N],[10,r_lc,E,"Get best cost function value",2,[[[r_ba]],[r_Xa]]],[10,r_mc,E,"set best cost value",2,N],[10,r_nc,E,"Set the target cost function value which is used as a…",2,N],[10,r_yc,E,"Add a logger to the array of loggers",2,N],[10,r_zc,E,"Add a writer to the array of writers",2,N],[10,r_Cc,E,"Reset the base of the algorithm to its initial state",2,N],[10,r_oc,E,r_Cd,2,N],[10,r_pc,E,r_Dd,2,N],[10,r_qc,E,r_Ed,2,[[[r_ba]],[r_Qa]]],[10,r_rc,E,r_Fd,2,N],[10,r_sc,E,r_Gd,2,N],[10,r_tc,E,r_na,2,[[[r_ba]],[r_Qa]]],[10,r_vc,E,r_Hd,2,N],[10,r_wc,E,r_Id,2,N],[10,r_xc,E,r_na,2,[[[r_ba]],[r_Qa]]],[8,r_Vd,E,"Main part of every solver: `next_iter` computes one…",N,N],[16,r_ra,E,"Parameter vectors",3,N],[16,r_oa,E,"Output of the operator",3,N],[16,r_pa,E,r_pa,3,N],[10,r_fd,E,"Computes one iteration of the algorithm.",3,[[[r_ba]],[r_ja,[r_gd,r_la]]]],[11,r_hd,E,"Initializes the algorithm",3,[[[r_ba]],[r_ja,[r_la]]]],[8,r_Wd,E,"Defince the interface every logger needs to expose",N,N],[10,r_Tb,E,"Logs general information (a message `msg` and/or key-value…",4,[[[r_ba],[r_Ad],[r_qa]],[r_ja,[r_la]]]],[10,r_Ub,E,"Logs information from iterations. Only accepts key-value…",4,[[[r_ba],[r_qa]],[r_ja,[r_la]]]],[8,r_Xd,E,"Every writer (which is something that writes parameter…",N,N],[16,"Param",E,E,5,N],[10,r_Rb,E,"Writes the parameter vector somewhere",5,N],[3,r_Ne,E,"The datastructure which is returned by the `next_iter`…",N,N],[8,r_Yd,E,"This trait needs to be implemented for every operator/cost…",N,N],[16,r_ra,E,"Type of the parameter vector",6,N],[16,r_oa,E,"Output of the operator. Most solvers expect `f64`.",6,N],[16,r_pa,E,"Type of Hessian",6,N],[11,r_sa,E,"Applies the operator/cost function to parameters",6,N],[11,r_ta,E,"Computes the gradient at the given parameters",6,N],[11,r_ua,E,"Computes the hessian at the given parameters",6,N],[11,r_va,E,"Modifies a parameter vector. Comes with a variable that…",6,N],[8,r_Zd,E,"Defines a common interface to line search methods.…",N,N],[10,r_kd,E,"Set the initial parameter (starting point)",7,N],[10,r_jd,E,"Set the search direction",7,N],[10,r_ld,E,r_wa,7,[[[r_ba],[r_Xa]],[r_ja,[r_la]]]],[10,r_md,E,"Set the cost function value at the starting point as…",7,N],[10,r_nd,E,"Set the gradient at the starting point as opposed to…",7,N],[10,r_od,E,"calculate the initial cost function value using an…",7,[[[r_ba]],[r_ja,[r_la]]]],[10,r_pd,E,"calculate the initial gradient using an operator as…",7,[[[r_ba]],[r_ja,[r_la]]]],[8,r_0d,E,"Defines a common interface to methods which calculate…",N,N],[10,r_9a,E,r_wa,8,N],[10,r_wd,E,r_xa,8,N],[10,r_xd,E,r_xa,8,N],[8,r_1d,E,"Every method for the update of beta needs to implement…",N,N],[10,r_yd,E,"Update beta Parameter 1: \\nabla f_k Parameter 2: \\nabla…",9,[[[r_ba],[T],[T],[T]],[r_Xa]]],[8,r_2d,E,r_ya,N,N],[10,"norm",E,r_ya,10,[[[r_ba]],[U]]],[3,r_3d,E,"A simple key-value storage",N,N],[12,"kv",E,"The actual key value storage",11,N],[14,"check_param",E,"Release an `T` from an `Option<T>` if it is not `None`. If…",N,N],[3,r_Oe,E,"Storage for data needed by most solvers",N,N],[4,r_4d,E,"Indicates why the optimization algorithm stopped",N,N],[13,"NotTerminated",E,"In case it has not terminated yet",12,N],[13,"MaxItersReached",E,"Maximum number of iterations reached",12,N],[13,"TargetCostReached",E,"Target cost function value reached",12,N],[13,"TargetPrecisionReached",E,"Target precision reached",12,N],[13,"AcceptedStallIterExceeded",E,"Acceped stall iter exceeded",12,N],[13,"BestStallIterExceeded",E,"Best stall iter exceeded",12,N],[13,"LineSearchConditionMet",E,"Condition for Line search met",12,N],[13,r_za,E,r_za,12,N],[8,r_5d,E,r_Aa,N,N],[10,"div",E,r_Aa,13,[[[r_ba],[T]],[U]]],[0,"modcholesky",E,"Modified Cholesky decompositions Modified Cholesky…",N,N],[8,r_6d,r_qb,"Schnabel & Eskow algorithm (1999)",N,N],[11,"mod_cholesky_se99",E,"Computes the modified Cholesky decomposition with the SE99…",14,[[[r_ba]],[r_Ba]]],[8,r_7d,E,"Gershgorin circles",N,N],[10,"gershgorin_circles",E,"Computes the Gershgorin Circles of a matrix",15,[[[r_ba]],["vec"]]],[8,r_8d,E,"Schnabel & Eskow algorithm (1990)",N,N],[11,"mod_cholesky_se90",E,"Computes the modified Cholesky decomposition with the SE90…",16,[[[r_ba]],[r_Ba]]],[8,r_9d,E,"Gill, Murray and Wright (1981)",N,N],[11,"mod_cholesky_gmw81",E,"Computes the modified Cholesky decomposition with the…",17,[[[r_ba]],[r_Ba]]],[3,r_ae,E,E,N,N],[12,"l",E,E,18,N],[12,"e",E,E,18,N],[12,"p",E,E,18,N],[0,"utils",E,"Utility functions",N,N],[5,"eigenvalues_2x2","argmin::prelude::modcholesky::utils","Computes the Eigenvalues of a 2x2 matrix",N,N],[5,"swap_columns",E,"Swaps columns `idx1` and `idx2` of matrix `mat`",N,N],[5,"swap_rows",E,"Swaps rows `idx1` and `idx2` of matrix `mat`",N,N],[5,"index_of_largest",E,"Returns the index of the largest element in a 1D array",N,[[[r_Ca]],[r_Da]]],[5,"index_of_largest_abs",E,"Returns the index of the element with the largest absolute…",N,[[[r_Ca]],[r_Da]]],[5,"index_to_permutation_mat",E,"Returns the permutation matrix for a vector of permuted…",N,N],[5,"diag_mat_from_arr",E,"Builds a diagonal matrix from a 1D slice",N,N],[5,"random_householder",E,"Returns a random Householder matrix of dimension `dim` and…",N,[[[r_Da],["u8"]],[r_Ca,["ownedrepr","dim"]]]],[5,"random_diagonal",E,"Returns a random diagonal matrix with Eigenvalues…",N,N],[8,r_be,r_fa,"Compute the inverse (`T`) of `self`",N,N],[10,"inv",E,E,19,[[[r_ba]],[r_ja,[r_la]]]],[3,r_Pe,E,"Container for `ArgminLog`gers",N,N],[4,r_ce,E,E,N,N],[13,"InvalidParameter",E,"Indicates and invalid parameter",20,N],[12,r_Fa,r_Ea,E,20,N],[13,"NotImplemented",r_fa,"Indicates that a function is not implemented",20,N],[12,r_Fa,r_Ea,E,20,N],[13,"NotInitialized",r_fa,"Indicates that a function is not initialized",20,N],[12,r_Fa,r_Ea,E,20,N],[13,"ConditionViolated",r_fa,"Indicates that a condition is violated",20,N],[12,r_Fa,r_Ea,E,20,N],[13,"ImpossibleError",r_fa,"Indicates an impossible error",20,N],[12,r_Fa,r_Ea,E,20,N],[3,r_Ka,r_fa,"The `Error` type, which can contain any failure.",N,N],[8,r_de,E,r_Ga,N,N],[10,"mul",E,r_Ga,21,[[[r_ba],[T]],[U]]],[3,r_ee,E,"Return struct for all solvers.",N,N],[12,r_zd,E,"Final parameter vector",22,N],[12,"cost",E,"Final cost value",22,N],[12,"iters",E,"Number of iterations",22,N],[12,r_Kd,E,"Indicated whether it terminated or not",22,N],[12,r_Jd,E,"Reason of termination",22,N],[8,r_fe,E,r_Ha,N,N],[10,"scaled_add",E,r_Ha,23,[[[r_ba],[U],[T]],["v"]]],[8,r_ge,E,r_Ia,N,N],[10,"dot",E,r_Ia,24,[[[r_ba],[T]],[U]]],[14,"make_kv",E,"Creates an `ArgminKV` at compile time in order to avoid…",N,N],[8,r_he,E,"Return param vector of all zeros (for now, this is a hack.…",N,N],[10,"zero_like",E,r_Ja,25,[[[r_ba]],[r_ba]]],[10,"zero",E,r_Ja,25,[[],[r_ba]]],[3,r_Qe,E,"A logger based on `slog`",N,N],[5,"set_handler",r_sb,"Register signal handler for Ctrl-C.",N,[[["f"]],[r_ja,[r_la]]]],[4,r_Ka,E,"Ctrl-C error.",N,N],[13,"NoSuchSignal",E,"Signal could not be found from the system.",26,N],[13,"MultipleHandlers",E,"Ctrl-C signal handler already registered.",26,N],[13,"System",E,"Unexpected system error.",26,N],[4,r_ie,E,"A cross-platform way to represent Ctrl-C or program…",N,N],[13,"Ctrlc",E,"Ctrl-C",27,N],[13,"Termination",E,"Program termination Maps to `SIGTERM` on *nix,…",27,N],[13,"Other",E,"Other signal/event using platform-specific data",27,N],[6,"Signal",E,"Platform specific signal type",N,N],[3,r_Re,r_fa,E,N,N],[8,r_je,E,r_La,N,N],[10,"add",E,r_La,28,[[[r_ba],[T]],[U]]],[8,r_ke,E,"Dot/scalar product of `T` and `self` weighted by W (p^TWv)",N,N],[10,"weighted_dot",E,r_Ia,29,[[[r_ba],["v"],[T]],[U]]],[8,r_le,E,r_Ma,N,N],[10,"scaled_sub",E,r_Ma,30,[[[r_ba],[U],[T]],["v"]]],[8,r_me,E,E,N,N],[10,T,E,E,31,[[[r_ba]],[r_ba]]],[8,r_ne,E,E,N,N],[10,"eye",E,E,32,[[[r_Da]],[r_ba]]],[10,"eye_like",E,E,32,[[[r_ba]],[r_ba]]],[8,r_oe,E,r_Na,N,N],[10,"sub",E,r_Na,33,[[[r_ba],[T]],[U]]],[3,r_Se,E,E,N,N],[0,"solver",r_aa,"Solvers",N,N],[0,"conjugategradient",r_Ta,"Conjugate Gradient methods",N,N],[0,"cg",r_Oa,"Conjugate gradient method # References:",N,N],[3,r_pe,r_ub,"The conjugate gradient method is a solver for systems of…",N,N],[11,r_Sa,E,r_Ra,34,[[[r_Pa],[T],[T]],[r_ja,[r_la]]]],[11,"p",E,"Return the current search direction (This is needed by…",34,[[[r_ba]],[T]]],[11,"p_prev",E,"Return the previous search direction (This is needed by…",34,[[[r_ba]],[T]]],[11,"residual",E,"Return the current residual (This is needed by NewtonCG…",34,[[[r_ba]],[T]]],[0,"nonlinear_cg",r_Oa,"Nonlinear conjugate gradient method Important TODO: Find…",N,N],[3,r_qe,r_vb,"The nonlinear conjugate gradient is a generalization of…",N,N],[11,r_Sa,E,"Constructor (Polak Ribiere Conjugate Gradient (PR-CG))",35,[[[r_Pa],[T]],[r_ja,[r_la]]]],[11,"new_pr",E,"New PolakRibiere CG (PR-CG)",35,[[[r_Pa],[T]],[r_ja,[r_la]]]],[11,"new_prplus",E,"New PolakRibierePlus CG (PR+-CG)",35,[[[r_Pa],[T]],[r_ja,[r_la]]]],[11,"new_fr",E,"New FletcherReeves CG (FR-CG)",35,[[[r_Pa],[T]],[r_ja,[r_la]]]],[11,"new_hs",E,"New HestenesStiefel CG (HS-CG)",35,[[[r_Pa],[T]],[r_ja,[r_la]]]],[11,r_Ua,E,r_Va,35,[[[r_ba],[r_6a,[r_Wa]]],[r_ba]]],[11,"set_beta_update",E,"Specify beta update method",35,[[[r_ba],[r_6a,["argminnlcgbetaupdate"]]],[r_ba]]],[11,"set_restart_iters",E,"Specifiy the number of iterations after which a restart…",35,[[[r_ba],[r_Qa]],[r_ba]]],[11,"set_restart_orthogonality",E,"Set the value for the orthogonality measure. Setting this…",35,[[[r_ba],[r_Xa]],[r_ba]]],[0,"beta",r_Oa,"Beta update methods for nonlinear CG # Beta update methods",N,N],[3,r_re,r_wb,"Fletcher and Reeves (FR) method TODO: Reference",N,N],[3,r_se,E,"Polak and Ribiere (PR) method TODO: Reference",N,N],[3,r_te,E,"Polak and Ribiere Plus (PR+) method TODO: Reference",N,N],[3,r_ue,E,"Hestenes and Stiefel (HS) method TODO: Reference",N,N],[11,r_Sa,E,r_Ra,36,[[],[r_ba]]],[11,r_Sa,E,r_Ra,37,[[],[r_ba]]],[11,r_Sa,E,r_Ra,38,[[],[r_ba]]],[11,r_Sa,E,r_Ra,39,[[],[r_ba]]],[0,"gradientdescent",r_Ta,"Gradient descent methods",N,N],[0,"steepestdescent","argmin::solver::gradientdescent","Steepest Descent method",N,N],[3,r_ve,r_xb,"Steepest descent iteratively takes steps in the direction…",N,N],[11,r_Sa,E,r_Ra,40,[[[r_Pa],[T]],[r_ja,[r_la]]]],[11,r_Ua,E,r_Va,40,[[[r_ba],[r_6a,[r_Wa]]],[r_ba]]],[0,"landweber",r_Ta,"Landweber iteration",N,N],[3,r_we,r_yb,"The Landweber iteration is a solver for ill-posed linear…",N,N],[11,r_Sa,E,r_Ra,41,[[[r_Pa],[r_Xa],[T]],[r_ja,[r_la]]]],[0,"linesearch",r_Ta,"Line search methods",N,N],[0,"backtracking",r_Za,"Backtracking line search algorithm * Backtracking line…",N,N],[3,r_xe,r_zb,"The Backtracking line search is a simple method to find a…",N,N],[11,r_Sa,E,r_Ra,42,[[[r_Pa]],[r_ba]]],[11,r_Ya,E,r_0a,42,[[[r_ba],[T]],[r_ba]]],[11,"set_rho",E,"Set contraction factor rho",42,[[[r_ba],[r_Xa]],[r_ja,[r_la]]]],[11,"set_condition",E,"Set condition",42,[[[r_ba],[r_6a,["linesearchcondition"]]],[r_ba]]],[0,"condition",r_Za,"Acceptance conditions # References:",N,N],[3,r_ze,r_Ab,"Armijo Condition",N,N],[3,r_Ae,E,"Wolfe Condition",N,N],[3,r_Be,E,"Strong Wolfe conditions",N,N],[3,r_Ce,E,"Goldstein conditions",N,N],[8,r_ye,E,"Needs to be implemented by everything that wants to be a…",N,N],[10,r_7b,E,"Evaluate the condition",43,[[[r_ba],[r_Xa],[T],[r_Xa],[T],[T],[r_Xa]],[r_Sb]]],[10,r_6b,E,"Indicates whether this condition requires the computation…",43,[[[r_ba]],[r_Sb]]],[11,r_Sa,E,r_Ra,44,[[[r_Xa]],[r_ja,[r_la]]]],[11,r_Sa,E,r_Ra,45,[[[r_Xa],[r_Xa]],[r_ja,[r_la]]]],[11,r_Sa,E,r_Ra,46,[[[r_Xa],[r_Xa]],[r_ja,[r_la]]]],[11,r_Sa,E,r_Ra,47,[[[r_Xa]],[r_ja,[r_la]]]],[0,"hagerzhang",r_Za,"Hager-Zhang line search algorithm * Hager-Zhang line search",N,N],[3,r_De,r_Bb,"The Hager-Zhang line search is a method to find a step…",N,N],[11,r_Sa,E,r_Ra,48,[[[r_Pa]],[r_ba]]],[11,r_Ya,E,r_0a,48,[[[r_ba],[T]],[r_ba]]],[11,"set_delta",E,"set delta",48,[[[r_ba],[r_Xa]],[r_ja,[r_la]]]],[11,"set_sigma",E,"set sigma",48,[[[r_ba],[r_Xa]],[r_ja,[r_la]]]],[11,r_8a,E,"set epsilon",48,[[[r_ba],[r_Xa]],[r_ja,[r_la]]]],[11,"set_theta",E,"set theta",48,[[[r_ba],[r_Xa]],[r_ja,[r_la]]]],[11,r_4a,E,r_5a,48,[[[r_ba],[r_Xa]],[r_ja,[r_la]]]],[11,r_ab,E,"set eta",48,[[[r_ba],[r_Xa]],[r_ja,[r_la]]]],[11,r_1a,E,r_2a,48,[[[r_ba],[r_Xa],[r_Xa]],[r_ja,[r_la]]]],[0,"morethuente",r_Za,"More-Thuente line search algorithm * More-Thuente line…",N,N],[3,r_Ee,r_Cb,"The More-Thuente line search is a method to find a step…",N,N],[11,r_Sa,E,r_Ra,49,[[[r_Pa]],[r_ba]]],[11,r_Ya,E,r_0a,49,[[[r_ba],[T]],[r_ba]]],[11,"set_c",E,"Set c1 and c2 where 0 < c1 < c2 < 1.",49,[[[r_ba],[r_Xa],[r_Xa]],[r_ja,[r_la]]]],[11,r_1a,E,r_2a,49,[[[r_ba],[r_Xa],[r_Xa]],[r_ja,[r_la]]]],[0,"newton",r_Ta,"Newton Methods",N,N],[0,"newton_cg",r_3a,"Newton-CG method TODO: Stop when search direction is close…",N,N],[3,r_Fe,r_Db,"The Newton-CG method (also called truncated Newton method)…",N,N],[11,r_Sa,E,r_Ra,50,[[[r_Pa],[T]],[r_ba]]],[11,r_Ua,E,r_Va,50,[[[r_ba],[r_6a,[r_Wa]]],[r_ba]]],[11,"set_curvature_threshold",E,"Set curvature threshold",50,[[[r_ba],[r_Xa]],[r_ba]]],[0,"newton_method",r_3a,"Newton's method # References:",N,N],[3,r_Ge,r_Eb,"Newton's method iteratively finds the stationary points of…",N,N],[11,r_Sa,E,r_Ra,51,[[[r_Pa],[T]],[r_ba]]],[11,r_4a,E,r_5a,51,[[[r_ba],[r_Xa]],[r_ja,[r_la]]]],[0,"quasinewton",r_Ta,"Quasi-Newton methods",N,N],[0,"bfgs","argmin::solver::quasinewton","References:",N,N],[3,"BFGS",r_Fb,"BFGS method",N,N],[11,r_Sa,E,r_Ra,52,[[[r_Pa],[T],["h"]],[r_ba]]],[11,r_Ua,E,r_Va,52,[[[r_ba],[r_6a,[r_Wa]]],[r_ba]]],[0,"simulatedannealing",r_Ta,E,N,N],[3,r_Ie,r_Gb,"Simulated Annealing",N,N],[4,r_He,E,"Temperature functions for Simulated Annealing.",N,N],[13,"TemperatureFast",E,"`t_i = t_init / i`",53,N],[13,"Boltzmann",E,"`t_i = t_init / ln(i)`",53,N],[13,"Exponential",E,"`t_i = t_init * x^i`",53,N],[13,"Custom",E,"User-provided temperature function. The first parameter…",53,N],[11,r_Sa,E,r_Ra,54,[[[r_Pa],[T],[r_Xa]],[r_ja,[r_la]]]],[11,"temp_func",E,"Set temperature function to one of the options in…",54,[[[r_ba],["satempfunc"]],[r_ba]]],[11,"stall_accepted",E,"The optimization stops after there has been no accepted…",54,[[[r_ba],[r_Qa]],[r_ba]]],[11,"stall_best",E,"The optimization stops after there has been no new best…",54,[[[r_ba],[r_Qa]],[r_ba]]],[11,"reannealing_fixed",E,"Start reannealing after `iter` iterations",54,[[[r_ba],[r_Qa]],[r_ba]]],[11,"reannealing_accepted",E,"Start reannealing after no accepted solution has been…",54,[[[r_ba],[r_Qa]],[r_ba]]],[11,"reannealing_best",E,"Start reannealing after no new best solution has been…",54,[[[r_ba],[r_Qa]],[r_ba]]],[0,"trustregion",r_Ta,"Argmin Trust region methods",N,N],[5,"reduction_ratio",r_7a,"Computes reduction ratio",N,[[[r_Xa],[r_Xa],[r_Xa],[r_Xa]],[r_Xa]]],[0,"cauchypoint",E,"Cauchy Point # References:",N,N],[3,r_Je,r_Hb,"The Cauchy point is the minimum of the quadratic…",N,N],[11,r_Sa,E,r_Ra,55,[[[r_Pa]],[r_ba]]],[0,"dogleg",r_7a,"Dogleg method # References:",N,N],[3,r_Ke,r_Ib,"The Dogleg method computes the intersection of the trust…",N,N],[11,r_Sa,E,r_Ra,56,[[[r_Pa]],[r_ba]]],[0,"steihaug",r_7a,"Steihaug method # References:",N,N],[3,r_Le,r_Jb,"The Steihaug method is a conjugate gradients based…",N,N],[11,r_Sa,E,r_Ra,57,[[[r_Pa]],[r_ba]]],[11,r_8a,E,"Set epsilon",57,[[[r_ba],[r_Xa]],[r_ja,[r_la]]]],[0,"trustregion_method",r_7a,"Trust region solver # References:",N,N],[3,r_Me,r_Kb,"The trust region method approximates the cost function…",N,N],[11,r_Sa,E,r_Ra,58,[[[r_Pa],[T]],[r_ba]]],[11,r_9a,E,"set radius",58,[[[r_ba],[r_Xa]],[r_ba]]],[11,"set_max_radius",E,"Set maximum radius",58,[[[r_ba],[r_Xa]],[r_ba]]],[11,r_ab,E,"Set eta",58,[[[r_ba],[r_Xa]],[r_ja,[r_la]]]],[11,"set_subproblem",E,"Set subproblem",58,[[[r_ba],[r_6a,["argmintrustregion"]]],[r_ba]]],[0,"testfunctions",r_aa,"Testfunctions # Testfunctions",N,N],[5,"mccorminck","argmin::testfunctions","McCorminck test function",N,N],[5,"himmelblau",E,"Himmelblau test function",N,N],[5,"sphere_derivative",E,"Derivative of sphere test function",N,N],[5,"schaffer_n2",E,"Schaffer test function No. 2",N,N],[5,"holder_table",E,"Holder table test function",N,N],[5,"rosenbrock_2d_hessian",E,"Hessian of 2D Rosenbrock function",N,N],[5,"rastrigin",E,r_bb,N,N],[5,"rosenbrock_2d",E,"2D Rosenbrock test function",N,N],[5,"ackley",E,r_cb,N,N],[5,"zero",E,"Zero test function",N,N],[5,"goldsteinprice",E,"Goldstein-Price test function",N,N],[5,"matyas",E,"Matyas test function",N,N],[5,"schaffer_n4",E,"Schaffer test function No. 4",N,N],[5,"booth",E,"Booth test function",N,N],[5,"eggholder",E,"Eggholder test function",N,N],[5,"picheny",E,"Picheny test function",N,N],[5,"rastrigin_a",E,r_bb,N,N],[5,"levy_n13",E,"Levy test function No. 13",N,N],[5,"cross_in_tray",E,"Cross-in-tray test function",N,N],[5,"sphere",E,"Sphere test function",N,N],[5,"zero_derivative",E,"Derivative of zero test function",N,N],[5,"threehumpcamel",E,"Three-hump camel test function",N,N],[5,"styblinski_tang",E,"Styblinski-Tang test function",N,N],[5,"levy",E,"Levy test function",N,N],[5,"rosenbrock_2d_derivative",E,"Derivative of 2D Rosenbrock function",N,N],[5,"easom",E,"Easom test function",N,N],[5,"rosenbrock",E,"Multidimensional Rosenbrock test function",N,N],[5,"ackley_param",E,r_cb,N,N],[5,"bukin_n6",E,"Bukin test function No. 6",N,N],[5,"beale",E,"Beale test function",N,N],[11,r_kb,r_db,E,0,[[[T]],[T]]],[11,r_lb,E,E,0,[[[r_ba]],[U]]],[11,r_mb,E,E,0,[[[r_ba]],[T]]],[11,r_nb,E,E,0,N],[11,r_eb,E,E,0,[[[U]],[r_ja]]],[11,r_fb,E,E,0,[[[r_ba]],[T]]],[11,r_gb,E,E,0,[[[r_ba]],[r_hb]]],[11,r_ib,E,E,0,[[[r_ba]],[T]]],[11,r_jb,E,E,0,[[[r_ba]],[r_ja]]],[11,r_kb,r_fa,E,59,[[[T]],[T]]],[11,r_lb,E,E,59,[[[r_ba]],[U]]],[11,r_eb,E,E,59,[[[U]],[r_ja]]],[11,r_fb,E,E,59,[[[r_ba]],[T]]],[11,r_gb,E,E,59,[[[r_ba]],[r_hb]]],[11,r_ib,E,E,59,[[[r_ba]],[T]]],[11,r_jb,E,E,59,[[[r_ba]],[r_ja]]],[11,r_ob,E,E,11,[[[r_ba]],[r_pb]]],[11,r_kb,E,E,11,[[[T]],[T]]],[11,r_lb,E,E,11,[[[r_ba]],[U]]],[11,r_mb,E,E,11,[[[r_ba]],[T]]],[11,r_nb,E,E,11,N],[11,r_eb,E,E,11,[[[U]],[r_ja]]],[11,r_fb,E,E,11,[[[r_ba]],[T]]],[11,r_gb,E,E,11,[[[r_ba]],[r_hb]]],[11,r_ib,E,E,11,[[[r_ba]],[T]]],[11,r_jb,E,E,11,[[[r_ba]],[r_ja]]],[11,r_kb,E,E,60,[[[T]],[T]]],[11,r_lb,E,E,60,[[[r_ba]],[U]]],[11,r_mb,E,E,60,[[[r_ba]],[T]]],[11,r_nb,E,E,60,N],[11,r_eb,E,E,60,[[[U]],[r_ja]]],[11,r_fb,E,E,60,[[[r_ba]],[T]]],[11,r_gb,E,E,60,[[[r_ba]],[r_hb]]],[11,r_ib,E,E,60,[[[r_ba]],[T]]],[11,r_jb,E,E,60,[[[r_ba]],[r_ja]]],[11,r_ob,E,E,12,[[[r_ba]],[r_pb]]],[11,r_kb,E,E,12,[[[T]],[T]]],[11,r_lb,E,E,12,[[[r_ba]],[U]]],[11,r_mb,E,E,12,[[[r_ba]],[T]]],[11,r_nb,E,E,12,N],[11,r_eb,E,E,12,[[[U]],[r_ja]]],[11,r_fb,E,E,12,[[[r_ba]],[T]]],[11,r_gb,E,E,12,[[[r_ba]],[r_hb]]],[11,r_ib,E,E,12,[[[r_ba]],[T]]],[11,r_jb,E,E,12,[[[r_ba]],[r_ja]]],[11,r_kb,r_qb,E,18,[[[T]],[T]]],[11,r_lb,E,E,18,[[[r_ba]],[U]]],[11,r_eb,E,E,18,[[[U]],[r_ja]]],[11,r_fb,E,E,18,[[[r_ba]],[T]]],[11,r_gb,E,E,18,[[[r_ba]],[r_hb]]],[11,r_ib,E,E,18,[[[r_ba]],[T]]],[11,r_jb,E,E,18,[[[r_ba]],[r_ja]]],[11,r_kb,r_fa,E,61,[[[T]],[T]]],[11,r_lb,E,E,61,[[[r_ba]],[U]]],[11,r_mb,E,E,61,[[[r_ba]],[T]]],[11,r_nb,E,E,61,N],[11,r_eb,E,E,61,[[[U]],[r_ja]]],[11,r_fb,E,E,61,[[[r_ba]],[T]]],[11,r_gb,E,E,61,[[[r_ba]],[r_hb]]],[11,r_ib,E,E,61,[[[r_ba]],[T]]],[11,r_jb,E,E,61,[[[r_ba]],[r_ja]]],[11,r_ob,E,E,20,[[[r_ba]],[r_pb]]],[11,r_kb,E,E,20,[[[T]],[T]]],[11,r_lb,E,E,20,[[[r_ba]],[U]]],[11,r_eb,E,E,20,[[[U]],[r_ja]]],[11,r_fb,E,E,20,[[[r_ba]],[T]]],[11,r_gb,E,E,20,[[[r_ba]],[r_hb]]],[11,r_ib,E,E,20,[[[r_ba]],[T]]],[11,r_jb,E,E,20,[[[r_ba]],[r_ja]]],[11,r_rb,E,E,20,[[[r_ba]],[r_tb]]],[11,r_ob,E,E,62,[[[r_ba]],[r_pb]]],[11,r_kb,E,E,62,[[[T]],[T]]],[11,r_lb,E,E,62,[[[r_ba]],[U]]],[11,r_eb,E,E,62,[[[U]],[r_ja]]],[11,r_fb,E,E,62,[[[r_ba]],[T]]],[11,r_gb,E,E,62,[[[r_ba]],[r_hb]]],[11,r_ib,E,E,62,[[[r_ba]],[T]]],[11,r_jb,E,E,62,[[[r_ba]],[r_ja]]],[11,r_rb,E,E,62,[[[r_ba]],[r_tb]]],[11,r_ob,E,E,22,[[[r_ba]],[r_pb]]],[11,r_kb,E,E,22,[[[T]],[T]]],[11,r_lb,E,E,22,[[[r_ba]],[U]]],[11,r_mb,E,E,22,[[[r_ba]],[T]]],[11,r_nb,E,E,22,N],[11,r_eb,E,E,22,[[[U]],[r_ja]]],[11,r_fb,E,E,22,[[[r_ba]],[T]]],[11,r_gb,E,E,22,[[[r_ba]],[r_hb]]],[11,r_ib,E,E,22,[[[r_ba]],[T]]],[11,r_jb,E,E,22,[[[r_ba]],[r_ja]]],[11,r_kb,E,E,63,[[[T]],[T]]],[11,r_lb,E,E,63,[[[r_ba]],[U]]],[11,r_mb,E,E,63,[[[r_ba]],[T]]],[11,r_nb,E,E,63,N],[11,r_eb,E,E,63,[[[U]],[r_ja]]],[11,r_fb,E,E,63,[[[r_ba]],[T]]],[11,r_gb,E,E,63,[[[r_ba]],[r_hb]]],[11,r_ib,E,E,63,[[[r_ba]],[T]]],[11,r_jb,E,E,63,[[[r_ba]],[r_ja]]],[11,r_ob,r_sb,E,26,[[[r_ba]],[r_pb]]],[11,r_kb,E,E,26,[[[T]],[T]]],[11,r_lb,E,E,26,[[[r_ba]],[U]]],[11,r_eb,E,E,26,[[[U]],[r_ja]]],[11,r_fb,E,E,26,[[[r_ba]],[T]]],[11,r_gb,E,E,26,[[[r_ba]],[r_hb]]],[11,r_ib,E,E,26,[[[r_ba]],[T]]],[11,r_jb,E,E,26,[[[r_ba]],[r_ja]]],[11,r_rb,E,E,26,[[[r_ba]],[r_tb]]],[11,r_kb,E,E,27,[[[T]],[T]]],[11,r_lb,E,E,27,[[[r_ba]],[U]]],[11,r_eb,E,E,27,[[[U]],[r_ja]]],[11,r_fb,E,E,27,[[[r_ba]],[T]]],[11,r_gb,E,E,27,[[[r_ba]],[r_hb]]],[11,r_ib,E,E,27,[[[r_ba]],[T]]],[11,r_jb,E,E,27,[[[r_ba]],[r_ja]]],[11,r_kb,r_fa,E,64,[[[T]],[T]]],[11,r_lb,E,E,64,[[[r_ba]],[U]]],[11,r_mb,E,E,64,[[[r_ba]],[T]]],[11,r_nb,E,E,64,N],[11,r_eb,E,E,64,[[[U]],[r_ja]]],[11,r_fb,E,E,64,[[[r_ba]],[T]]],[11,r_gb,E,E,64,[[[r_ba]],[r_hb]]],[11,r_ib,E,E,64,[[[r_ba]],[T]]],[11,r_jb,E,E,64,[[[r_ba]],[r_ja]]],[11,r_kb,E,E,65,[[[T]],[T]]],[11,r_lb,E,E,65,[[[r_ba]],[U]]],[11,r_eb,E,E,65,[[[U]],[r_ja]]],[11,r_fb,E,E,65,[[[r_ba]],[T]]],[11,r_gb,E,E,65,[[[r_ba]],[r_hb]]],[11,r_ib,E,E,65,[[[r_ba]],[T]]],[11,r_jb,E,E,65,[[[r_ba]],[r_ja]]],[11,r_kb,r_ub,E,34,[[[T]],[T]]],[11,r_lb,E,E,34,[[[r_ba]],[U]]],[11,r_eb,E,E,34,[[[U]],[r_ja]]],[11,r_fb,E,E,34,[[[r_ba]],[T]]],[11,r_gb,E,E,34,[[[r_ba]],[r_hb]]],[11,r_ib,E,E,34,[[[r_ba]],[T]]],[11,r_jb,E,E,34,[[[r_ba]],[r_ja]]],[11,r_kb,r_vb,E,35,[[[T]],[T]]],[11,r_lb,E,E,35,[[[r_ba]],[U]]],[11,r_eb,E,E,35,[[[U]],[r_ja]]],[11,r_fb,E,E,35,[[[r_ba]],[T]]],[11,r_gb,E,E,35,[[[r_ba]],[r_hb]]],[11,r_ib,E,E,35,[[[r_ba]],[T]]],[11,r_jb,E,E,35,[[[r_ba]],[r_ja]]],[11,r_kb,r_wb,E,36,[[[T]],[T]]],[11,r_lb,E,E,36,[[[r_ba]],[U]]],[11,r_eb,E,E,36,[[[U]],[r_ja]]],[11,r_fb,E,E,36,[[[r_ba]],[T]]],[11,r_gb,E,E,36,[[[r_ba]],[r_hb]]],[11,r_ib,E,E,36,[[[r_ba]],[T]]],[11,r_jb,E,E,36,[[[r_ba]],[r_ja]]],[11,r_kb,E,E,37,[[[T]],[T]]],[11,r_lb,E,E,37,[[[r_ba]],[U]]],[11,r_eb,E,E,37,[[[U]],[r_ja]]],[11,r_fb,E,E,37,[[[r_ba]],[T]]],[11,r_gb,E,E,37,[[[r_ba]],[r_hb]]],[11,r_ib,E,E,37,[[[r_ba]],[T]]],[11,r_jb,E,E,37,[[[r_ba]],[r_ja]]],[11,r_kb,E,E,38,[[[T]],[T]]],[11,r_lb,E,E,38,[[[r_ba]],[U]]],[11,r_eb,E,E,38,[[[U]],[r_ja]]],[11,r_fb,E,E,38,[[[r_ba]],[T]]],[11,r_gb,E,E,38,[[[r_ba]],[r_hb]]],[11,r_ib,E,E,38,[[[r_ba]],[T]]],[11,r_jb,E,E,38,[[[r_ba]],[r_ja]]],[11,r_kb,E,E,39,[[[T]],[T]]],[11,r_lb,E,E,39,[[[r_ba]],[U]]],[11,r_eb,E,E,39,[[[U]],[r_ja]]],[11,r_fb,E,E,39,[[[r_ba]],[T]]],[11,r_gb,E,E,39,[[[r_ba]],[r_hb]]],[11,r_ib,E,E,39,[[[r_ba]],[T]]],[11,r_jb,E,E,39,[[[r_ba]],[r_ja]]],[11,r_kb,r_xb,E,40,[[[T]],[T]]],[11,r_lb,E,E,40,[[[r_ba]],[U]]],[11,r_eb,E,E,40,[[[U]],[r_ja]]],[11,r_fb,E,E,40,[[[r_ba]],[T]]],[11,r_gb,E,E,40,[[[r_ba]],[r_hb]]],[11,r_ib,E,E,40,[[[r_ba]],[T]]],[11,r_jb,E,E,40,[[[r_ba]],[r_ja]]],[11,r_kb,r_yb,E,41,[[[T]],[T]]],[11,r_lb,E,E,41,[[[r_ba]],[U]]],[11,r_eb,E,E,41,[[[U]],[r_ja]]],[11,r_fb,E,E,41,[[[r_ba]],[T]]],[11,r_gb,E,E,41,[[[r_ba]],[r_hb]]],[11,r_ib,E,E,41,[[[r_ba]],[T]]],[11,r_jb,E,E,41,[[[r_ba]],[r_ja]]],[11,r_kb,r_zb,E,42,[[[T]],[T]]],[11,r_lb,E,E,42,[[[r_ba]],[U]]],[11,r_eb,E,E,42,[[[U]],[r_ja]]],[11,r_fb,E,E,42,[[[r_ba]],[T]]],[11,r_gb,E,E,42,[[[r_ba]],[r_hb]]],[11,r_ib,E,E,42,[[[r_ba]],[T]]],[11,r_jb,E,E,42,[[[r_ba]],[r_ja]]],[11,r_kb,r_Ab,E,44,[[[T]],[T]]],[11,r_lb,E,E,44,[[[r_ba]],[U]]],[11,r_eb,E,E,44,[[[U]],[r_ja]]],[11,r_fb,E,E,44,[[[r_ba]],[T]]],[11,r_gb,E,E,44,[[[r_ba]],[r_hb]]],[11,r_ib,E,E,44,[[[r_ba]],[T]]],[11,r_jb,E,E,44,[[[r_ba]],[r_ja]]],[11,r_kb,E,E,45,[[[T]],[T]]],[11,r_lb,E,E,45,[[[r_ba]],[U]]],[11,r_eb,E,E,45,[[[U]],[r_ja]]],[11,r_fb,E,E,45,[[[r_ba]],[T]]],[11,r_gb,E,E,45,[[[r_ba]],[r_hb]]],[11,r_ib,E,E,45,[[[r_ba]],[T]]],[11,r_jb,E,E,45,[[[r_ba]],[r_ja]]],[11,r_kb,E,E,46,[[[T]],[T]]],[11,r_lb,E,E,46,[[[r_ba]],[U]]],[11,r_eb,E,E,46,[[[U]],[r_ja]]],[11,r_fb,E,E,46,[[[r_ba]],[T]]],[11,r_gb,E,E,46,[[[r_ba]],[r_hb]]],[11,r_ib,E,E,46,[[[r_ba]],[T]]],[11,r_jb,E,E,46,[[[r_ba]],[r_ja]]],[11,r_kb,E,E,47,[[[T]],[T]]],[11,r_lb,E,E,47,[[[r_ba]],[U]]],[11,r_eb,E,E,47,[[[U]],[r_ja]]],[11,r_fb,E,E,47,[[[r_ba]],[T]]],[11,r_gb,E,E,47,[[[r_ba]],[r_hb]]],[11,r_ib,E,E,47,[[[r_ba]],[T]]],[11,r_jb,E,E,47,[[[r_ba]],[r_ja]]],[11,r_kb,r_Bb,E,48,[[[T]],[T]]],[11,r_lb,E,E,48,[[[r_ba]],[U]]],[11,r_eb,E,E,48,[[[U]],[r_ja]]],[11,r_fb,E,E,48,[[[r_ba]],[T]]],[11,r_gb,E,E,48,[[[r_ba]],[r_hb]]],[11,r_ib,E,E,48,[[[r_ba]],[T]]],[11,r_jb,E,E,48,[[[r_ba]],[r_ja]]],[11,r_kb,r_Cb,E,49,[[[T]],[T]]],[11,r_lb,E,E,49,[[[r_ba]],[U]]],[11,r_eb,E,E,49,[[[U]],[r_ja]]],[11,r_fb,E,E,49,[[[r_ba]],[T]]],[11,r_gb,E,E,49,[[[r_ba]],[r_hb]]],[11,r_ib,E,E,49,[[[r_ba]],[T]]],[11,r_jb,E,E,49,[[[r_ba]],[r_ja]]],[11,r_kb,r_Db,E,50,[[[T]],[T]]],[11,r_lb,E,E,50,[[[r_ba]],[U]]],[11,r_eb,E,E,50,[[[U]],[r_ja]]],[11,r_fb,E,E,50,[[[r_ba]],[T]]],[11,r_gb,E,E,50,[[[r_ba]],[r_hb]]],[11,r_ib,E,E,50,[[[r_ba]],[T]]],[11,r_jb,E,E,50,[[[r_ba]],[r_ja]]],[11,r_kb,r_Eb,E,51,[[[T]],[T]]],[11,r_lb,E,E,51,[[[r_ba]],[U]]],[11,r_eb,E,E,51,[[[U]],[r_ja]]],[11,r_fb,E,E,51,[[[r_ba]],[T]]],[11,r_gb,E,E,51,[[[r_ba]],[r_hb]]],[11,r_ib,E,E,51,[[[r_ba]],[T]]],[11,r_jb,E,E,51,[[[r_ba]],[r_ja]]],[11,r_kb,r_Fb,E,52,[[[T]],[T]]],[11,r_lb,E,E,52,[[[r_ba]],[U]]],[11,r_eb,E,E,52,[[[U]],[r_ja]]],[11,r_fb,E,E,52,[[[r_ba]],[T]]],[11,r_gb,E,E,52,[[[r_ba]],[r_hb]]],[11,r_ib,E,E,52,[[[r_ba]],[T]]],[11,r_jb,E,E,52,[[[r_ba]],[r_ja]]],[11,r_kb,r_Gb,E,54,[[[T]],[T]]],[11,r_lb,E,E,54,[[[r_ba]],[U]]],[11,r_eb,E,E,54,[[[U]],[r_ja]]],[11,r_fb,E,E,54,[[[r_ba]],[T]]],[11,r_gb,E,E,54,[[[r_ba]],[r_hb]]],[11,r_ib,E,E,54,[[[r_ba]],[T]]],[11,r_jb,E,E,54,[[[r_ba]],[r_ja]]],[11,r_kb,E,E,53,[[[T]],[T]]],[11,r_lb,E,E,53,[[[r_ba]],[U]]],[11,r_eb,E,E,53,[[[U]],[r_ja]]],[11,r_fb,E,E,53,[[[r_ba]],[T]]],[11,r_gb,E,E,53,[[[r_ba]],[r_hb]]],[11,r_ib,E,E,53,[[[r_ba]],[T]]],[11,r_jb,E,E,53,[[[r_ba]],[r_ja]]],[11,r_kb,r_Hb,E,55,[[[T]],[T]]],[11,r_lb,E,E,55,[[[r_ba]],[U]]],[11,r_eb,E,E,55,[[[U]],[r_ja]]],[11,r_fb,E,E,55,[[[r_ba]],[T]]],[11,r_gb,E,E,55,[[[r_ba]],[r_hb]]],[11,r_ib,E,E,55,[[[r_ba]],[T]]],[11,r_jb,E,E,55,[[[r_ba]],[r_ja]]],[11,r_kb,r_Ib,E,56,[[[T]],[T]]],[11,r_lb,E,E,56,[[[r_ba]],[U]]],[11,r_eb,E,E,56,[[[U]],[r_ja]]],[11,r_fb,E,E,56,[[[r_ba]],[T]]],[11,r_gb,E,E,56,[[[r_ba]],[r_hb]]],[11,r_ib,E,E,56,[[[r_ba]],[T]]],[11,r_jb,E,E,56,[[[r_ba]],[r_ja]]],[11,r_kb,r_Jb,E,57,[[[T]],[T]]],[11,r_lb,E,E,57,[[[r_ba]],[U]]],[11,r_eb,E,E,57,[[[U]],[r_ja]]],[11,r_fb,E,E,57,[[[r_ba]],[T]]],[11,r_gb,E,E,57,[[[r_ba]],[r_hb]]],[11,r_ib,E,E,57,[[[r_ba]],[T]]],[11,r_jb,E,E,57,[[[r_ba]],[r_ja]]],[11,r_kb,r_Kb,E,58,[[[T]],[T]]],[11,r_lb,E,E,58,[[[r_ba]],[U]]],[11,r_eb,E,E,58,[[[U]],[r_ja]]],[11,r_fb,E,E,58,[[[r_ba]],[T]]],[11,r_gb,E,E,58,[[[r_ba]],[r_hb]]],[11,r_ib,E,E,58,[[[r_ba]],[T]]],[11,r_jb,E,E,58,[[[r_ba]],[r_ja]]],[11,r_Pb,r_fa,E,12,[[[r_ba],[r_Lb]],[r_ja,[r_la]]]],[11,r_Pb,E,E,11,[[[r_ba],[r_Lb]],[r_ja,[r_la]]]],[11,r_Pb,E,E,22,[[[r_ba],[r_Lb]],[r_ja,[r_la]]]],[11,r_Pb,E,E,20,[[[r_ba],[r_Lb]],[r_ja,[r_la]]]],[11,"cmp",E,E,12,[[[r_ba],[r_Mb]],[r_Nb]]],[11,"cmp",E,E,11,[[[r_ba],[r_qa]],[r_Nb]]],[11,"cmp",E,E,22,[[[r_ba],[r_ka]],[r_Nb]]],[11,r_Ob,E,E,12,[[["__d"]],[r_ja,[r_Mb]]]],[11,r_Ob,E,E,11,[[["__d"]],[r_ja,[r_qa]]]],[11,r_Ob,E,E,22,[[["__d"]],[r_ja,[r_ka]]]],[11,r_Pb,E,E,60,[[[r_ba],[r_Lb]],[r_ja,[r_la]]]],[11,r_Pb,E,E,22,[[[r_ba],[r_Lb]],[r_ja,[r_la]]]],[11,r_Pb,E,E,20,[[[r_ba],[r_Lb]],[r_ja,[r_la]]]],[11,r_Pb,E,E,11,[[[r_ba],[r_Lb]],[r_ja,[r_la]]]],[11,r_Pb,E,E,12,[[[r_ba],[r_Lb]],[r_ja,[r_la]]]],[11,"hash",E,E,12,N],[11,"hash",E,E,11,N],[11,r_Qb,E,E,11,[[],[r_qa]]],[11,r_Qb,E,E,22,[[],[r_ka]]],[11,r_Qb,E,E,64,[[],[r_3b]]],[11,r_Qb,E,E,12,[[],[r_Mb]]],[11,r_Qb,E,E,61,[[],[r_2b]]],[11,"from_iter",E,E,11,[[["i"]],[r_qa]]],[11,r_Rb,E,E,64,[[[r_ba],[T]],[r_ja,[r_la]]]],[11,r_Rb,E,E,65,[[[r_ba],[T]],[r_ja,[r_la]]]],[11,"eq",E,E,12,[[[r_ba],[r_Mb]],[r_Sb]]],[11,"eq",E,E,11,[[[r_ba],[r_qa]],[r_Sb]]],[11,"ne",E,E,11,[[[r_ba],[r_qa]],[r_Sb]]],[11,"eq",E,E,22,[[[r_ba],[r_ka]],[r_Sb]]],[11,r_Tb,E,r_Vb,61,[[[r_ba],[r_Ad],[r_qa]],[r_ja,[r_la]]]],[11,r_Ub,E,r_Wb,61,[[[r_ba],[r_qa]],[r_ja,[r_la]]]],[11,r_Tb,E,r_Vb,63,[[[r_ba],[r_Ad],[r_qa]],[r_ja,[r_la]]]],[11,r_Ub,E,r_Wb,63,[[[r_ba],[r_qa]],[r_ja,[r_la]]]],[11,"extend",E,E,11,N],[11,r_Xb,E,E,22,[[[r_ba],["__s"]],[r_ja]]],[11,r_Xb,E,E,12,[[[r_ba],["__s"]],[r_ja]]],[11,r_Xb,E,E,60,[[[r_ba],["__s"]],[r_ja]]],[11,r_Xb,E,E,11,[[[r_ba],["__s"]],[r_ja]]],[11,r_Yb,E,E,22,[[[r_ba],[r_ka]],[r_Zb,[r_Nb]]]],[11,r_Yb,E,E,12,[[[r_ba],[r_Mb]],[r_Zb,[r_Nb]]]],[11,r_Yb,E,E,11,[[[r_ba],[r_qa]],[r_Zb,[r_Nb]]]],[11,"lt",E,E,11,[[[r_ba],[r_qa]],[r_Sb]]],[11,"le",E,E,11,[[[r_ba],[r_qa]],[r_Sb]]],[11,"gt",E,E,11,[[[r_ba],[r_qa]],[r_Sb]]],[11,"ge",E,E,11,[[[r_ba],[r_qa]],[r_Sb]]],[11,"name",E,E,20,[[[r_ba]],[r_Zb,[r_Ad]]]],[11,r_4b,E,E,20,[[[r_ba]],[r_Zb,[r_tb]]]],[11,r_0b,E,E,20,[[[r_ba]],[r_Zb,[r_0b]]]],[11,r_1b,E,E,22,[[[r_ba]],[r_ka]]],[11,r_1b,E,E,60,[[[r_ba]],[r_Bd]]],[11,r_1b,E,E,63,[[[r_ba]],[r_Qd]]],[11,r_1b,E,E,11,[[[r_ba]],[r_qa]]],[11,r_1b,E,E,61,[[[r_ba]],[r_2b]]],[11,r_1b,E,E,64,[[[r_ba]],[r_3b]]],[11,r_1b,E,E,12,[[[r_ba]],[r_Mb]]],[11,r_Pb,r_sb,E,26,[[[r_ba],[r_Lb]],[r_ja,[r_la]]]],[11,"description",E,E,26,[[[r_ba]],[r_Ad]]],[11,r_4b,E,E,26,[[[r_ba]],[r_Zb,[r_la]]]],[11,r_Pb,E,E,27,[[[r_ba],[r_Lb]],[r_ja,[r_la]]]],[11,r_Pb,E,E,26,[[[r_ba],[r_Lb]],[r_ja,[r_la]]]],[11,r_kb,E,E,26,[[[r_la]],[r_la]]],[11,r_Pb,r_fa,E,62,[[[r_ba],[r_Lb]],[r_ja,[r_la]]]],[11,r_rb,E,E,62,[[[r_ba]],[r_tb]]],[11,"as_ref",E,E,62,[[[r_ba]],[r_tb]]],[11,r_Pb,E,E,62,[[[r_ba],[r_Lb]],[r_ja,[r_la]]]],[11,r_kb,E,E,62,[[["f"]],[r_la]]],[11,r_Qb,r_db,E,0,[[],[r_5b]]],[11,r_1b,E,E,0,[[[r_ba]],[r_5b]]],[11,r_7b,r_Ab,E,44,[[[r_ba],[r_Xa],[T],[r_Xa],[T],[T],[r_Xa]],[r_Sb]]],[11,r_6b,E,E,44,[[[r_ba]],[r_Sb]]],[11,r_7b,E,E,45,[[[r_ba],[r_Xa],[T],[r_Xa],[T],[T],[r_Xa]],[r_Sb]]],[11,r_6b,E,E,45,[[[r_ba]],[r_Sb]]],[11,r_7b,E,E,46,[[[r_ba],[r_Xa],[T],[r_Xa],[T],[T],[r_Xa]],[r_Sb]]],[11,r_6b,E,E,46,[[[r_ba]],[r_Sb]]],[11,r_7b,E,E,47,[[[r_ba],[r_Xa],[T],[r_Xa],[T],[T],[r_Xa]],[r_Sb]]],[11,r_6b,E,E,47,[[[r_ba]],[r_Sb]]],[11,r_Qb,r_wb,E,36,[[],["fletcherreeves"]]],[11,r_Qb,E,E,37,[[],["polakribiere"]]],[11,r_Qb,E,E,38,[[],["polakribiereplus"]]],[11,r_Qb,E,E,39,[[],["hestenesstiefel"]]],[11,r_ed,r_ub,r_Dc,34,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_8b,E,r_Ec,34,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_sa,E,r_Fc,34,N],[11,r_ta,E,r_Gc,34,N],[11,r_ua,E,r_Hc,34,N],[11,r_9b,E,r_Ic,34,N],[11,r_ac,E,r_Jc,34,N],[11,r_bc,E,r_Kc,34,N],[11,r_cc,E,r_Lc,34,N],[11,r_Ya,E,r_Mc,34,N],[11,r_dc,E,r_Nc,34,N],[11,r_ec,E,r_Oc,34,N],[11,r_va,E,r_Pc,34,N],[11,r_ja,E,r_Qc,34,[[[r_ba]],[r_ka]]],[11,r_fc,E,r_Rc,34,[[[r_ba],[r_Qa]]]],[11,r_gc,E,r_Sc,34,[[[r_ba]],[r_Qa]]],[11,r_hc,E,r_Tc,34,[[[r_ba]]]],[11,r_ic,E,r_Uc,34,[[[r_ba]],[r_Qa]]],[11,r_jc,E,r_Vc,34,[[[r_ba]],[r_Xa]]],[11,r_kc,E,r_Wc,34,[[[r_ba],[r_Xa]]]],[11,r_lc,E,r_Xc,34,[[[r_ba]],[r_Xa]]],[11,r_mc,E,r_Yc,34,[[[r_ba],[r_Xa]]]],[11,r_nc,E,r_Zc,34,[[[r_ba],[r_Xa]]]],[11,r_oc,E,r_0c,34,[[[r_ba]]]],[11,r_pc,E,r_1c,34,[[[r_ba],[r_Qa]]]],[11,r_qc,E,r_uc,34,[[[r_ba]],[r_Qa]]],[11,r_rc,E,r_2c,34,[[[r_ba]]]],[11,r_sc,E,r_3c,34,[[[r_ba],[r_Qa]]]],[11,r_tc,E,r_uc,34,[[[r_ba]],[r_Qa]]],[11,r_vc,E,r_4c,34,[[[r_ba]]]],[11,r_wc,E,r_5c,34,[[[r_ba],[r_Qa]]]],[11,r_xc,E,r_uc,34,[[[r_ba]],[r_Qa]]],[11,r_yc,E,r_6c,34,[[[r_ba],[r_dd,[r_7c]]]]],[11,r_zc,E,r_8c,34,[[[r_ba],[r_dd,[r_9c]]]]],[11,r_Ac,E,r_ad,34,[[[r_ba],[r_Mb]]]],[11,r_Bc,E,r_bd,34,[[[r_ba]],[r_Mb]]],[11,r_Cc,E,r_cd,34,[[[r_ba]]]],[11,r_ed,r_vb,r_Dc,35,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_8b,E,r_Ec,35,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_sa,E,r_Fc,35,N],[11,r_ta,E,r_Gc,35,N],[11,r_ua,E,r_Hc,35,N],[11,r_9b,E,r_Ic,35,N],[11,r_ac,E,r_Jc,35,N],[11,r_bc,E,r_Kc,35,N],[11,r_cc,E,r_Lc,35,N],[11,r_Ya,E,r_Mc,35,N],[11,r_dc,E,r_Nc,35,N],[11,r_ec,E,r_Oc,35,N],[11,r_va,E,r_Pc,35,N],[11,r_ja,E,r_Qc,35,[[[r_ba]],[r_ka]]],[11,r_fc,E,r_Rc,35,[[[r_ba],[r_Qa]]]],[11,r_gc,E,r_Sc,35,[[[r_ba]],[r_Qa]]],[11,r_hc,E,r_Tc,35,[[[r_ba]]]],[11,r_ic,E,r_Uc,35,[[[r_ba]],[r_Qa]]],[11,r_jc,E,r_Vc,35,[[[r_ba]],[r_Xa]]],[11,r_kc,E,r_Wc,35,[[[r_ba],[r_Xa]]]],[11,r_lc,E,r_Xc,35,[[[r_ba]],[r_Xa]]],[11,r_mc,E,r_Yc,35,[[[r_ba],[r_Xa]]]],[11,r_nc,E,r_Zc,35,[[[r_ba],[r_Xa]]]],[11,r_oc,E,r_0c,35,[[[r_ba]]]],[11,r_pc,E,r_1c,35,[[[r_ba],[r_Qa]]]],[11,r_qc,E,r_uc,35,[[[r_ba]],[r_Qa]]],[11,r_rc,E,r_2c,35,[[[r_ba]]]],[11,r_sc,E,r_3c,35,[[[r_ba],[r_Qa]]]],[11,r_tc,E,r_uc,35,[[[r_ba]],[r_Qa]]],[11,r_vc,E,r_4c,35,[[[r_ba]]]],[11,r_wc,E,r_5c,35,[[[r_ba],[r_Qa]]]],[11,r_xc,E,r_uc,35,[[[r_ba]],[r_Qa]]],[11,r_yc,E,r_6c,35,[[[r_ba],[r_dd,[r_7c]]]]],[11,r_zc,E,r_8c,35,[[[r_ba],[r_dd,[r_9c]]]]],[11,r_Ac,E,r_ad,35,[[[r_ba],[r_Mb]]]],[11,r_Bc,E,r_bd,35,[[[r_ba]],[r_Mb]]],[11,r_Cc,E,r_cd,35,[[[r_ba]]]],[11,r_ed,r_xb,r_Dc,40,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_8b,E,r_Ec,40,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_sa,E,r_Fc,40,N],[11,r_ta,E,r_Gc,40,N],[11,r_ua,E,r_Hc,40,N],[11,r_9b,E,r_Ic,40,N],[11,r_ac,E,r_Jc,40,N],[11,r_bc,E,r_Kc,40,N],[11,r_cc,E,r_Lc,40,N],[11,r_Ya,E,r_Mc,40,N],[11,r_dc,E,r_Nc,40,N],[11,r_ec,E,r_Oc,40,N],[11,r_va,E,r_Pc,40,N],[11,r_ja,E,r_Qc,40,[[[r_ba]],[r_ka]]],[11,r_fc,E,r_Rc,40,[[[r_ba],[r_Qa]]]],[11,r_gc,E,r_Sc,40,[[[r_ba]],[r_Qa]]],[11,r_hc,E,r_Tc,40,[[[r_ba]]]],[11,r_ic,E,r_Uc,40,[[[r_ba]],[r_Qa]]],[11,r_jc,E,r_Vc,40,[[[r_ba]],[r_Xa]]],[11,r_kc,E,r_Wc,40,[[[r_ba],[r_Xa]]]],[11,r_lc,E,r_Xc,40,[[[r_ba]],[r_Xa]]],[11,r_mc,E,r_Yc,40,[[[r_ba],[r_Xa]]]],[11,r_nc,E,r_Zc,40,[[[r_ba],[r_Xa]]]],[11,r_oc,E,r_0c,40,[[[r_ba]]]],[11,r_pc,E,r_1c,40,[[[r_ba],[r_Qa]]]],[11,r_qc,E,r_uc,40,[[[r_ba]],[r_Qa]]],[11,r_rc,E,r_2c,40,[[[r_ba]]]],[11,r_sc,E,r_3c,40,[[[r_ba],[r_Qa]]]],[11,r_tc,E,r_uc,40,[[[r_ba]],[r_Qa]]],[11,r_vc,E,r_4c,40,[[[r_ba]]]],[11,r_wc,E,r_5c,40,[[[r_ba],[r_Qa]]]],[11,r_xc,E,r_uc,40,[[[r_ba]],[r_Qa]]],[11,r_yc,E,r_6c,40,[[[r_ba],[r_dd,[r_7c]]]]],[11,r_zc,E,r_8c,40,[[[r_ba],[r_dd,[r_9c]]]]],[11,r_Ac,E,r_ad,40,[[[r_ba],[r_Mb]]]],[11,r_Bc,E,r_bd,40,[[[r_ba]],[r_Mb]]],[11,r_Cc,E,r_cd,40,[[[r_ba]]]],[11,r_ed,r_yb,r_Dc,41,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_8b,E,r_Ec,41,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_sa,E,r_Fc,41,N],[11,r_ta,E,r_Gc,41,N],[11,r_ua,E,r_Hc,41,N],[11,r_9b,E,r_Ic,41,N],[11,r_ac,E,r_Jc,41,N],[11,r_bc,E,r_Kc,41,N],[11,r_cc,E,r_Lc,41,N],[11,r_Ya,E,r_Mc,41,N],[11,r_dc,E,r_Nc,41,N],[11,r_ec,E,r_Oc,41,N],[11,r_va,E,r_Pc,41,N],[11,r_ja,E,r_Qc,41,[[[r_ba]],[r_ka]]],[11,r_fc,E,r_Rc,41,[[[r_ba],[r_Qa]]]],[11,r_gc,E,r_Sc,41,[[[r_ba]],[r_Qa]]],[11,r_hc,E,r_Tc,41,[[[r_ba]]]],[11,r_ic,E,r_Uc,41,[[[r_ba]],[r_Qa]]],[11,r_jc,E,r_Vc,41,[[[r_ba]],[r_Xa]]],[11,r_kc,E,r_Wc,41,[[[r_ba],[r_Xa]]]],[11,r_lc,E,r_Xc,41,[[[r_ba]],[r_Xa]]],[11,r_mc,E,r_Yc,41,[[[r_ba],[r_Xa]]]],[11,r_nc,E,r_Zc,41,[[[r_ba],[r_Xa]]]],[11,r_oc,E,r_0c,41,[[[r_ba]]]],[11,r_pc,E,r_1c,41,[[[r_ba],[r_Qa]]]],[11,r_qc,E,r_uc,41,[[[r_ba]],[r_Qa]]],[11,r_rc,E,r_2c,41,[[[r_ba]]]],[11,r_sc,E,r_3c,41,[[[r_ba],[r_Qa]]]],[11,r_tc,E,r_uc,41,[[[r_ba]],[r_Qa]]],[11,r_vc,E,r_4c,41,[[[r_ba]]]],[11,r_wc,E,r_5c,41,[[[r_ba],[r_Qa]]]],[11,r_xc,E,r_uc,41,[[[r_ba]],[r_Qa]]],[11,r_yc,E,r_6c,41,[[[r_ba],[r_dd,[r_7c]]]]],[11,r_zc,E,r_8c,41,[[[r_ba],[r_dd,[r_9c]]]]],[11,r_Ac,E,r_ad,41,[[[r_ba],[r_Mb]]]],[11,r_Bc,E,r_bd,41,[[[r_ba]],[r_Mb]]],[11,r_Cc,E,r_cd,41,[[[r_ba]]]],[11,r_ed,r_zb,r_Dc,42,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_8b,E,r_Ec,42,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_sa,E,r_Fc,42,N],[11,r_ta,E,r_Gc,42,N],[11,r_ua,E,r_Hc,42,N],[11,r_9b,E,r_Ic,42,N],[11,r_ac,E,r_Jc,42,N],[11,r_bc,E,r_Kc,42,N],[11,r_cc,E,r_Lc,42,N],[11,r_Ya,E,r_Mc,42,N],[11,r_dc,E,r_Nc,42,N],[11,r_ec,E,r_Oc,42,N],[11,r_va,E,r_Pc,42,N],[11,r_ja,E,r_Qc,42,[[[r_ba]],[r_ka]]],[11,r_fc,E,r_Rc,42,[[[r_ba],[r_Qa]]]],[11,r_gc,E,r_Sc,42,[[[r_ba]],[r_Qa]]],[11,r_hc,E,r_Tc,42,[[[r_ba]]]],[11,r_ic,E,r_Uc,42,[[[r_ba]],[r_Qa]]],[11,r_jc,E,r_Vc,42,[[[r_ba]],[r_Xa]]],[11,r_kc,E,r_Wc,42,[[[r_ba],[r_Xa]]]],[11,r_lc,E,r_Xc,42,[[[r_ba]],[r_Xa]]],[11,r_mc,E,r_Yc,42,[[[r_ba],[r_Xa]]]],[11,r_nc,E,r_Zc,42,[[[r_ba],[r_Xa]]]],[11,r_oc,E,r_0c,42,[[[r_ba]]]],[11,r_pc,E,r_1c,42,[[[r_ba],[r_Qa]]]],[11,r_qc,E,r_uc,42,[[[r_ba]],[r_Qa]]],[11,r_rc,E,r_2c,42,[[[r_ba]]]],[11,r_sc,E,r_3c,42,[[[r_ba],[r_Qa]]]],[11,r_tc,E,r_uc,42,[[[r_ba]],[r_Qa]]],[11,r_vc,E,r_4c,42,[[[r_ba]]]],[11,r_wc,E,r_5c,42,[[[r_ba],[r_Qa]]]],[11,r_xc,E,r_uc,42,[[[r_ba]],[r_Qa]]],[11,r_yc,E,r_6c,42,[[[r_ba],[r_dd,[r_7c]]]]],[11,r_zc,E,r_8c,42,[[[r_ba],[r_dd,[r_9c]]]]],[11,r_Ac,E,r_ad,42,[[[r_ba],[r_Mb]]]],[11,r_Bc,E,r_bd,42,[[[r_ba]],[r_Mb]]],[11,r_Cc,E,r_cd,42,[[[r_ba]]]],[11,r_ed,r_Bb,r_Dc,48,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_8b,E,r_Ec,48,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_sa,E,r_Fc,48,N],[11,r_ta,E,r_Gc,48,N],[11,r_ua,E,r_Hc,48,N],[11,r_9b,E,r_Ic,48,N],[11,r_ac,E,r_Jc,48,N],[11,r_bc,E,r_Kc,48,N],[11,r_cc,E,r_Lc,48,N],[11,r_Ya,E,r_Mc,48,N],[11,r_dc,E,r_Nc,48,N],[11,r_ec,E,r_Oc,48,N],[11,r_va,E,r_Pc,48,N],[11,r_ja,E,r_Qc,48,[[[r_ba]],[r_ka]]],[11,r_fc,E,r_Rc,48,[[[r_ba],[r_Qa]]]],[11,r_gc,E,r_Sc,48,[[[r_ba]],[r_Qa]]],[11,r_hc,E,r_Tc,48,[[[r_ba]]]],[11,r_ic,E,r_Uc,48,[[[r_ba]],[r_Qa]]],[11,r_jc,E,r_Vc,48,[[[r_ba]],[r_Xa]]],[11,r_kc,E,r_Wc,48,[[[r_ba],[r_Xa]]]],[11,r_lc,E,r_Xc,48,[[[r_ba]],[r_Xa]]],[11,r_mc,E,r_Yc,48,[[[r_ba],[r_Xa]]]],[11,r_nc,E,r_Zc,48,[[[r_ba],[r_Xa]]]],[11,r_oc,E,r_0c,48,[[[r_ba]]]],[11,r_pc,E,r_1c,48,[[[r_ba],[r_Qa]]]],[11,r_qc,E,r_uc,48,[[[r_ba]],[r_Qa]]],[11,r_rc,E,r_2c,48,[[[r_ba]]]],[11,r_sc,E,r_3c,48,[[[r_ba],[r_Qa]]]],[11,r_tc,E,r_uc,48,[[[r_ba]],[r_Qa]]],[11,r_vc,E,r_4c,48,[[[r_ba]]]],[11,r_wc,E,r_5c,48,[[[r_ba],[r_Qa]]]],[11,r_xc,E,r_uc,48,[[[r_ba]],[r_Qa]]],[11,r_yc,E,r_6c,48,[[[r_ba],[r_dd,[r_7c]]]]],[11,r_zc,E,r_8c,48,[[[r_ba],[r_dd,[r_9c]]]]],[11,r_Ac,E,r_ad,48,[[[r_ba],[r_Mb]]]],[11,r_Bc,E,r_bd,48,[[[r_ba]],[r_Mb]]],[11,r_Cc,E,r_cd,48,[[[r_ba]]]],[11,r_ed,r_Cb,r_Dc,49,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_8b,E,r_Ec,49,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_sa,E,r_Fc,49,N],[11,r_ta,E,r_Gc,49,N],[11,r_ua,E,r_Hc,49,N],[11,r_9b,E,r_Ic,49,N],[11,r_ac,E,r_Jc,49,N],[11,r_bc,E,r_Kc,49,N],[11,r_cc,E,r_Lc,49,N],[11,r_Ya,E,r_Mc,49,N],[11,r_dc,E,r_Nc,49,N],[11,r_ec,E,r_Oc,49,N],[11,r_va,E,r_Pc,49,N],[11,r_ja,E,r_Qc,49,[[[r_ba]],[r_ka]]],[11,r_fc,E,r_Rc,49,[[[r_ba],[r_Qa]]]],[11,r_gc,E,r_Sc,49,[[[r_ba]],[r_Qa]]],[11,r_hc,E,r_Tc,49,[[[r_ba]]]],[11,r_ic,E,r_Uc,49,[[[r_ba]],[r_Qa]]],[11,r_jc,E,r_Vc,49,[[[r_ba]],[r_Xa]]],[11,r_kc,E,r_Wc,49,[[[r_ba],[r_Xa]]]],[11,r_lc,E,r_Xc,49,[[[r_ba]],[r_Xa]]],[11,r_mc,E,r_Yc,49,[[[r_ba],[r_Xa]]]],[11,r_nc,E,r_Zc,49,[[[r_ba],[r_Xa]]]],[11,r_oc,E,r_0c,49,[[[r_ba]]]],[11,r_pc,E,r_1c,49,[[[r_ba],[r_Qa]]]],[11,r_qc,E,r_uc,49,[[[r_ba]],[r_Qa]]],[11,r_rc,E,r_2c,49,[[[r_ba]]]],[11,r_sc,E,r_3c,49,[[[r_ba],[r_Qa]]]],[11,r_tc,E,r_uc,49,[[[r_ba]],[r_Qa]]],[11,r_vc,E,r_4c,49,[[[r_ba]]]],[11,r_wc,E,r_5c,49,[[[r_ba],[r_Qa]]]],[11,r_xc,E,r_uc,49,[[[r_ba]],[r_Qa]]],[11,r_yc,E,r_6c,49,[[[r_ba],[r_dd,[r_7c]]]]],[11,r_zc,E,r_8c,49,[[[r_ba],[r_dd,[r_9c]]]]],[11,r_Ac,E,r_ad,49,[[[r_ba],[r_Mb]]]],[11,r_Bc,E,r_bd,49,[[[r_ba]],[r_Mb]]],[11,r_Cc,E,r_cd,49,[[[r_ba]]]],[11,r_ed,r_Db,r_Dc,50,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_8b,E,r_Ec,50,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_sa,E,r_Fc,50,N],[11,r_ta,E,r_Gc,50,N],[11,r_ua,E,r_Hc,50,N],[11,r_9b,E,r_Ic,50,N],[11,r_ac,E,r_Jc,50,N],[11,r_bc,E,r_Kc,50,N],[11,r_cc,E,r_Lc,50,N],[11,r_Ya,E,r_Mc,50,N],[11,r_dc,E,r_Nc,50,N],[11,r_ec,E,r_Oc,50,N],[11,r_va,E,r_Pc,50,N],[11,r_ja,E,r_Qc,50,[[[r_ba]],[r_ka]]],[11,r_fc,E,r_Rc,50,[[[r_ba],[r_Qa]]]],[11,r_gc,E,r_Sc,50,[[[r_ba]],[r_Qa]]],[11,r_hc,E,r_Tc,50,[[[r_ba]]]],[11,r_ic,E,r_Uc,50,[[[r_ba]],[r_Qa]]],[11,r_jc,E,r_Vc,50,[[[r_ba]],[r_Xa]]],[11,r_kc,E,r_Wc,50,[[[r_ba],[r_Xa]]]],[11,r_lc,E,r_Xc,50,[[[r_ba]],[r_Xa]]],[11,r_mc,E,r_Yc,50,[[[r_ba],[r_Xa]]]],[11,r_nc,E,r_Zc,50,[[[r_ba],[r_Xa]]]],[11,r_oc,E,r_0c,50,[[[r_ba]]]],[11,r_pc,E,r_1c,50,[[[r_ba],[r_Qa]]]],[11,r_qc,E,r_uc,50,[[[r_ba]],[r_Qa]]],[11,r_rc,E,r_2c,50,[[[r_ba]]]],[11,r_sc,E,r_3c,50,[[[r_ba],[r_Qa]]]],[11,r_tc,E,r_uc,50,[[[r_ba]],[r_Qa]]],[11,r_vc,E,r_4c,50,[[[r_ba]]]],[11,r_wc,E,r_5c,50,[[[r_ba],[r_Qa]]]],[11,r_xc,E,r_uc,50,[[[r_ba]],[r_Qa]]],[11,r_yc,E,r_6c,50,[[[r_ba],[r_dd,[r_7c]]]]],[11,r_zc,E,r_8c,50,[[[r_ba],[r_dd,[r_9c]]]]],[11,r_Ac,E,r_ad,50,[[[r_ba],[r_Mb]]]],[11,r_Bc,E,r_bd,50,[[[r_ba]],[r_Mb]]],[11,r_Cc,E,r_cd,50,[[[r_ba]]]],[11,r_ed,r_Eb,r_Dc,51,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_8b,E,r_Ec,51,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_sa,E,r_Fc,51,N],[11,r_ta,E,r_Gc,51,N],[11,r_ua,E,r_Hc,51,N],[11,r_9b,E,r_Ic,51,N],[11,r_ac,E,r_Jc,51,N],[11,r_bc,E,r_Kc,51,N],[11,r_cc,E,r_Lc,51,N],[11,r_Ya,E,r_Mc,51,N],[11,r_dc,E,r_Nc,51,N],[11,r_ec,E,r_Oc,51,N],[11,r_va,E,r_Pc,51,N],[11,r_ja,E,r_Qc,51,[[[r_ba]],[r_ka]]],[11,r_fc,E,r_Rc,51,[[[r_ba],[r_Qa]]]],[11,r_gc,E,r_Sc,51,[[[r_ba]],[r_Qa]]],[11,r_hc,E,r_Tc,51,[[[r_ba]]]],[11,r_ic,E,r_Uc,51,[[[r_ba]],[r_Qa]]],[11,r_jc,E,r_Vc,51,[[[r_ba]],[r_Xa]]],[11,r_kc,E,r_Wc,51,[[[r_ba],[r_Xa]]]],[11,r_lc,E,r_Xc,51,[[[r_ba]],[r_Xa]]],[11,r_mc,E,r_Yc,51,[[[r_ba],[r_Xa]]]],[11,r_nc,E,r_Zc,51,[[[r_ba],[r_Xa]]]],[11,r_oc,E,r_0c,51,[[[r_ba]]]],[11,r_pc,E,r_1c,51,[[[r_ba],[r_Qa]]]],[11,r_qc,E,r_uc,51,[[[r_ba]],[r_Qa]]],[11,r_rc,E,r_2c,51,[[[r_ba]]]],[11,r_sc,E,r_3c,51,[[[r_ba],[r_Qa]]]],[11,r_tc,E,r_uc,51,[[[r_ba]],[r_Qa]]],[11,r_vc,E,r_4c,51,[[[r_ba]]]],[11,r_wc,E,r_5c,51,[[[r_ba],[r_Qa]]]],[11,r_xc,E,r_uc,51,[[[r_ba]],[r_Qa]]],[11,r_yc,E,r_6c,51,[[[r_ba],[r_dd,[r_7c]]]]],[11,r_zc,E,r_8c,51,[[[r_ba],[r_dd,[r_9c]]]]],[11,r_Ac,E,r_ad,51,[[[r_ba],[r_Mb]]]],[11,r_Bc,E,r_bd,51,[[[r_ba]],[r_Mb]]],[11,r_Cc,E,r_cd,51,[[[r_ba]]]],[11,r_ed,r_Fb,r_Dc,52,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_8b,E,r_Ec,52,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_sa,E,r_Fc,52,N],[11,r_ta,E,r_Gc,52,N],[11,r_ua,E,r_Hc,52,N],[11,r_9b,E,r_Ic,52,N],[11,r_ac,E,r_Jc,52,N],[11,r_bc,E,r_Kc,52,N],[11,r_cc,E,r_Lc,52,N],[11,r_Ya,E,r_Mc,52,N],[11,r_dc,E,r_Nc,52,N],[11,r_ec,E,r_Oc,52,N],[11,r_va,E,r_Pc,52,N],[11,r_ja,E,r_Qc,52,[[[r_ba]],[r_ka]]],[11,r_fc,E,r_Rc,52,[[[r_ba],[r_Qa]]]],[11,r_gc,E,r_Sc,52,[[[r_ba]],[r_Qa]]],[11,r_hc,E,r_Tc,52,[[[r_ba]]]],[11,r_ic,E,r_Uc,52,[[[r_ba]],[r_Qa]]],[11,r_jc,E,r_Vc,52,[[[r_ba]],[r_Xa]]],[11,r_kc,E,r_Wc,52,[[[r_ba],[r_Xa]]]],[11,r_lc,E,r_Xc,52,[[[r_ba]],[r_Xa]]],[11,r_mc,E,r_Yc,52,[[[r_ba],[r_Xa]]]],[11,r_nc,E,r_Zc,52,[[[r_ba],[r_Xa]]]],[11,r_oc,E,r_0c,52,[[[r_ba]]]],[11,r_pc,E,r_1c,52,[[[r_ba],[r_Qa]]]],[11,r_qc,E,r_uc,52,[[[r_ba]],[r_Qa]]],[11,r_rc,E,r_2c,52,[[[r_ba]]]],[11,r_sc,E,r_3c,52,[[[r_ba],[r_Qa]]]],[11,r_tc,E,r_uc,52,[[[r_ba]],[r_Qa]]],[11,r_vc,E,r_4c,52,[[[r_ba]]]],[11,r_wc,E,r_5c,52,[[[r_ba],[r_Qa]]]],[11,r_xc,E,r_uc,52,[[[r_ba]],[r_Qa]]],[11,r_yc,E,r_6c,52,[[[r_ba],[r_dd,[r_7c]]]]],[11,r_zc,E,r_8c,52,[[[r_ba],[r_dd,[r_9c]]]]],[11,r_Ac,E,r_ad,52,[[[r_ba],[r_Mb]]]],[11,r_Bc,E,r_bd,52,[[[r_ba]],[r_Mb]]],[11,r_Cc,E,r_cd,52,[[[r_ba]]]],[11,r_ed,r_Gb,r_Dc,54,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_8b,E,r_Ec,54,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_sa,E,r_Fc,54,N],[11,r_ta,E,r_Gc,54,N],[11,r_ua,E,r_Hc,54,N],[11,r_9b,E,r_Ic,54,N],[11,r_ac,E,r_Jc,54,N],[11,r_bc,E,r_Kc,54,N],[11,r_cc,E,r_Lc,54,N],[11,r_Ya,E,r_Mc,54,N],[11,r_dc,E,r_Nc,54,N],[11,r_ec,E,r_Oc,54,N],[11,r_va,E,r_Pc,54,N],[11,r_ja,E,r_Qc,54,[[[r_ba]],[r_ka]]],[11,r_fc,E,r_Rc,54,[[[r_ba],[r_Qa]]]],[11,r_gc,E,r_Sc,54,[[[r_ba]],[r_Qa]]],[11,r_hc,E,r_Tc,54,[[[r_ba]]]],[11,r_ic,E,r_Uc,54,[[[r_ba]],[r_Qa]]],[11,r_jc,E,r_Vc,54,[[[r_ba]],[r_Xa]]],[11,r_kc,E,r_Wc,54,[[[r_ba],[r_Xa]]]],[11,r_lc,E,r_Xc,54,[[[r_ba]],[r_Xa]]],[11,r_mc,E,r_Yc,54,[[[r_ba],[r_Xa]]]],[11,r_nc,E,r_Zc,54,[[[r_ba],[r_Xa]]]],[11,r_oc,E,r_0c,54,[[[r_ba]]]],[11,r_pc,E,r_1c,54,[[[r_ba],[r_Qa]]]],[11,r_qc,E,r_uc,54,[[[r_ba]],[r_Qa]]],[11,r_rc,E,r_2c,54,[[[r_ba]]]],[11,r_sc,E,r_3c,54,[[[r_ba],[r_Qa]]]],[11,r_tc,E,r_uc,54,[[[r_ba]],[r_Qa]]],[11,r_vc,E,r_4c,54,[[[r_ba]]]],[11,r_wc,E,r_5c,54,[[[r_ba],[r_Qa]]]],[11,r_xc,E,r_uc,54,[[[r_ba]],[r_Qa]]],[11,r_yc,E,r_6c,54,[[[r_ba],[r_dd,[r_7c]]]]],[11,r_zc,E,r_8c,54,[[[r_ba],[r_dd,[r_9c]]]]],[11,r_Ac,E,r_ad,54,[[[r_ba],[r_Mb]]]],[11,r_Bc,E,r_bd,54,[[[r_ba]],[r_Mb]]],[11,r_Cc,E,r_cd,54,[[[r_ba]]]],[11,r_ed,r_Hb,r_Dc,55,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_8b,E,r_Ec,55,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_sa,E,r_Fc,55,N],[11,r_ta,E,r_Gc,55,N],[11,r_ua,E,r_Hc,55,N],[11,r_9b,E,r_Ic,55,N],[11,r_ac,E,r_Jc,55,N],[11,r_bc,E,r_Kc,55,N],[11,r_cc,E,r_Lc,55,N],[11,r_Ya,E,r_Mc,55,N],[11,r_dc,E,r_Nc,55,N],[11,r_ec,E,r_Oc,55,N],[11,r_va,E,r_Pc,55,N],[11,r_ja,E,r_Qc,55,[[[r_ba]],[r_ka]]],[11,r_fc,E,r_Rc,55,[[[r_ba],[r_Qa]]]],[11,r_gc,E,r_Sc,55,[[[r_ba]],[r_Qa]]],[11,r_hc,E,r_Tc,55,[[[r_ba]]]],[11,r_ic,E,r_Uc,55,[[[r_ba]],[r_Qa]]],[11,r_jc,E,r_Vc,55,[[[r_ba]],[r_Xa]]],[11,r_kc,E,r_Wc,55,[[[r_ba],[r_Xa]]]],[11,r_lc,E,r_Xc,55,[[[r_ba]],[r_Xa]]],[11,r_mc,E,r_Yc,55,[[[r_ba],[r_Xa]]]],[11,r_nc,E,r_Zc,55,[[[r_ba],[r_Xa]]]],[11,r_oc,E,r_0c,55,[[[r_ba]]]],[11,r_pc,E,r_1c,55,[[[r_ba],[r_Qa]]]],[11,r_qc,E,r_uc,55,[[[r_ba]],[r_Qa]]],[11,r_rc,E,r_2c,55,[[[r_ba]]]],[11,r_sc,E,r_3c,55,[[[r_ba],[r_Qa]]]],[11,r_tc,E,r_uc,55,[[[r_ba]],[r_Qa]]],[11,r_vc,E,r_4c,55,[[[r_ba]]]],[11,r_wc,E,r_5c,55,[[[r_ba],[r_Qa]]]],[11,r_xc,E,r_uc,55,[[[r_ba]],[r_Qa]]],[11,r_yc,E,r_6c,55,[[[r_ba],[r_dd,[r_7c]]]]],[11,r_zc,E,r_8c,55,[[[r_ba],[r_dd,[r_9c]]]]],[11,r_Ac,E,r_ad,55,[[[r_ba],[r_Mb]]]],[11,r_Bc,E,r_bd,55,[[[r_ba]],[r_Mb]]],[11,r_Cc,E,r_cd,55,[[[r_ba]]]],[11,r_ed,r_Ib,r_Dc,56,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_8b,E,r_Ec,56,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_sa,E,r_Fc,56,N],[11,r_ta,E,r_Gc,56,N],[11,r_ua,E,r_Hc,56,N],[11,r_9b,E,r_Ic,56,N],[11,r_ac,E,r_Jc,56,N],[11,r_bc,E,r_Kc,56,N],[11,r_cc,E,r_Lc,56,N],[11,r_Ya,E,r_Mc,56,N],[11,r_dc,E,r_Nc,56,N],[11,r_ec,E,r_Oc,56,N],[11,r_va,E,r_Pc,56,N],[11,r_ja,E,r_Qc,56,[[[r_ba]],[r_ka]]],[11,r_fc,E,r_Rc,56,[[[r_ba],[r_Qa]]]],[11,r_gc,E,r_Sc,56,[[[r_ba]],[r_Qa]]],[11,r_hc,E,r_Tc,56,[[[r_ba]]]],[11,r_ic,E,r_Uc,56,[[[r_ba]],[r_Qa]]],[11,r_jc,E,r_Vc,56,[[[r_ba]],[r_Xa]]],[11,r_kc,E,r_Wc,56,[[[r_ba],[r_Xa]]]],[11,r_lc,E,r_Xc,56,[[[r_ba]],[r_Xa]]],[11,r_mc,E,r_Yc,56,[[[r_ba],[r_Xa]]]],[11,r_nc,E,r_Zc,56,[[[r_ba],[r_Xa]]]],[11,r_oc,E,r_0c,56,[[[r_ba]]]],[11,r_pc,E,r_1c,56,[[[r_ba],[r_Qa]]]],[11,r_qc,E,r_uc,56,[[[r_ba]],[r_Qa]]],[11,r_rc,E,r_2c,56,[[[r_ba]]]],[11,r_sc,E,r_3c,56,[[[r_ba],[r_Qa]]]],[11,r_tc,E,r_uc,56,[[[r_ba]],[r_Qa]]],[11,r_vc,E,r_4c,56,[[[r_ba]]]],[11,r_wc,E,r_5c,56,[[[r_ba],[r_Qa]]]],[11,r_xc,E,r_uc,56,[[[r_ba]],[r_Qa]]],[11,r_yc,E,r_6c,56,[[[r_ba],[r_dd,[r_7c]]]]],[11,r_zc,E,r_8c,56,[[[r_ba],[r_dd,[r_9c]]]]],[11,r_Ac,E,r_ad,56,[[[r_ba],[r_Mb]]]],[11,r_Bc,E,r_bd,56,[[[r_ba]],[r_Mb]]],[11,r_Cc,E,r_cd,56,[[[r_ba]]]],[11,r_ed,r_Jb,r_Dc,57,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_8b,E,r_Ec,57,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_sa,E,r_Fc,57,N],[11,r_ta,E,r_Gc,57,N],[11,r_ua,E,r_Hc,57,N],[11,r_9b,E,r_Ic,57,N],[11,r_ac,E,r_Jc,57,N],[11,r_bc,E,r_Kc,57,N],[11,r_cc,E,r_Lc,57,N],[11,r_Ya,E,r_Mc,57,N],[11,r_dc,E,r_Nc,57,N],[11,r_ec,E,r_Oc,57,N],[11,r_va,E,r_Pc,57,N],[11,r_ja,E,r_Qc,57,[[[r_ba]],[r_ka]]],[11,r_fc,E,r_Rc,57,[[[r_ba],[r_Qa]]]],[11,r_gc,E,r_Sc,57,[[[r_ba]],[r_Qa]]],[11,r_hc,E,r_Tc,57,[[[r_ba]]]],[11,r_ic,E,r_Uc,57,[[[r_ba]],[r_Qa]]],[11,r_jc,E,r_Vc,57,[[[r_ba]],[r_Xa]]],[11,r_kc,E,r_Wc,57,[[[r_ba],[r_Xa]]]],[11,r_lc,E,r_Xc,57,[[[r_ba]],[r_Xa]]],[11,r_mc,E,r_Yc,57,[[[r_ba],[r_Xa]]]],[11,r_nc,E,r_Zc,57,[[[r_ba],[r_Xa]]]],[11,r_oc,E,r_0c,57,[[[r_ba]]]],[11,r_pc,E,r_1c,57,[[[r_ba],[r_Qa]]]],[11,r_qc,E,r_uc,57,[[[r_ba]],[r_Qa]]],[11,r_rc,E,r_2c,57,[[[r_ba]]]],[11,r_sc,E,r_3c,57,[[[r_ba],[r_Qa]]]],[11,r_tc,E,r_uc,57,[[[r_ba]],[r_Qa]]],[11,r_vc,E,r_4c,57,[[[r_ba]]]],[11,r_wc,E,r_5c,57,[[[r_ba],[r_Qa]]]],[11,r_xc,E,r_uc,57,[[[r_ba]],[r_Qa]]],[11,r_yc,E,r_6c,57,[[[r_ba],[r_dd,[r_7c]]]]],[11,r_zc,E,r_8c,57,[[[r_ba],[r_dd,[r_9c]]]]],[11,r_Ac,E,r_ad,57,[[[r_ba],[r_Mb]]]],[11,r_Bc,E,r_bd,57,[[[r_ba]],[r_Mb]]],[11,r_Cc,E,r_cd,57,[[[r_ba]]]],[11,r_ed,r_Kb,r_Dc,58,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_8b,E,r_Ec,58,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_sa,E,r_Fc,58,N],[11,r_ta,E,r_Gc,58,N],[11,r_ua,E,r_Hc,58,N],[11,r_9b,E,r_Ic,58,N],[11,r_ac,E,r_Jc,58,N],[11,r_bc,E,r_Kc,58,N],[11,r_cc,E,r_Lc,58,N],[11,r_Ya,E,r_Mc,58,N],[11,r_dc,E,r_Nc,58,N],[11,r_ec,E,r_Oc,58,N],[11,r_va,E,r_Pc,58,N],[11,r_ja,E,r_Qc,58,[[[r_ba]],[r_ka]]],[11,r_fc,E,r_Rc,58,[[[r_ba],[r_Qa]]]],[11,r_gc,E,r_Sc,58,[[[r_ba]],[r_Qa]]],[11,r_hc,E,r_Tc,58,[[[r_ba]]]],[11,r_ic,E,r_Uc,58,[[[r_ba]],[r_Qa]]],[11,r_jc,E,r_Vc,58,[[[r_ba]],[r_Xa]]],[11,r_kc,E,r_Wc,58,[[[r_ba],[r_Xa]]]],[11,r_lc,E,r_Xc,58,[[[r_ba]],[r_Xa]]],[11,r_mc,E,r_Yc,58,[[[r_ba],[r_Xa]]]],[11,r_nc,E,r_Zc,58,[[[r_ba],[r_Xa]]]],[11,r_oc,E,r_0c,58,[[[r_ba]]]],[11,r_pc,E,r_1c,58,[[[r_ba],[r_Qa]]]],[11,r_qc,E,r_uc,58,[[[r_ba]],[r_Qa]]],[11,r_rc,E,r_2c,58,[[[r_ba]]]],[11,r_sc,E,r_3c,58,[[[r_ba],[r_Qa]]]],[11,r_tc,E,r_uc,58,[[[r_ba]],[r_Qa]]],[11,r_vc,E,r_4c,58,[[[r_ba]]]],[11,r_wc,E,r_5c,58,[[[r_ba],[r_Qa]]]],[11,r_xc,E,r_uc,58,[[[r_ba]],[r_Qa]]],[11,r_yc,E,r_6c,58,[[[r_ba],[r_dd,[r_7c]]]]],[11,r_zc,E,r_8c,58,[[[r_ba],[r_dd,[r_9c]]]]],[11,r_Ac,E,r_ad,58,[[[r_ba],[r_Mb]]]],[11,r_Bc,E,r_bd,58,[[[r_ba]],[r_Mb]]],[11,r_Cc,E,r_cd,58,[[[r_ba]]]],[11,r_hd,r_ub,E,34,[[[r_ba]],[r_ja,[r_la]]]],[11,r_fd,E,r_id,34,[[[r_ba]],[r_ja,[r_gd,r_la]]]],[11,r_hd,r_vb,E,35,[[[r_ba]],[r_ja,[r_la]]]],[11,r_fd,E,r_id,35,[[[r_ba]],[r_ja,[r_gd,r_la]]]],[11,r_fd,r_xb,r_id,40,[[[r_ba]],[r_ja,[r_gd,r_la]]]],[11,r_fd,r_yb,E,41,[[[r_ba]],[r_ja,[r_gd,r_la]]]],[11,r_fd,r_zb,E,42,[[[r_ba]],[r_ja,[r_gd,r_la]]]],[11,r_hd,r_Bb,E,48,[[[r_ba]],[r_ja,[r_la]]]],[11,r_fd,E,E,48,[[[r_ba]],[r_ja,[r_gd,r_la]]]],[11,r_hd,r_Cb,E,49,[[[r_ba]],[r_ja,[r_la]]]],[11,r_fd,E,E,49,[[[r_ba]],[r_ja,[r_gd,r_la]]]],[11,r_fd,r_Db,E,50,[[[r_ba]],[r_ja,[r_gd,r_la]]]],[11,r_fd,r_Eb,E,51,[[[r_ba]],[r_ja,[r_gd,r_la]]]],[11,r_hd,r_Fb,E,52,[[[r_ba]],[r_ja,[r_la]]]],[11,r_fd,E,E,52,[[[r_ba]],[r_ja,[r_gd,r_la]]]],[11,r_fd,r_Gb,r_id,54,[[[r_ba]],[r_ja,[r_gd,r_la]]]],[11,r_hd,r_Hb,E,55,[[[r_ba]],[r_ja,[r_la]]]],[11,r_fd,E,E,55,[[[r_ba]],[r_ja,[r_gd,r_la]]]],[11,r_hd,r_Ib,E,56,[[[r_ba]],[r_ja,[r_la]]]],[11,r_fd,E,E,56,[[[r_ba]],[r_ja,[r_gd,r_la]]]],[11,r_hd,r_Jb,E,57,[[[r_ba]],[r_ja,[r_la]]]],[11,r_fd,E,E,57,[[[r_ba]],[r_ja,[r_gd,r_la]]]],[11,r_hd,r_Kb,E,58,[[[r_ba]],[r_ja,[r_la]]]],[11,r_fd,E,E,58,[[[r_ba]],[r_ja,[r_gd,r_la]]]],[11,r_jd,r_zb,r_rd,42,[[[r_ba],[T]]]],[11,r_kd,E,r_sd,42,[[[r_ba],[T]]]],[11,r_ld,E,r_vd,42,[[[r_ba],[r_Xa]],[r_ja,[r_la]]]],[11,r_md,E,r_td,42,[[[r_ba],[r_Xa]]]],[11,r_nd,E,r_ud,42,[[[r_ba],[T]]]],[11,r_od,E,r_qd,42,[[[r_ba]],[r_ja,[r_la]]]],[11,r_pd,E,r_qd,42,[[[r_ba]],[r_ja,[r_la]]]],[11,r_jd,r_Bb,r_rd,48,[[[r_ba],[T]]]],[11,r_kd,E,r_sd,48,[[[r_ba],[T]]]],[11,r_md,E,r_td,48,[[[r_ba],[r_Xa]]]],[11,r_nd,E,r_ud,48,[[[r_ba],[T]]]],[11,r_od,E,r_qd,48,[[[r_ba]],[r_ja,[r_la]]]],[11,r_pd,E,r_qd,48,[[[r_ba]],[r_ja,[r_la]]]],[11,r_ld,E,r_vd,48,[[[r_ba],[r_Xa]],[r_ja,[r_la]]]],[11,r_jd,r_Cb,r_rd,49,[[[r_ba],[T]]]],[11,r_kd,E,r_sd,49,[[[r_ba],[T]]]],[11,r_md,E,r_td,49,[[[r_ba],[r_Xa]]]],[11,r_nd,E,r_ud,49,[[[r_ba],[T]]]],[11,r_od,E,r_qd,49,[[[r_ba]],[r_ja,[r_la]]]],[11,r_pd,E,r_qd,49,[[[r_ba]],[r_ja,[r_la]]]],[11,r_ld,E,r_vd,49,[[[r_ba],[r_Xa]],[r_ja,[r_la]]]],[11,r_9a,r_Hb,E,55,[[[r_ba],[r_Xa]]]],[11,r_wd,E,E,55,[[[r_ba],[T]]]],[11,r_xd,E,E,55,[[[r_ba],["h"]]]],[11,r_9a,r_Ib,E,56,[[[r_ba],[r_Xa]]]],[11,r_wd,E,E,56,[[[r_ba],[T]]]],[11,r_xd,E,E,56,[[[r_ba],["h"]]]],[11,r_9a,r_Jb,E,57,[[[r_ba],[r_Xa]]]],[11,r_wd,E,E,57,[[[r_ba],[T]]]],[11,r_xd,E,E,57,[[[r_ba],["h"]]]],[11,r_yd,r_wb,E,36,[[[r_ba],[T],[T],[T]],[r_Xa]]],[11,r_yd,E,E,37,[[[r_ba],[T],[T],[T]],[r_Xa]]],[11,r_yd,E,E,38,[[[r_ba],[T],[T],[T]],[r_Xa]]],[11,r_yd,E,E,39,[[[r_ba],[T],[T],[T]],[r_Xa]]],[11,r_Sa,r_db,"Create a new empty `PerturbationVector`",0,[[],[r_5b]]],[11,"add",E,"Add an index `x_idx` and the corresponding function…",0,[[[r_ba],[r_Da],["vec",[r_Da]]],[r_5b]]],[11,r_Sa,r_fa,r_Ra,59,[[[T],[r_Xa]],[r_gd]]],[11,r_zd,E,"Returns the parameter vector",59,[[[r_ba]],[T]]],[11,"cost",E,"Returns the cost function value",59,[[[r_ba]],[r_Xa]]],[11,"add_kv",E,"Adds an `ArgminKV`",59,[[[r_ba],[r_qa]],[r_gd]]],[11,"get_kv",E,"Returns an `ArgminKV`",59,[[[r_ba]],[r_Zb,[r_qa]]]],[11,r_Sa,E,r_Ra,11,[[],[r_qa]]],[11,r_Rd,E,"Push a key-value pair to the `kv` vector.",11,[[[r_ba],[r_Ad],[T]],[r_qa]]],[11,"merge",E,"Merge another `kv` into `self.kv`",11,[[[r_ba],[r_qa]],[r_qa]]],[11,r_Sa,E,r_Ra,60,[[[r_Pa],[T]],[r_Bd]]],[11,"kv_for_logs",E,"Return the KV for the initial logging",60,[[[r_ba]],[r_qa]]],[11,"kv_for_iter",E,"Return the KV for logging of the iterations",60,[[[r_ba]],[r_qa]]],[11,"reset",E,"Reset `self` to its initial state.",60,N],[11,r_sa,E,"Apply the operator to `param`",60,[[[r_ba],[T]],[r_ja,[r_la]]]],[11,r_ta,E,"Compute the gradient at `param`",60,[[[r_ba],[T]],[r_ja,[r_la]]]],[11,r_ua,E,"Compute the hessian at `param`",60,[[[r_ba],[T]],[r_ja,[r_la]]]],[11,r_va,E,"Modify a `param` with the `modify` method of `operator`.",60,[[[r_ba],[T],[r_Xa]],[r_ja,[r_la]]]],[11,r_cc,E,"Set the current parameter vector",60,[[[r_ba],[T]],[r_Bd]]],[11,r_9b,E,"Return the current parameter vector",60,[[[r_ba]],[T]]],[11,r_ec,E,"Set the new best parameter vector",60,[[[r_ba],[T]],[r_Bd]]],[11,"best_param",E,"Return the current best parameter vector",60,[[[r_ba]],[T]]],[11,r_kc,E,"Set the current cost function value",60,[[[r_ba],[r_Xa]],[r_Bd]]],[11,r_jc,E,"Return the current cost function value",60,[[[r_ba]],[r_Xa]]],[11,r_mc,E,"Set the cost function value of the current best parameter…",60,[[[r_ba],[r_Xa]],[r_Bd]]],[11,r_lc,E,"Return the cost function value of the current best…",60,[[[r_ba]],[r_Xa]]],[11,r_Ya,E,"Set the current gradient",60,[[[r_ba],[T]],[r_Bd]]],[11,r_ac,E,"Return the current gradient",60,[[[r_ba]],[T]]],[11,r_dc,E,"Set the current hessian",60,[[[r_ba],["h"]],[r_Bd]]],[11,r_bc,E,"Return the current hessian",60,[[[r_ba]],["h"]]],[11,r_nc,E,"Set the target cost function value",60,[[[r_ba],[r_Xa]],[r_Bd]]],[11,"target_cost",E,"Return the target cost function value",60,[[[r_ba]],[r_Xa]]],[11,r_hc,E,"Increment the number of iterations.",60,[[[r_ba]],[r_Bd]]],[11,r_ic,E,"Return the current number of iterations",60,[[[r_ba]],[r_Qa]]],[11,r_oc,E,r_Cd,60,[[[r_ba]],[r_Bd]]],[11,r_pc,E,r_Dd,60,[[[r_ba],[r_Qa]],[r_Bd]]],[11,r_qc,E,r_Ed,60,[[[r_ba]],[r_Qa]]],[11,r_rc,E,r_Fd,60,[[[r_ba]],[r_Bd]]],[11,r_sc,E,r_Gd,60,[[[r_ba],[r_Qa]],[r_Bd]]],[11,r_tc,E,r_na,60,[[[r_ba]],[r_Qa]]],[11,r_vc,E,r_Hd,60,[[[r_ba]],[r_Bd]]],[11,r_wc,E,r_Id,60,[[[r_ba],[r_Qa]],[r_Bd]]],[11,r_xc,E,r_na,60,[[[r_ba]],[r_Qa]]],[11,r_fc,E,"Set the maximum number of iterations.",60,[[[r_ba],[r_Qa]],[r_Bd]]],[11,r_gc,E,"Return the maximum number of iterations",60,[[[r_ba]],[r_Qa]]],[11,r_Ac,E,"Set the `TerminationReason`",60,[[[r_ba],[r_Mb]],[r_Bd]]],[11,r_Jd,E,"Return the `TerminationReason`",60,[[[r_ba]],[r_Mb]]],[11,"termination_reason_text",E,"Return the textual representation of the `TerminationReason`",60,[[[r_ba]],[r_Ad]]],[11,r_Kd,E,"Return whether the algorithm has terminated or not",60,[[[r_ba]],[r_Sb]]],[11,r_ja,E,"Return the result.",60,[[[r_ba]],[r_ka]]],[11,"set_total_time",E,"Set the total time needed by the solver",60,[[[r_ba],[r_Ld]],[r_Bd]]],[11,"total_time",E,"Return the total time",60,[[[r_ba]],[r_Ld]]],[11,r_yc,E,"Add a logger to the list of loggers",60,[[[r_ba],[r_dd,[r_7c]]],[r_Bd]]],[11,r_zc,E,"Add a writer to the list of writers",60,[[[r_ba],[r_dd,[r_9c]]],[r_Bd]]],[11,r_Ub,E,"Log a `kv`",60,[[[r_ba],[r_qa]],[r_ja,[r_la]]]],[11,r_Tb,E,"Log a message and a `kv`",60,[[[r_ba],[r_Ad],[r_qa]],[r_ja,[r_la]]]],[11,r_Rb,E,"Write (TODO)",60,[[[r_ba],[T]],[r_ja,[r_la]]]],[11,r_Kd,E,"Returns `true` if a solver terminated and `false` otherwise",12,[[[r_ba]],[r_Sb]]],[11,r_Fa,E,"Returns a texual representation of what happened",12,[[[r_ba]],[r_Ad]]],[11,r_Sa,r_qb,E,18,[[["l"],["e"],["p"]],[r_Ba]]],[11,r_Sa,r_fa,r_Ra,61,[[],[r_2b]]],[11,r_Rd,E,"Push another `ArgminLog` to the `logger` field",61,[[[r_ba],[r_dd,[r_7c]]],[r_2b]]],[11,"from_boxed_compat",E,"Creates an `Error` from `Box<std::error::Error>`.",62,[[[r_6a,[r_la]]],[r_la]]],[11,r_rb,E,"Return a reference to the underlying failure that this…",62,[[[r_ba]],[r_tb]]],[11,"name",E,"Returns the name of the underlying fail.",62,[[[r_ba]],[r_Zb,[r_Ad]]]],[11,r_4b,E,"Returns a reference to the underlying cause of this…",62,[[[r_ba]],[r_tb]]],[11,r_0b,E,"Gets a reference to the `Backtrace` for this `Error`.",62,[[[r_ba]],[r_0b]]],[11,r_Md,E,"Provides context for this `Error`.",62,[[[r_ba],["d"]],[r_Md]]],[11,r_Nd,E,"Wraps `Error` in a compatibility type.",62,[[[r_ba]],[r_Nd,[r_la]]]],[11,"downcast",E,r_Pd,62,[[[r_ba]],[r_ja,[r_la]]]],[11,"find_root_cause",E,"Returns the \"root cause\" of this error - the last value in…",62,[[[r_ba]],[r_tb]]],[11,"iter_causes",E,"Returns a iterator over the causes of this error with the…",62,[[[r_ba]],[r_Od]]],[11,"iter_chain",E,"Returns a iterator over all fails up the chain from the…",62,[[[r_ba]],[r_Od]]],[11,"downcast_ref",E,r_Pd,62,[[[r_ba]],[r_Zb]]],[11,"downcast_mut",E,r_Pd,62,[[[r_ba]],[r_Zb]]],[11,"root_cause",E,"Deprecated alias to `find_root_cause`.",62,[[[r_ba]],[r_tb]]],[11,r_Od,E,"Deprecated alias to `iter_causes`.",62,[[[r_ba]],[r_Od]]],[11,r_Sa,E,r_Ra,22,[[[T],[r_Xa],[r_Qa],[r_Mb]],[r_ka]]],[11,"term",E,"Log to the terminal in a blocking way",63,[[],[r_dd,[r_Qd]]]],[11,"term_noblock",E,"Log to the terminal in a non-blocking way (in case of…",63,[[],[r_dd,[r_Qd]]]],[11,"file",E,"Log JSON to a file in a blocking way",63,[[[r_Ad]],[r_ja,[r_dd,r_la]]]],[11,"file_noblock",E,"Log JSON to a file in a non-blocking way (in case of…",63,[[[r_Ad]],[r_ja,[r_dd,r_la]]]],[11,r_Sa,E,E,64,[[],[r_3b]]],[11,r_Rd,E,E,64,[[[r_ba],[r_dd,[r_9c]]],[r_3b]]],[11,r_Sa,E,E,65,[[],[r_dd,["writetofile"]]]]],"p":[[3,r_Sd],[8,r_Td],[8,r_Ud],[8,r_Vd],[8,r_Wd],[8,r_Xd],[8,r_Yd],[8,r_Zd],[8,r_0d],[8,r_1d],[8,r_2d],[3,r_3d],[4,r_4d],[8,r_5d],[8,r_6d],[8,r_7d],[8,r_8d],[8,r_9d],[3,r_ae],[8,r_be],[4,r_ce],[8,r_de],[3,r_ee],[8,r_fe],[8,r_ge],[8,r_he],[4,r_Ka],[4,r_ie],[8,r_je],[8,r_ke],[8,r_le],[8,r_me],[8,r_ne],[8,r_oe],[3,r_pe],[3,r_qe],[3,r_re],[3,r_se],[3,r_te],[3,r_ue],[3,r_ve],[3,r_we],[3,r_xe],[8,r_ye],[3,r_ze],[3,r_Ae],[3,r_Be],[3,r_Ce],[3,r_De],[3,r_Ee],[3,r_Fe],[3,r_Ge],[3,"BFGS"],[4,r_He],[3,r_Ie],[3,r_Je],[3,r_Ke],[3,r_Le],[3,r_Me],[3,r_Ne],[3,r_Oe],[3,r_Pe],[3,r_Ka],[3,r_Qe],[3,r_Re],[3,r_Se]]};
initSearch(searchIndex);addSearchOptions(searchIndex);