var N=null,E="",T="t",U="u",searchIndex={};
var R=["argmin","Calculation of the Jacobian J(x) of a vector function `fs`…","Calculation of the product of the Jacobian J(x) of a…","Calculation of the product of the Hessian H(x) of a…","argmin::prelude","return current gradient","set current gradient","set current parameter vector","result","argminresult","Get current cost function value","Return the gradient evaluation count","Hessian","argminkv","gradient","Set the initial step length","Set the gradient at the starting point","(Pointwise) Multiply a `T` with `self`","Add a `T` scaled by an `U` to `self`","decomposition","arraybase","Return zero(s)","Add a `T` to `self`","Dot/scalar product of `T` and `self`","Subtract a `T` scaled by an `U` from `self`","argmin::prelude::ArgminError","Compute the l2-norm (`U`) of `self`","Subtract a `T` from `self`","(Pointwise) Divide a `T` by `self`","argmin::solver::conjugategradient","Constructor","argmin::solver","set_cur_grad","argmin::solver::linesearch","set current gradient value","set_alpha_min_max","set alpha limits","argmin::solver::newton","set_gamma","set gamma","argmin::solver::trustregion","set_epsilon","set_radius","Rastrigin test function","Ackley test function","argmin::prelude::finitediff","try_from","borrow_mut","try_into","to_owned","clone_into","type_id","borrow","typeid","argmin::prelude::modcholesky","to_string","argmin::prelude::file","argmin::prelude::ctrlc","string","as_fail","argmin::solver::conjugategradient::cg","argmin::solver::conjugategradient::nonlinear_cg","argmin::solver::conjugategradient::beta","argmin::solver::gradientdescent::steepestdescent","argmin::solver::landweber","argmin::solver::linesearch::backtracking","argmin::solver::linesearch::condition","argmin::solver::linesearch::hagerzhang","argmin::solver::linesearch::morethuente","argmin::solver::newton::newton_cg","argmin::solver::newton::newton_method","argmin::solver::quasinewton::bfgs","argmin::solver::simulatedannealing","argmin::solver::trustregion::cauchypoint","argmin::solver::trustregion::dogleg","argmin::solver::trustregion::steihaug","argmin::solver::trustregion::trustregion_method","backtrace","terminationreason","writetofile","ordering","writermode","checkpointmode","writetofileserializer","argmincheckpoint","default","argminlogger","nooperator","argminwriter","minimalnooperator","formatter","deserialize","argminbase","log_info","log_iter","Log general info","This should be used to log iteration data only (because…","partial_cmp","option","serialize","perturbationvector","requires_cur_grad","fletcherreeves","polakribiere","polakribiereplus","hestenesstiefel","conjugategradient","armijocondition","wolfecondition","strongwolfecondition","goldsteincondition","satempfunc","cur_param","cur_hessian","set_cur_param","set_cur_hessian","set_best_param","set_max_iters","max_iters","increment_iter","set_cur_cost","best_cost","set_best_cost","set_target_cost","increment_cost_func_count","increase_cost_func_count","cost_func_count","increment_grad_func_count","increase_grad_func_count","grad_func_count","Returns the current value of the counter for the…","increment_hessian_func_count","increase_hessian_func_count","hessian_func_count","add_logger","add_writer","set_termination_reason","terminate","base_reset","set_checkpoint_dir","Set checkpoint directory","set_checkpoint_name","Set checkpoint name","set_checkpoint_mode","Set checkpoint mode","Run the optimization algorithm","run_fast","Run the essential parts of the optimization algorithm (no…","Applies the cost function or operator to a parameter…","Computes the gradient at parameter `param`. Returns an…","hessian","Computes the Hessian at parameter `param`. Returns an…","Returns the current parameter vector.","cur_grad","Returns the most recently stored gradient.","Returns the most recently stored Hessian.","Sets the current parameter to `param`.","Sets the current gradient to `grad`.","Sets the current Hessian to `hessian`.","Sets the best parameter vector to `param`.","Modify the parameter vector by calling the `modify` method…","Returns the result of the optimization.","Sets the maximum number of iterations to `iters`.","Returns the maximum number of iterations.","Increments the iteration counter.","cur_iter","Returns the current number of iterations.","cur_cost","Returns the most recently stored cost function value.","Sets the current cost function value to `cost`","Returns the best cost function value obtained so far.","Sets the best cost function value.","Sets the target cost function value to `cost`. The…","Increments the counter for the computations of the cost…","Increases the counter for the computations of the cost…","Increments the counter for the computations of the…","Increases the counter for the computations of the gradient…","Increments the counter for the computations of the Hessian…","Increases the counter for the computations of the Hessian…","Attaches a logger which implements `ArgminLog` to the…","argminlog","Attaches a writer which implements `ArgminWrite` to the…","argminwrite","Sets the `TerminationReason`","Checks whether any of the conditions to terminate is true…","Resets the `base` field to it's initial conditions. This…","next_iter","argminiterdata","Perform one iteration of SA algorithm","set_search_direction","set_initial_parameter","set_initial_alpha","set_initial_cost","set_initial_gradient","calc_initial_cost","calc_initial_gradient","Calculate initial cost function value","Set search direction","Set initial parameter","Set initial cost function value","Set initial gradient","Set initial alpha value","set_hessian","set_grad","terminated","Increment the cost function evaluation count","Increaese the cost function evaluation count by a given…","Return the cost function evaluation count","Increment the gradient evaluation count","Increase the gradient evaluation count by a given value","Increment the hessian evaluation count","Increase the hessian evaluation count by a given value","termination_reason","argminsloglogger","Attempts to downcast this `Error` to a particular `Fail`…","FiniteDiff","PerturbationVector","ArgminSolver","ArgminIter","ArgminLog","ArgminWrite","ArgminLineSearch","ArgminTrustRegion","ArgminNLCGBetaUpdate","ArgminMul","ArgminScaledAdd","TerminationReason","ModCholeskySE90","Decomposition","ModCholeskySE99","ModCholeskyGMW81","GershgorinCircles","ArgminZero","ArgminAdd","ArgminWeightedDot","ArgminResult","ArgminDot","WriteToFileSerializer","ArgminScaledSub","CheckpointMode","ArgminEye","ArgminTranspose","SignalType","ArgminError","ArgminNorm","ArgminSub","ArgminDiv","ArgminInv","WriterMode","ConjugateGradient","NonlinearConjugateGradient","FletcherReeves","PolakRibiere","PolakRibierePlus","HestenesStiefel","SteepestDescent","Landweber","BacktrackingLineSearch","LineSearchCondition","ArmijoCondition","WolfeCondition","StrongWolfeCondition","GoldsteinCondition","HagerZhangLineSearch","MoreThuenteLineSearch","SATempFunc","SimulatedAnnealing","CauchyPoint","TrustRegion","ArgminIterData","NoOperator","ArgminWriter","WriteToFile","MinimalNoOperator","ArgminBase","ArgminLogger","ArgminCheckpoint","ArgminSlogLogger"];

searchIndex[R[0]]={"doc":"A pure Rust optimization framework","i":[[0,"prelude",R[0],"Definition of all relevant traits and types # Re-export of…",N,N],[0,"macros",R[4],"Macros # Macros",N,N],[0,"finitediff",E,"Finite Differentiation",N,N],[6,"PerturbationVectors",R[45],"A collection of `PerturbationVector`s",N,N],[8,R[215],E,E,N,N],[16,"Jacobian",E,E,0,N],[16,R[12],E,E,0,N],[16,"OperatorOutput",E,E,0,N],[10,"forward_diff",E,"Forward difference calculated as",0,[[["self"],["fn"]],["self"]]],[10,"central_diff",E,"Central difference calculated as",0,[[["self"],["fn"]],["self"]]],[10,"forward_jacobian",E,R[1],0,N],[10,"central_jacobian",E,R[1],0,N],[10,"forward_jacobian_vec_prod",E,R[2],0,[[["self"],["fn"],["self"]],["self"]]],[10,"central_jacobian_vec_prod",E,R[2],0,[[["self"],["fn"],["self"]],["self"]]],[10,"forward_jacobian_pert",E,E,0,N],[10,"central_jacobian_pert",E,E,0,N],[10,"forward_hessian",E,"Calculation of the Hessian using forward differences",0,N],[10,"central_hessian",E,"Calculation of the Hessian using central differences",0,N],[10,"forward_hessian_vec_prod",E,R[3],0,[[["self"],["fn"],["self"]],["self"]]],[10,"central_hessian_vec_prod",E,R[3],0,[[["self"],["fn"],["self"]],["self"]]],[10,"forward_hessian_nograd",E,"Calculation of the Hessian using forward differences…",0,N],[10,"forward_hessian_nograd_sparse",E,"Calculation of a sparse Hessian using forward differences…",0,N],[3,R[216],E,"Perturbation Vector for the accelerated computation of the…",N,N],[12,"x_idx",E,"x indices",1,N],[12,"r_idx",E,"correspoding function indices",1,N],[8,R[217],R[4],"Defines the interface to a solver. Usually, there is no…",N,N],[11,"from_checkpoint",E,"Load solver from checkpoint",2,[[["p"]],[R[8],["error"]]]],[10,"apply",E,"apply cost function or operator to a parameter vector",2,N],[10,R[14],E,"compute the gradient for a parameter vector",2,N],[10,R[150],E,"compute the hessian for a parameter vector",2,N],[10,"modify",E,"modify the parameter vector",2,N],[10,R[112],E,"return current parameter vector",2,N],[10,R[153],E,R[5],2,N],[10,R[113],E,R[5],2,N],[10,R[114],E,R[7],2,N],[10,R[32],E,R[6],2,N],[10,R[115],E,R[6],2,N],[10,R[116],E,R[7],2,N],[10,"run",E,"Execute the optimization algorithm.",2,[[["self"]],[R[8],[R[9],"error"]]]],[10,R[146],E,"Execute the optimization algorithm without Ctrl-C…",2,[[["self"]],[R[8],[R[9],"error"]]]],[10,R[8],E,"Returns the best solution found during optimization.",2,[[["self"]],[R[9]]]],[10,R[136],E,"Set termination reason (doesn't terminate yet! -- this is…",2,N],[10,R[137],E,"Evaluate all stopping criterions and return the…",2,[[["self"]],[R[78]]]],[10,R[117],E,"Set max number of iterations.",2,N],[10,R[118],E,"Get max number of iterations.",2,[[["self"]],["u64"]]],[10,R[165],E,"Get current iteration number.",2,[[["self"]],["u64"]]],[10,R[119],E,"Increment the iteration number by one",2,N],[10,R[167],E,R[10],2,[[["self"]],["f64"]]],[10,R[120],E,R[10],2,N],[10,R[121],E,"Get best cost function value",2,[[["self"]],["f64"]]],[10,R[122],E,"set best cost value",2,N],[10,R[123],E,"Set the target cost function value which is used as a…",2,N],[10,R[134],E,"Add a logger to the array of loggers",2,N],[10,R[135],E,"Add a writer to the array of writers",2,N],[10,R[138],E,"Reset the base of the algorithm to its initial state",2,N],[10,R[124],E,R[205],2,N],[10,R[125],E,R[206],2,N],[10,R[126],E,R[207],2,[[["self"]],["u64"]]],[10,R[127],E,R[208],2,N],[10,R[128],E,R[209],2,N],[10,R[129],E,R[11],2,[[["self"]],["u64"]]],[10,R[131],E,R[210],2,N],[10,R[132],E,R[211],2,N],[10,R[133],E,R[11],2,[[["self"]],["u64"]]],[10,R[139],E,R[140],2,N],[10,R[141],E,R[142],2,N],[10,R[143],E,R[144],2,N],[8,R[218],E,"Main part of every solver: `next_iter` computes one…",N,N],[16,"Param",E,"Parameter vectors",3,N],[16,"Output",E,"Output of the operator",3,N],[16,R[12],E,R[12],3,N],[10,R[186],E,"Computes one iteration of the algorithm.",3,[[["self"]],[R[8],[R[187],"error"]]]],[11,"init",E,"Initializes the algorithm",3,[[["self"]],[R[8],["error"]]]],[8,R[219],E,"Defince the interface every logger needs to expose",N,N],[10,R[93],E,"Logs general information (a message `msg` and/or key-value…",4,[[["self"],["str"],[R[13]]],[R[8],["error"]]]],[10,R[94],E,"Logs information from iterations. Only accepts key-value…",4,[[["self"],[R[13]]],[R[8],["error"]]]],[8,R[220],E,"Every writer (which is something that writes parameter…",N,N],[16,"Param",E,E,5,N],[10,"write",E,"Writes the parameter vector somewhere",5,N],[3,R[269],E,"The datastructure which is returned by the `next_iter`…",N,N],[8,"ArgminOp",E,"This trait needs to be implemented for every operator/cost…",N,N],[16,"Param",E,"Type of the parameter vector",6,N],[16,"Output",E,"Output of the operator. Most solvers expect `f64`.",6,N],[16,R[12],E,"Type of Hessian",6,N],[11,"apply",E,"Applies the operator/cost function to parameters",6,N],[11,R[14],E,"Computes the gradient at the given parameters",6,N],[11,R[150],E,"Computes the hessian at the given parameters",6,N],[11,"modify",E,"Modifies a parameter vector. Comes with a variable that…",6,N],[8,R[221],E,"Defines a common interface to line search methods.…",N,N],[10,R[190],E,"Set the initial parameter (starting point)",7,N],[10,R[189],E,"Set the search direction",7,N],[10,R[191],E,R[15],7,[[["self"],["f64"]],[R[8],["error"]]]],[10,R[192],E,"Set the cost function value at the starting point as…",7,N],[10,R[193],E,"Set the gradient at the starting point as opposed to…",7,N],[10,R[194],E,"calculate the initial cost function value using an…",7,[[["self"]],[R[8],["error"]]]],[10,R[195],E,"calculate the initial gradient using an operator as…",7,[[["self"]],[R[8],["error"]]]],[8,R[222],E,"Defines a common interface to methods which calculate…",N,N],[10,R[42],E,R[15],8,N],[10,R[203],E,R[16],8,N],[10,R[202],E,R[16],8,N],[8,R[223],E,"Every method for the update of beta needs to implement…",N,N],[10,"update",E,"Update beta Parameter 1: \\nabla f_k Parameter 2: \\nabla…",9,[[["self"],[T],[T],[T]],["f64"]]],[8,R[224],E,R[17],N,N],[10,"mul",E,R[17],10,[[["self"],[T]],[U]]],[3,R[270],E,E,N,N],[8,R[225],E,R[18],N,N],[10,"scaled_add",E,R[18],11,[[["self"],[U],[T]],["v"]]],[4,R[226],E,"Indicates why the optimization algorithm stopped",N,N],[13,"NotTerminated",E,"In case it has not terminated yet",12,N],[13,"MaxItersReached",E,"Maximum number of iterations reached",12,N],[13,"TargetCostReached",E,"Target cost function value reached",12,N],[13,"TargetPrecisionReached",E,"Target precision reached",12,N],[13,"AcceptedStallIterExceeded",E,"Acceped stall iter exceeded",12,N],[13,"BestStallIterExceeded",E,"Best stall iter exceeded",12,N],[13,"LineSearchConditionMet",E,"Condition for Line search met",12,N],[13,"Aborted",E,"Aborted",12,N],[3,R[271],E,E,N,N],[0,"modcholesky",E,"Modified Cholesky decompositions Modified Cholesky…",N,N],[8,R[227],R[54],"Schnabel & Eskow algorithm (1990)",N,N],[11,"mod_cholesky_se90",E,"Computes the modified Cholesky decomposition with the SE90…",13,[[["self"]],[R[19]]]],[3,R[228],E,E,N,N],[12,"l",E,E,14,N],[12,"e",E,E,14,N],[12,"p",E,E,14,N],[8,R[229],E,"Schnabel & Eskow algorithm (1999)",N,N],[11,"mod_cholesky_se99",E,"Computes the modified Cholesky decomposition with the SE99…",15,[[["self"]],[R[19]]]],[8,R[230],E,"Gill, Murray and Wright (1981)",N,N],[11,"mod_cholesky_gmw81",E,"Computes the modified Cholesky decomposition with the…",16,[[["self"]],[R[19]]]],[8,R[231],E,"Gershgorin circles",N,N],[10,"gershgorin_circles",E,"Computes the Gershgorin Circles of a matrix",17,[[["self"]],["vec"]]],[0,"utils",E,"Utility functions",N,N],[5,"eigenvalues_2x2","argmin::prelude::modcholesky::utils","Computes the Eigenvalues of a 2x2 matrix",N,N],[5,"swap_columns",E,"Swaps columns `idx1` and `idx2` of matrix `mat`",N,N],[5,"swap_rows",E,"Swaps rows `idx1` and `idx2` of matrix `mat`",N,N],[5,"index_of_largest",E,"Returns the index of the largest element in a 1D array",N,[[[R[20]]],["usize"]]],[5,"index_of_largest_abs",E,"Returns the index of the element with the largest absolute…",N,[[[R[20]]],["usize"]]],[5,"index_to_permutation_mat",E,"Returns the permutation matrix for a vector of permuted…",N,N],[5,"diag_mat_from_arr",E,"Builds a diagonal matrix from a 1D slice",N,N],[5,"random_householder",E,"Returns a random Householder matrix of dimension `dim` and…",N,[[["usize"],["u8"]],[R[20],["ownedrepr","dim"]]]],[5,"random_diagonal",E,"Returns a random diagonal matrix with Eigenvalues…",N,N],[8,R[232],R[4],"Return param vector of all zeros (for now, this is a hack.…",N,N],[10,"zero_like",E,R[21],18,[[["self"]],["self"]]],[10,"zero",E,R[21],18,[[],["self"]]],[8,R[233],E,R[22],N,N],[10,"add",E,R[22],19,[[["self"],[T]],[U]]],[3,"ArgminKV",E,"A simple key-value storage",N,N],[12,"kv",E,"The actual key value storage",20,N],[8,R[234],E,"Dot/scalar product of `T` and `self` weighted by W (p^TWv)",N,N],[10,"weighted_dot",E,R[23],21,[[["self"],["v"],[T]],[U]]],[3,R[235],E,"Return struct for all solvers.",N,N],[12,"param",E,"Final parameter vector",22,N],[12,"cost",E,"Final cost value",22,N],[12,"iters",E,"Number of iterations",22,N],[12,R[204],E,"Indicated whether it terminated or not",22,N],[12,R[212],E,"Reason of termination",22,N],[8,R[236],E,R[23],N,N],[10,"dot",E,R[23],23,[[["self"],[T]],[U]]],[14,"check_param",E,"Release an `T` from an `Option<T>` if it is not `None`. If…",N,N],[0,"file",E,"Output parameter vectors to file",N,N],[4,R[237],R[56],E,N,N],[13,"Bincode",E,E,24,N],[13,"JSON",E,E,24,N],[3,R[272],E,E,N,N],[3,R[273],R[4],E,N,N],[3,R[274],E,"Storage for data needed by most solvers",N,N],[8,R[238],E,R[24],N,N],[10,"scaled_sub",E,R[24],25,[[["self"],[U],[T]],["v"]]],[4,R[239],E,E,N,N],[13,"Never",E,E,26,N],[13,"Every",E,E,26,N],[13,"Always",E,E,26,N],[5,"load_checkpoint",E,E,N,[[["p"]],[R[8],["error"]]]],[3,R[275],E,"Container for `ArgminLog`gers",N,N],[8,R[240],E,E,N,N],[10,"eye",E,E,27,[[["usize"]],["self"]]],[10,"eye_like",E,E,27,[[["self"]],["self"]]],[8,R[241],E,E,N,N],[10,T,E,E,28,[[["self"]],["self"]]],[14,"make_kv",E,"Creates an `ArgminKV` at compile time in order to avoid…",N,N],[5,"set_handler",R[57],"Register signal handler for Ctrl-C.",N,[[["f"]],[R[8],["error"]]]],[4,"Error",E,"Ctrl-C error.",N,N],[13,"NoSuchSignal",E,"Signal could not be found from the system.",29,N],[13,"MultipleHandlers",E,"Ctrl-C signal handler already registered.",29,N],[13,"System",E,"Unexpected system error.",29,N],[4,R[242],E,"A cross-platform way to represent Ctrl-C or program…",N,N],[13,"Ctrlc",E,"Ctrl-C",30,N],[13,"Termination",E,"Program termination Maps to `SIGTERM` on *nix,…",30,N],[13,"Other",E,"Other signal/event using platform-specific data",30,N],[6,"Signal",E,"Platform specific signal type",N,N],[3,R[276],R[4],E,N,N],[3,R[277],E,"A logger based on `slog`",N,N],[4,R[243],E,E,N,N],[13,"InvalidParameter",E,"Indicates and invalid parameter",31,N],[12,"text",R[25],E,31,N],[13,"NotImplemented",R[4],"Indicates that a function is not implemented",31,N],[12,"text",R[25],E,31,N],[13,"NotInitialized",R[4],"Indicates that a function is not initialized",31,N],[12,"text",R[25],E,31,N],[13,"ConditionViolated",R[4],"Indicates that a condition is violated",31,N],[12,"text",R[25],E,31,N],[13,"CheckpointNotFound",R[4],"Checkpoint was not found",31,N],[12,"text",R[25],E,31,N],[13,"ImpossibleError",R[4],"Indicates an impossible error",31,N],[12,"text",R[25],E,31,N],[8,R[244],R[4],R[26],N,N],[10,"norm",E,R[26],32,[[["self"]],[U]]],[8,R[245],E,R[27],N,N],[10,"sub",E,R[27],33,[[["self"],[T]],[U]]],[3,"Error",E,"The `Error` type, which can contain any failure.",N,N],[8,R[246],E,R[28],N,N],[10,"div",E,R[28],34,[[["self"],[T]],[U]]],[8,R[247],E,"Compute the inverse (`T`) of `self`",N,N],[10,"inv",E,E,35,[[["self"]],[R[8],["error"]]]],[4,R[248],E,E,N,N],[13,"Never",E,E,36,N],[13,"Always",E,E,36,N],[13,"Every",E,E,36,N],[13,"NewBest",E,E,36,N],[0,"solver",R[0],"Solvers",N,N],[0,R[106],R[31],"Conjugate Gradient methods",N,N],[0,"cg",R[29],"Conjugate gradient method # References:",N,N],[3,R[249],R[60],"The conjugate gradient method is a solver for systems of…",N,N],[11,"new",E,R[30],37,N],[11,"p",E,"Return the current search direction (This is needed by…",37,N],[11,"p_prev",E,"Return the previous search direction (This is needed by…",37,N],[11,"residual",E,"Return the current residual (This is needed by NewtonCG…",37,N],[0,"nonlinear_cg",R[29],"Nonlinear conjugate gradient method Important TODO: Find…",N,N],[3,R[250],R[61],"The nonlinear conjugate gradient is a generalization of…",N,N],[11,"new",E,"Constructor (Polak Ribiere Conjugate Gradient (PR-CG))",38,N],[11,"set_restart_iters",E,"Specifiy the number of iterations after which a restart…",38,[[["self"],["u64"]],["self"]]],[11,"set_restart_orthogonality",E,"Set the value for the orthogonality measure. Setting this…",38,[[["self"],["f64"]],["self"]]],[0,"beta",R[29],"Beta update methods for nonlinear CG # Beta update methods",N,N],[3,R[251],R[62],"Fletcher and Reeves (FR) method TODO: Reference",N,N],[3,R[252],E,"Polak and Ribiere (PR) method TODO: Reference",N,N],[3,R[253],E,"Polak and Ribiere Plus (PR+) method TODO: Reference",N,N],[3,R[254],E,"Hestenes and Stiefel (HS) method TODO: Reference",N,N],[11,"new",E,R[30],39,[[],["self"]]],[11,"new",E,R[30],40,[[],["self"]]],[11,"new",E,R[30],41,[[],["self"]]],[11,"new",E,R[30],42,[[],["self"]]],[0,"gradientdescent",R[31],"Gradient descent methods",N,N],[0,"steepestdescent","argmin::solver::gradientdescent","Steepest Descent method",N,N],[3,R[255],R[63],"Steepest descent iteratively takes steps in the direction…",N,N],[11,"new",E,R[30],43,N],[0,"landweber",R[31],"Landweber iteration",N,N],[3,R[256],R[64],"The Landweber iteration is a solver for ill-posed linear…",N,N],[11,"new",E,R[30],44,N],[0,"linesearch",R[31],"Line search methods",N,N],[0,"backtracking",R[33],"Backtracking line search algorithm * Backtracking line…",N,N],[3,R[257],R[65],"The Backtracking line search is a simple method to find a…",N,N],[11,"new",E,R[30],45,[[["o"],["l"]],["self"]]],[11,R[32],E,R[34],45,N],[11,"set_rho",E,"Set contraction factor rho",45,[[["self"],["f64"]],[R[8],["error"]]]],[0,"condition",R[33],"Acceptance conditions # References:",N,N],[3,R[259],R[66],"Armijo Condition",N,N],[3,R[260],E,"Wolfe Condition",N,N],[3,R[261],E,"Strong Wolfe conditions",N,N],[3,R[262],E,"Goldstein conditions",N,N],[8,R[258],E,"Needs to be implemented by everything that wants to be a…",N,N],[10,"eval",E,"Evaluate the condition",46,[[["self"],["f64"],[T],["f64"],[T],[T],["f64"]],["bool"]]],[10,R[101],E,"Indicates whether this condition requires the computation…",46,[[["self"]],["bool"]]],[11,"new",E,R[30],47,[[["f64"]],[R[8],["error"]]]],[11,"new",E,R[30],48,[[["f64"],["f64"]],[R[8],["error"]]]],[11,"new",E,R[30],49,[[["f64"],["f64"]],[R[8],["error"]]]],[11,"new",E,R[30],50,[[["f64"]],[R[8],["error"]]]],[0,"hagerzhang",R[33],"Hager-Zhang line search algorithm * Hager-Zhang line search",N,N],[3,R[263],R[67],"The Hager-Zhang line search is a method to find a step…",N,N],[11,"new",E,R[30],51,[[["o"]],["self"]]],[11,R[32],E,R[34],51,N],[11,"set_delta",E,"set delta",51,[[["self"],["f64"]],[R[8],["error"]]]],[11,"set_sigma",E,"set sigma",51,[[["self"],["f64"]],[R[8],["error"]]]],[11,R[41],E,"set epsilon",51,[[["self"],["f64"]],[R[8],["error"]]]],[11,"set_theta",E,"set theta",51,[[["self"],["f64"]],[R[8],["error"]]]],[11,R[38],E,R[39],51,[[["self"],["f64"]],[R[8],["error"]]]],[11,"set_eta",E,"set eta",51,[[["self"],["f64"]],[R[8],["error"]]]],[11,R[35],E,R[36],51,[[["self"],["f64"],["f64"]],[R[8],["error"]]]],[0,"morethuente",R[33],"More-Thuente line search algorithm * More-Thuente line…",N,N],[3,R[264],R[68],"The More-Thuente line search is a method to find a step…",N,N],[11,"new",E,R[30],52,[[["o"]],["self"]]],[11,R[32],E,R[34],52,N],[11,"set_c",E,"Set c1 and c2 where 0 < c1 < c2 < 1.",52,[[["self"],["f64"],["f64"]],[R[8],["error"]]]],[11,R[35],E,R[36],52,[[["self"],["f64"],["f64"]],[R[8],["error"]]]],[0,"newton",R[31],"Newton Methods",N,N],[0,"newton_cg",R[37],"Newton-CG method TODO: Stop when search direction is close…",N,N],[3,"NewtonCG",R[69],"The Newton-CG method (also called truncated Newton method)…",N,N],[11,"new",E,R[30],53,N],[11,"set_curvature_threshold",E,"Set curvature threshold",53,[[["self"],["f64"]],["self"]]],[0,"newton_method",R[37],"Newton's method # References:",N,N],[3,"Newton",R[70],"Newton's method iteratively finds the stationary points of…",N,N],[11,"new",E,R[30],54,N],[11,R[38],E,R[39],54,[[["self"],["f64"]],[R[8],["error"]]]],[0,"quasinewton",R[31],"Quasi-Newton methods",N,N],[0,"bfgs","argmin::solver::quasinewton","References:",N,N],[3,"BFGS",R[71],"BFGS method",N,N],[11,"new",E,R[30],55,N],[0,"simulatedannealing",R[31],E,N,N],[3,R[266],R[72],"Simulated Annealing",N,N],[4,R[265],E,"Temperature functions for Simulated Annealing.",N,N],[13,"TemperatureFast",E,"`t_i = t_init / i`",56,N],[13,"Boltzmann",E,"`t_i = t_init / ln(i)`",56,N],[13,"Exponential",E,"`t_i = t_init * x^i`",56,N],[11,"new",E,R[30],57,N],[11,"temp_func",E,"Set temperature function to one of the options in…",57,[[["self"],[R[111]]],["self"]]],[11,"stall_accepted",E,"The optimization stops after there has been no accepted…",57,[[["self"],["u64"]],["self"]]],[11,"stall_best",E,"The optimization stops after there has been no new best…",57,[[["self"],["u64"]],["self"]]],[11,"reannealing_fixed",E,"Start reannealing after `iter` iterations",57,[[["self"],["u64"]],["self"]]],[11,"reannealing_accepted",E,"Start reannealing after no accepted solution has been…",57,[[["self"],["u64"]],["self"]]],[11,"reannealing_best",E,"Start reannealing after no new best solution has been…",57,[[["self"],["u64"]],["self"]]],[0,"trustregion",R[31],"Argmin Trust region methods",N,N],[5,"reduction_ratio",R[40],"Computes reduction ratio",N,[[["f64"],["f64"],["f64"],["f64"]],["f64"]]],[0,"cauchypoint",E,"Cauchy Point # References:",N,N],[3,R[267],R[73],"The Cauchy point is the minimum of the quadratic…",N,N],[11,"new",E,R[30],58,[[["o"]],["self"]]],[0,"dogleg",R[40],"Dogleg method # References:",N,N],[3,"Dogleg",R[74],"The Dogleg method computes the intersection of the trust…",N,N],[11,"new",E,R[30],59,[[["o"]],["self"]]],[0,"steihaug",R[40],"Steihaug method # References:",N,N],[3,"Steihaug",R[75],"The Steihaug method is a conjugate gradients based…",N,N],[11,"new",E,R[30],60,[[["o"]],["self"]]],[11,R[41],E,"Set epsilon",60,[[["self"],["f64"]],[R[8],["error"]]]],[0,"trustregion_method",R[40],"Trust region solver # References:",N,N],[3,R[268],R[76],"The trust region method approximates the cost function…",N,N],[11,"new",E,R[30],61,N],[11,R[42],E,"set radius",61,[[["self"],["f64"]],["self"]]],[11,"set_max_radius",E,"Set maximum radius",61,[[["self"],["f64"]],["self"]]],[11,"set_eta",E,"Set eta",61,[[["self"],["f64"]],[R[8],["error"]]]],[0,"testfunctions",R[0],"Testfunctions # Testfunctions",N,N],[5,"mccorminck","argmin::testfunctions","McCorminck test function",N,N],[5,"himmelblau",E,"Himmelblau test function",N,N],[5,"sphere_derivative",E,"Derivative of sphere test function",N,N],[5,"schaffer_n2",E,"Schaffer test function No. 2",N,N],[5,"holder_table",E,"Holder table test function",N,N],[5,"rosenbrock_2d_hessian",E,"Hessian of 2D Rosenbrock function",N,N],[5,"rastrigin",E,R[43],N,N],[5,"rosenbrock_2d",E,"2D Rosenbrock test function",N,N],[5,"ackley",E,R[44],N,N],[5,"zero",E,"Zero test function",N,N],[5,"goldsteinprice",E,"Goldstein-Price test function",N,N],[5,"matyas",E,"Matyas test function",N,N],[5,"schaffer_n4",E,"Schaffer test function No. 4",N,N],[5,"booth",E,"Booth test function",N,N],[5,"eggholder",E,"Eggholder test function",N,N],[5,"picheny",E,"Picheny test function",N,N],[5,"rastrigin_a",E,R[43],N,N],[5,"levy_n13",E,"Levy test function No. 13",N,N],[5,"cross_in_tray",E,"Cross-in-tray test function",N,N],[5,"sphere",E,"Sphere test function",N,N],[5,"zero_derivative",E,"Derivative of zero test function",N,N],[5,"threehumpcamel",E,"Three-hump camel test function",N,N],[5,"styblinski_tang",E,"Styblinski-Tang test function",N,N],[5,"levy",E,"Levy test function",N,N],[5,"rosenbrock_2d_derivative",E,"Derivative of 2D Rosenbrock function",N,N],[5,"easom",E,"Easom test function",N,N],[5,"rosenbrock",E,"Multidimensional Rosenbrock test function",N,N],[5,"ackley_param",E,R[44],N,N],[5,"bukin_n6",E,"Bukin test function No. 6",N,N],[5,"beale",E,"Beale test function",N,N],[11,"from",R[45],E,1,[[[T]],[T]]],[11,"into",E,E,1,[[["self"]],[U]]],[11,R[49],E,E,1,[[["self"]],[T]]],[11,R[50],E,E,1,N],[11,R[46],E,E,1,[[[U]],[R[8]]]],[11,R[52],E,E,1,[[["self"]],[T]]],[11,R[51],E,E,1,[[["self"]],[R[53]]]],[11,R[47],E,E,1,[[["self"]],[T]]],[11,R[48],E,E,1,[[["self"]],[R[8]]]],[11,"from",R[4],E,62,[[[T]],[T]]],[11,"into",E,E,62,[[["self"]],[U]]],[11,R[46],E,E,62,[[[U]],[R[8]]]],[11,R[52],E,E,62,[[["self"]],[T]]],[11,R[51],E,E,62,[[["self"]],[R[53]]]],[11,R[47],E,E,62,[[["self"]],[T]]],[11,R[48],E,E,62,[[["self"]],[R[8]]]],[11,"from",E,E,63,[[[T]],[T]]],[11,"into",E,E,63,[[["self"]],[U]]],[11,R[49],E,E,63,[[["self"]],[T]]],[11,R[50],E,E,63,N],[11,R[46],E,E,63,[[[U]],[R[8]]]],[11,R[52],E,E,63,[[["self"]],[T]]],[11,R[51],E,E,63,[[["self"]],[R[53]]]],[11,R[47],E,E,63,[[["self"]],[T]]],[11,R[48],E,E,63,[[["self"]],[R[8]]]],[11,R[55],E,E,12,[[["self"]],[R[58]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[["self"]],[U]]],[11,R[49],E,E,12,[[["self"]],[T]]],[11,R[50],E,E,12,N],[11,R[46],E,E,12,[[[U]],[R[8]]]],[11,R[52],E,E,12,[[["self"]],[T]]],[11,R[51],E,E,12,[[["self"]],[R[53]]]],[11,R[47],E,E,12,[[["self"]],[T]]],[11,R[48],E,E,12,[[["self"]],[R[8]]]],[11,"from",E,E,64,[[[T]],[T]]],[11,"into",E,E,64,[[["self"]],[U]]],[11,R[49],E,E,64,[[["self"]],[T]]],[11,R[50],E,E,64,N],[11,R[46],E,E,64,[[[U]],[R[8]]]],[11,R[52],E,E,64,[[["self"]],[T]]],[11,R[51],E,E,64,[[["self"]],[R[53]]]],[11,R[47],E,E,64,[[["self"]],[T]]],[11,R[48],E,E,64,[[["self"]],[R[8]]]],[11,"from",R[54],E,14,[[[T]],[T]]],[11,"into",E,E,14,[[["self"]],[U]]],[11,R[46],E,E,14,[[[U]],[R[8]]]],[11,R[52],E,E,14,[[["self"]],[T]]],[11,R[51],E,E,14,[[["self"]],[R[53]]]],[11,R[47],E,E,14,[[["self"]],[T]]],[11,R[48],E,E,14,[[["self"]],[R[8]]]],[11,R[55],R[4],E,20,[[["self"]],[R[58]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[["self"]],[U]]],[11,R[49],E,E,20,[[["self"]],[T]]],[11,R[50],E,E,20,N],[11,R[46],E,E,20,[[[U]],[R[8]]]],[11,R[52],E,E,20,[[["self"]],[T]]],[11,R[51],E,E,20,[[["self"]],[R[53]]]],[11,R[47],E,E,20,[[["self"]],[T]]],[11,R[48],E,E,20,[[["self"]],[R[8]]]],[11,R[55],E,E,22,[[["self"]],[R[58]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[["self"]],[U]]],[11,R[49],E,E,22,[[["self"]],[T]]],[11,R[50],E,E,22,N],[11,R[46],E,E,22,[[[U]],[R[8]]]],[11,R[52],E,E,22,[[["self"]],[T]]],[11,R[51],E,E,22,[[["self"]],[R[53]]]],[11,R[47],E,E,22,[[["self"]],[T]]],[11,R[48],E,E,22,[[["self"]],[R[8]]]],[11,"from",R[56],E,24,[[[T]],[T]]],[11,"into",E,E,24,[[["self"]],[U]]],[11,R[49],E,E,24,[[["self"]],[T]]],[11,R[50],E,E,24,N],[11,R[46],E,E,24,[[[U]],[R[8]]]],[11,R[52],E,E,24,[[["self"]],[T]]],[11,R[51],E,E,24,[[["self"]],[R[53]]]],[11,R[47],E,E,24,[[["self"]],[T]]],[11,R[48],E,E,24,[[["self"]],[R[8]]]],[11,"from",E,E,65,[[[T]],[T]]],[11,"into",E,E,65,[[["self"]],[U]]],[11,R[49],E,E,65,[[["self"]],[T]]],[11,R[50],E,E,65,N],[11,R[46],E,E,65,[[[U]],[R[8]]]],[11,R[52],E,E,65,[[["self"]],[T]]],[11,R[51],E,E,65,[[["self"]],[R[53]]]],[11,R[47],E,E,65,[[["self"]],[T]]],[11,R[48],E,E,65,[[["self"]],[R[8]]]],[11,"from",R[4],E,66,[[[T]],[T]]],[11,"into",E,E,66,[[["self"]],[U]]],[11,R[49],E,E,66,[[["self"]],[T]]],[11,R[50],E,E,66,N],[11,R[46],E,E,66,[[[U]],[R[8]]]],[11,R[52],E,E,66,[[["self"]],[T]]],[11,R[51],E,E,66,[[["self"]],[R[53]]]],[11,R[47],E,E,66,[[["self"]],[T]]],[11,R[48],E,E,66,[[["self"]],[R[8]]]],[11,"from",E,E,67,[[[T]],[T]]],[11,"into",E,E,67,[[["self"]],[U]]],[11,R[49],E,E,67,[[["self"]],[T]]],[11,R[50],E,E,67,N],[11,R[46],E,E,67,[[[U]],[R[8]]]],[11,R[52],E,E,67,[[["self"]],[T]]],[11,R[51],E,E,67,[[["self"]],[R[53]]]],[11,R[47],E,E,67,[[["self"]],[T]]],[11,R[48],E,E,67,[[["self"]],[R[8]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[["self"]],[U]]],[11,R[49],E,E,26,[[["self"]],[T]]],[11,R[50],E,E,26,N],[11,R[46],E,E,26,[[[U]],[R[8]]]],[11,R[52],E,E,26,[[["self"]],[T]]],[11,R[51],E,E,26,[[["self"]],[R[53]]]],[11,R[47],E,E,26,[[["self"]],[T]]],[11,R[48],E,E,26,[[["self"]],[R[8]]]],[11,"from",E,E,68,[[[T]],[T]]],[11,"into",E,E,68,[[["self"]],[U]]],[11,R[49],E,E,68,[[["self"]],[T]]],[11,R[50],E,E,68,N],[11,R[46],E,E,68,[[[U]],[R[8]]]],[11,R[52],E,E,68,[[["self"]],[T]]],[11,R[51],E,E,68,[[["self"]],[R[53]]]],[11,R[47],E,E,68,[[["self"]],[T]]],[11,R[48],E,E,68,[[["self"]],[R[8]]]],[11,R[55],R[57],E,29,[[["self"]],[R[58]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[["self"]],[U]]],[11,R[46],E,E,29,[[[U]],[R[8]]]],[11,R[52],E,E,29,[[["self"]],[T]]],[11,R[51],E,E,29,[[["self"]],[R[53]]]],[11,R[47],E,E,29,[[["self"]],[T]]],[11,R[48],E,E,29,[[["self"]],[R[8]]]],[11,R[59],E,E,29,[[["self"]],["fail"]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[["self"]],[U]]],[11,R[46],E,E,30,[[[U]],[R[8]]]],[11,R[52],E,E,30,[[["self"]],[T]]],[11,R[51],E,E,30,[[["self"]],[R[53]]]],[11,R[47],E,E,30,[[["self"]],[T]]],[11,R[48],E,E,30,[[["self"]],[R[8]]]],[11,"from",R[4],E,69,[[[T]],[T]]],[11,"into",E,E,69,[[["self"]],[U]]],[11,R[49],E,E,69,[[["self"]],[T]]],[11,R[50],E,E,69,N],[11,R[46],E,E,69,[[[U]],[R[8]]]],[11,R[52],E,E,69,[[["self"]],[T]]],[11,R[51],E,E,69,[[["self"]],[R[53]]]],[11,R[47],E,E,69,[[["self"]],[T]]],[11,R[48],E,E,69,[[["self"]],[R[8]]]],[11,"from",E,E,70,[[[T]],[T]]],[11,"into",E,E,70,[[["self"]],[U]]],[11,R[49],E,E,70,[[["self"]],[T]]],[11,R[50],E,E,70,N],[11,R[46],E,E,70,[[[U]],[R[8]]]],[11,R[52],E,E,70,[[["self"]],[T]]],[11,R[51],E,E,70,[[["self"]],[R[53]]]],[11,R[47],E,E,70,[[["self"]],[T]]],[11,R[48],E,E,70,[[["self"]],[R[8]]]],[11,R[55],E,E,31,[[["self"]],[R[58]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[["self"]],[U]]],[11,R[46],E,E,31,[[[U]],[R[8]]]],[11,R[52],E,E,31,[[["self"]],[T]]],[11,R[51],E,E,31,[[["self"]],[R[53]]]],[11,R[47],E,E,31,[[["self"]],[T]]],[11,R[48],E,E,31,[[["self"]],[R[8]]]],[11,R[59],E,E,31,[[["self"]],["fail"]]],[11,R[55],E,E,71,[[["self"]],[R[58]]]],[11,"from",E,E,71,[[[T]],[T]]],[11,"into",E,E,71,[[["self"]],[U]]],[11,R[46],E,E,71,[[[U]],[R[8]]]],[11,R[52],E,E,71,[[["self"]],[T]]],[11,R[51],E,E,71,[[["self"]],[R[53]]]],[11,R[47],E,E,71,[[["self"]],[T]]],[11,R[48],E,E,71,[[["self"]],[R[8]]]],[11,R[59],E,E,71,[[["self"]],["fail"]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[["self"]],[U]]],[11,R[49],E,E,36,[[["self"]],[T]]],[11,R[50],E,E,36,N],[11,R[46],E,E,36,[[[U]],[R[8]]]],[11,R[52],E,E,36,[[["self"]],[T]]],[11,R[51],E,E,36,[[["self"]],[R[53]]]],[11,R[47],E,E,36,[[["self"]],[T]]],[11,R[48],E,E,36,[[["self"]],[R[8]]]],[11,"from",R[60],E,37,[[[T]],[T]]],[11,"into",E,E,37,[[["self"]],[U]]],[11,R[49],E,E,37,[[["self"]],[T]]],[11,R[50],E,E,37,N],[11,R[46],E,E,37,[[[U]],[R[8]]]],[11,R[52],E,E,37,[[["self"]],[T]]],[11,R[51],E,E,37,[[["self"]],[R[53]]]],[11,R[47],E,E,37,[[["self"]],[T]]],[11,R[48],E,E,37,[[["self"]],[R[8]]]],[11,"from",R[61],E,38,[[[T]],[T]]],[11,"into",E,E,38,[[["self"]],[U]]],[11,R[46],E,E,38,[[[U]],[R[8]]]],[11,R[52],E,E,38,[[["self"]],[T]]],[11,R[51],E,E,38,[[["self"]],[R[53]]]],[11,R[47],E,E,38,[[["self"]],[T]]],[11,R[48],E,E,38,[[["self"]],[R[8]]]],[11,"from",R[62],E,39,[[[T]],[T]]],[11,"into",E,E,39,[[["self"]],[U]]],[11,R[49],E,E,39,[[["self"]],[T]]],[11,R[50],E,E,39,N],[11,R[46],E,E,39,[[[U]],[R[8]]]],[11,R[52],E,E,39,[[["self"]],[T]]],[11,R[51],E,E,39,[[["self"]],[R[53]]]],[11,R[47],E,E,39,[[["self"]],[T]]],[11,R[48],E,E,39,[[["self"]],[R[8]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[["self"]],[U]]],[11,R[49],E,E,40,[[["self"]],[T]]],[11,R[50],E,E,40,N],[11,R[46],E,E,40,[[[U]],[R[8]]]],[11,R[52],E,E,40,[[["self"]],[T]]],[11,R[51],E,E,40,[[["self"]],[R[53]]]],[11,R[47],E,E,40,[[["self"]],[T]]],[11,R[48],E,E,40,[[["self"]],[R[8]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,"into",E,E,41,[[["self"]],[U]]],[11,R[49],E,E,41,[[["self"]],[T]]],[11,R[50],E,E,41,N],[11,R[46],E,E,41,[[[U]],[R[8]]]],[11,R[52],E,E,41,[[["self"]],[T]]],[11,R[51],E,E,41,[[["self"]],[R[53]]]],[11,R[47],E,E,41,[[["self"]],[T]]],[11,R[48],E,E,41,[[["self"]],[R[8]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,"into",E,E,42,[[["self"]],[U]]],[11,R[49],E,E,42,[[["self"]],[T]]],[11,R[50],E,E,42,N],[11,R[46],E,E,42,[[[U]],[R[8]]]],[11,R[52],E,E,42,[[["self"]],[T]]],[11,R[51],E,E,42,[[["self"]],[R[53]]]],[11,R[47],E,E,42,[[["self"]],[T]]],[11,R[48],E,E,42,[[["self"]],[R[8]]]],[11,"from",R[63],E,43,[[[T]],[T]]],[11,"into",E,E,43,[[["self"]],[U]]],[11,R[46],E,E,43,[[[U]],[R[8]]]],[11,R[52],E,E,43,[[["self"]],[T]]],[11,R[51],E,E,43,[[["self"]],[R[53]]]],[11,R[47],E,E,43,[[["self"]],[T]]],[11,R[48],E,E,43,[[["self"]],[R[8]]]],[11,"from",R[64],E,44,[[[T]],[T]]],[11,"into",E,E,44,[[["self"]],[U]]],[11,R[46],E,E,44,[[[U]],[R[8]]]],[11,R[52],E,E,44,[[["self"]],[T]]],[11,R[51],E,E,44,[[["self"]],[R[53]]]],[11,R[47],E,E,44,[[["self"]],[T]]],[11,R[48],E,E,44,[[["self"]],[R[8]]]],[11,"from",R[65],E,45,[[[T]],[T]]],[11,"into",E,E,45,[[["self"]],[U]]],[11,R[46],E,E,45,[[[U]],[R[8]]]],[11,R[52],E,E,45,[[["self"]],[T]]],[11,R[51],E,E,45,[[["self"]],[R[53]]]],[11,R[47],E,E,45,[[["self"]],[T]]],[11,R[48],E,E,45,[[["self"]],[R[8]]]],[11,"from",R[66],E,47,[[[T]],[T]]],[11,"into",E,E,47,[[["self"]],[U]]],[11,R[49],E,E,47,[[["self"]],[T]]],[11,R[50],E,E,47,N],[11,R[46],E,E,47,[[[U]],[R[8]]]],[11,R[52],E,E,47,[[["self"]],[T]]],[11,R[51],E,E,47,[[["self"]],[R[53]]]],[11,R[47],E,E,47,[[["self"]],[T]]],[11,R[48],E,E,47,[[["self"]],[R[8]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,"into",E,E,48,[[["self"]],[U]]],[11,R[49],E,E,48,[[["self"]],[T]]],[11,R[50],E,E,48,N],[11,R[46],E,E,48,[[[U]],[R[8]]]],[11,R[52],E,E,48,[[["self"]],[T]]],[11,R[51],E,E,48,[[["self"]],[R[53]]]],[11,R[47],E,E,48,[[["self"]],[T]]],[11,R[48],E,E,48,[[["self"]],[R[8]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,"into",E,E,49,[[["self"]],[U]]],[11,R[49],E,E,49,[[["self"]],[T]]],[11,R[50],E,E,49,N],[11,R[46],E,E,49,[[[U]],[R[8]]]],[11,R[52],E,E,49,[[["self"]],[T]]],[11,R[51],E,E,49,[[["self"]],[R[53]]]],[11,R[47],E,E,49,[[["self"]],[T]]],[11,R[48],E,E,49,[[["self"]],[R[8]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,"into",E,E,50,[[["self"]],[U]]],[11,R[49],E,E,50,[[["self"]],[T]]],[11,R[50],E,E,50,N],[11,R[46],E,E,50,[[[U]],[R[8]]]],[11,R[52],E,E,50,[[["self"]],[T]]],[11,R[51],E,E,50,[[["self"]],[R[53]]]],[11,R[47],E,E,50,[[["self"]],[T]]],[11,R[48],E,E,50,[[["self"]],[R[8]]]],[11,"from",R[67],E,51,[[[T]],[T]]],[11,"into",E,E,51,[[["self"]],[U]]],[11,R[46],E,E,51,[[[U]],[R[8]]]],[11,R[52],E,E,51,[[["self"]],[T]]],[11,R[51],E,E,51,[[["self"]],[R[53]]]],[11,R[47],E,E,51,[[["self"]],[T]]],[11,R[48],E,E,51,[[["self"]],[R[8]]]],[11,"from",R[68],E,52,[[[T]],[T]]],[11,"into",E,E,52,[[["self"]],[U]]],[11,R[46],E,E,52,[[[U]],[R[8]]]],[11,R[52],E,E,52,[[["self"]],[T]]],[11,R[51],E,E,52,[[["self"]],[R[53]]]],[11,R[47],E,E,52,[[["self"]],[T]]],[11,R[48],E,E,52,[[["self"]],[R[8]]]],[11,"from",R[69],E,53,[[[T]],[T]]],[11,"into",E,E,53,[[["self"]],[U]]],[11,R[46],E,E,53,[[[U]],[R[8]]]],[11,R[52],E,E,53,[[["self"]],[T]]],[11,R[51],E,E,53,[[["self"]],[R[53]]]],[11,R[47],E,E,53,[[["self"]],[T]]],[11,R[48],E,E,53,[[["self"]],[R[8]]]],[11,"from",R[70],E,54,[[[T]],[T]]],[11,"into",E,E,54,[[["self"]],[U]]],[11,R[46],E,E,54,[[[U]],[R[8]]]],[11,R[52],E,E,54,[[["self"]],[T]]],[11,R[51],E,E,54,[[["self"]],[R[53]]]],[11,R[47],E,E,54,[[["self"]],[T]]],[11,R[48],E,E,54,[[["self"]],[R[8]]]],[11,"from",R[71],E,55,[[[T]],[T]]],[11,"into",E,E,55,[[["self"]],[U]]],[11,R[46],E,E,55,[[[U]],[R[8]]]],[11,R[52],E,E,55,[[["self"]],[T]]],[11,R[51],E,E,55,[[["self"]],[R[53]]]],[11,R[47],E,E,55,[[["self"]],[T]]],[11,R[48],E,E,55,[[["self"]],[R[8]]]],[11,"from",R[72],E,57,[[[T]],[T]]],[11,"into",E,E,57,[[["self"]],[U]]],[11,R[46],E,E,57,[[[U]],[R[8]]]],[11,R[52],E,E,57,[[["self"]],[T]]],[11,R[51],E,E,57,[[["self"]],[R[53]]]],[11,R[47],E,E,57,[[["self"]],[T]]],[11,R[48],E,E,57,[[["self"]],[R[8]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,"into",E,E,56,[[["self"]],[U]]],[11,R[49],E,E,56,[[["self"]],[T]]],[11,R[50],E,E,56,N],[11,R[46],E,E,56,[[[U]],[R[8]]]],[11,R[52],E,E,56,[[["self"]],[T]]],[11,R[51],E,E,56,[[["self"]],[R[53]]]],[11,R[47],E,E,56,[[["self"]],[T]]],[11,R[48],E,E,56,[[["self"]],[R[8]]]],[11,"from",R[73],E,58,[[[T]],[T]]],[11,"into",E,E,58,[[["self"]],[U]]],[11,R[46],E,E,58,[[[U]],[R[8]]]],[11,R[52],E,E,58,[[["self"]],[T]]],[11,R[51],E,E,58,[[["self"]],[R[53]]]],[11,R[47],E,E,58,[[["self"]],[T]]],[11,R[48],E,E,58,[[["self"]],[R[8]]]],[11,"from",R[74],E,59,[[[T]],[T]]],[11,"into",E,E,59,[[["self"]],[U]]],[11,R[46],E,E,59,[[[U]],[R[8]]]],[11,R[52],E,E,59,[[["self"]],[T]]],[11,R[51],E,E,59,[[["self"]],[R[53]]]],[11,R[47],E,E,59,[[["self"]],[T]]],[11,R[48],E,E,59,[[["self"]],[R[8]]]],[11,"from",R[75],E,60,[[[T]],[T]]],[11,"into",E,E,60,[[["self"]],[U]]],[11,R[46],E,E,60,[[[U]],[R[8]]]],[11,R[52],E,E,60,[[["self"]],[T]]],[11,R[51],E,E,60,[[["self"]],[R[53]]]],[11,R[47],E,E,60,[[["self"]],[T]]],[11,R[48],E,E,60,[[["self"]],[R[8]]]],[11,"from",R[76],E,61,[[[T]],[T]]],[11,"into",E,E,61,[[["self"]],[U]]],[11,R[46],E,E,61,[[[U]],[R[8]]]],[11,R[52],E,E,61,[[["self"]],[T]]],[11,R[51],E,E,61,[[["self"]],[R[53]]]],[11,R[47],E,E,61,[[["self"]],[T]]],[11,R[48],E,E,61,[[["self"]],[R[8]]]],[11,"name",R[4],E,31,[[["self"]],[R[98],["str"]]]],[11,"cause",E,E,31,[[["self"]],[R[98],["fail"]]]],[11,R[77],E,E,31,[[["self"]],[R[98],[R[77]]]]],[11,"clone",E,E,67,[[["self"]],[R[92]]]],[11,"clone",E,E,36,[[["self"]],[R[81]]]],[11,"clone",E,E,68,[[["self"]],[R[86]]]],[11,"clone",E,E,70,[[["self"]],[R[213]]]],[11,"clone",E,E,26,[[["self"]],[R[82]]]],[11,"clone",R[56],E,24,[[["self"]],[R[83]]]],[11,"clone",R[4],E,66,[[["self"]],[R[89]]]],[11,"clone",E,E,20,[[["self"]],[R[13]]]],[11,"clone",E,E,69,[[["self"]],[R[84]]]],[11,"clone",E,E,64,[[["self"]],[R[88]]]],[11,"clone",R[56],E,65,[[["self"]],[R[79]]]],[11,"clone",R[4],E,22,[[["self"]],[R[9]]]],[11,"clone",E,E,12,[[["self"]],[R[78]]]],[11,"clone",E,E,63,[[["self"]],[R[87]]]],[11,"cmp",R[56],E,65,[[["self"],[R[79]]],[R[80]]]],[11,"cmp",R[4],E,22,[[["self"],[R[9]]],[R[80]]]],[11,"cmp",E,E,36,[[["self"],[R[81]]],[R[80]]]],[11,"cmp",E,E,20,[[["self"],[R[13]]],[R[80]]]],[11,"cmp",E,E,26,[[["self"],[R[82]]],[R[80]]]],[11,"cmp",E,E,12,[[["self"],[R[78]]],[R[80]]]],[11,"cmp",R[56],E,24,[[["self"],[R[83]]],[R[80]]]],[11,"cmp",R[4],E,69,[[["self"],[R[84]]],[R[80]]]],[11,R[85],E,E,36,[[],[R[81]]]],[11,R[85],E,E,12,[[],[R[78]]]],[11,R[85],E,E,68,[[],[R[86]]]],[11,R[85],E,E,63,[[],[R[87]]]],[11,R[85],E,E,64,[[],[R[88]]]],[11,R[85],R[56],E,24,[[],[R[83]]]],[11,R[85],R[4],E,69,[[],[R[84]]]],[11,R[85],E,E,26,[[],[R[82]]]],[11,R[85],E,E,66,[[],[R[89]]]],[11,R[85],E,E,20,[[],[R[13]]]],[11,R[85],E,E,22,[[],[R[9]]]],[11,"fmt",E,E,12,[[["self"],[R[90]]],[R[8],["error"]]]],[11,"fmt",E,E,20,[[["self"],[R[90]]],[R[8],["error"]]]],[11,"fmt",E,E,31,[[["self"],[R[90]]],[R[8],["error"]]]],[11,"fmt",E,E,22,[[["self"],[R[90]]],[R[8],["error"]]]],[11,R[91],R[56],E,24,[[["__d"]],[R[8],[R[83]]]]],[11,R[91],R[4],E,12,[[["__d"]],[R[8],[R[78]]]]],[11,R[91],E,E,69,[[["__d"]],[R[8],[R[84]]]]],[11,R[91],E,E,26,[[["__d"]],[R[8],[R[82]]]]],[11,R[91],E,E,63,[[["__d"]],[R[8],[R[87]]]]],[11,R[91],E,E,66,[[["__d"]],[R[8],[R[89]]]]],[11,R[91],E,E,67,[[["__d"]],[R[8],[R[92]]]]],[11,R[91],E,E,22,[[["__d"]],[R[8],[R[9]]]]],[11,R[91],R[56],E,65,[[["__d"]],[R[8],[R[79]]]]],[11,R[91],R[4],E,20,[[["__d"]],[R[8],[R[13]]]]],[11,R[91],E,E,36,[[["__d"]],[R[8],[R[81]]]]],[11,"write",R[56],E,65,[[["self"],[T],["u64"],["bool"]],[R[8],["error"]]]],[11,"write",R[4],E,64,[[["self"],[T],["u64"],["bool"]],[R[8],["error"]]]],[11,R[93],E,R[95],70,[[["self"],["str"],[R[13]]],[R[8],["error"]]]],[11,R[94],E,R[96],70,[[["self"],[R[13]]],[R[8],["error"]]]],[11,R[93],E,R[95],68,[[["self"],["str"],[R[13]]],[R[8],["error"]]]],[11,R[94],E,R[96],68,[[["self"],[R[13]]],[R[8],["error"]]]],[11,"extend",E,E,20,N],[11,"fmt",E,E,36,[[["self"],[R[90]]],[R[8],["error"]]]],[11,"fmt",E,E,67,[[["self"],[R[90]]],[R[8],["error"]]]],[11,"fmt",E,E,22,[[["self"],[R[90]]],[R[8],["error"]]]],[11,"fmt",E,E,31,[[["self"],[R[90]]],[R[8],["error"]]]],[11,"fmt",E,E,63,[[["self"],[R[90]]],[R[8],["error"]]]],[11,"fmt",E,E,12,[[["self"],[R[90]]],[R[8],["error"]]]],[11,"fmt",R[56],E,65,[[["self"],[R[90]]],[R[8],["error"]]]],[11,"fmt",R[4],E,26,[[["self"],[R[90]]],[R[8],["error"]]]],[11,"fmt",E,E,69,[[["self"],[R[90]]],[R[8],["error"]]]],[11,"fmt",R[56],E,24,[[["self"],[R[90]]],[R[8],["error"]]]],[11,"fmt",R[4],E,20,[[["self"],[R[90]]],[R[8],["error"]]]],[11,"fmt",E,E,66,[[["self"],[R[90]]],[R[8],["error"]]]],[11,R[97],E,E,20,[[["self"],[R[13]]],[R[98],[R[80]]]]],[11,"lt",E,E,20,[[["self"],[R[13]]],["bool"]]],[11,"le",E,E,20,[[["self"],[R[13]]],["bool"]]],[11,"gt",E,E,20,[[["self"],[R[13]]],["bool"]]],[11,"ge",E,E,20,[[["self"],[R[13]]],["bool"]]],[11,R[97],E,E,36,[[["self"],[R[81]]],[R[98],[R[80]]]]],[11,"lt",E,E,36,[[["self"],[R[81]]],["bool"]]],[11,"le",E,E,36,[[["self"],[R[81]]],["bool"]]],[11,"gt",E,E,36,[[["self"],[R[81]]],["bool"]]],[11,"ge",E,E,36,[[["self"],[R[81]]],["bool"]]],[11,R[97],R[56],E,24,[[["self"],[R[83]]],[R[98],[R[80]]]]],[11,R[97],R[4],E,12,[[["self"],[R[78]]],[R[98],[R[80]]]]],[11,R[97],E,E,69,[[["self"],[R[84]]],[R[98],[R[80]]]]],[11,"lt",E,E,69,[[["self"],[R[84]]],["bool"]]],[11,"le",E,E,69,[[["self"],[R[84]]],["bool"]]],[11,"gt",E,E,69,[[["self"],[R[84]]],["bool"]]],[11,"ge",E,E,69,[[["self"],[R[84]]],["bool"]]],[11,R[97],R[56],E,65,[[["self"],[R[79]]],[R[98],[R[80]]]]],[11,"lt",E,E,65,[[["self"],[R[79]]],["bool"]]],[11,"le",E,E,65,[[["self"],[R[79]]],["bool"]]],[11,"gt",E,E,65,[[["self"],[R[79]]],["bool"]]],[11,"ge",E,E,65,[[["self"],[R[79]]],["bool"]]],[11,R[97],R[4],E,26,[[["self"],[R[82]]],[R[98],[R[80]]]]],[11,"lt",E,E,26,[[["self"],[R[82]]],["bool"]]],[11,"le",E,E,26,[[["self"],[R[82]]],["bool"]]],[11,"gt",E,E,26,[[["self"],[R[82]]],["bool"]]],[11,"ge",E,E,26,[[["self"],[R[82]]],["bool"]]],[11,R[97],E,E,22,[[["self"],[R[9]]],[R[98],[R[80]]]]],[11,"hash",E,E,69,N],[11,"hash",E,E,12,N],[11,"hash",E,E,20,N],[11,"hash",E,E,26,N],[11,R[99],E,E,12,[[["self"],["__s"]],[R[8]]]],[11,R[99],R[56],E,24,[[["self"],["__s"]],[R[8]]]],[11,R[99],R[4],E,36,[[["self"],["__s"]],[R[8]]]],[11,R[99],E,E,66,[[["self"],["__s"]],[R[8]]]],[11,R[99],E,E,69,[[["self"],["__s"]],[R[8]]]],[11,R[99],E,E,67,[[["self"],["__s"]],[R[8]]]],[11,R[99],E,E,22,[[["self"],["__s"]],[R[8]]]],[11,R[99],E,E,20,[[["self"],["__s"]],[R[8]]]],[11,R[99],E,E,26,[[["self"],["__s"]],[R[8]]]],[11,R[99],E,E,63,[[["self"],["__s"]],[R[8]]]],[11,R[99],R[56],E,65,[[["self"],["__s"]],[R[8]]]],[11,"apply",R[4],E,66,N],[11,R[14],E,E,66,N],[11,R[150],E,E,66,N],[11,"modify",E,E,66,N],[11,"apply",E,E,63,N],[11,R[14],E,E,63,N],[11,R[150],E,E,63,N],[11,"modify",E,E,63,N],[11,"eq",R[56],E,65,[[["self"],[R[79]]],["bool"]]],[11,"ne",E,E,65,[[["self"],[R[79]]],["bool"]]],[11,"eq",E,E,24,[[["self"],[R[83]]],["bool"]]],[11,"eq",R[4],E,12,[[["self"],[R[78]]],["bool"]]],[11,"eq",E,E,69,[[["self"],[R[84]]],["bool"]]],[11,"ne",E,E,69,[[["self"],[R[84]]],["bool"]]],[11,"eq",E,E,26,[[["self"],[R[82]]],["bool"]]],[11,"ne",E,E,26,[[["self"],[R[82]]],["bool"]]],[11,"eq",E,E,20,[[["self"],[R[13]]],["bool"]]],[11,"ne",E,E,20,[[["self"],[R[13]]],["bool"]]],[11,"eq",E,E,36,[[["self"],[R[81]]],["bool"]]],[11,"ne",E,E,36,[[["self"],[R[81]]],["bool"]]],[11,"eq",E,E,22,[[["self"],[R[9]]],["bool"]]],[11,"from_iter",E,E,20,[[["i"]],[R[13]]]],[11,"description",R[57],E,29,[[["self"]],["str"]]],[11,"cause",E,E,29,[[["self"]],[R[98],["error"]]]],[11,"fmt",E,E,29,[[["self"],[R[90]]],[R[8],["error"]]]],[11,"from",E,E,29,[[["error"]],["error"]]],[11,"fmt",E,E,29,[[["self"],[R[90]]],[R[8],["error"]]]],[11,"fmt",E,E,30,[[["self"],[R[90]]],[R[8],["error"]]]],[11,"as_ref",R[4],E,71,[[["self"]],["fail"]]],[11,"fmt",E,E,71,[[["self"],[R[90]]],[R[8],["error"]]]],[11,R[59],E,E,71,[[["self"]],["fail"]]],[11,"from",E,E,71,[[["f"]],["error"]]],[11,"fmt",E,E,71,[[["self"],[R[90]]],[R[8],["error"]]]],[11,"clone",R[45],E,1,[[["self"]],[R[100]]]],[11,R[85],E,E,1,[[],[R[100]]]],[11,"eval",R[66],E,47,[[["self"],["f64"],[T],["f64"],[T],[T],["f64"]],["bool"]]],[11,R[101],E,E,47,[[["self"]],["bool"]]],[11,"eval",E,E,48,[[["self"],["f64"],[T],["f64"],[T],[T],["f64"]],["bool"]]],[11,R[101],E,E,48,[[["self"]],["bool"]]],[11,"eval",E,E,49,[[["self"],["f64"],[T],["f64"],[T],[T],["f64"]],["bool"]]],[11,R[101],E,E,49,[[["self"]],["bool"]]],[11,"eval",E,E,50,[[["self"],["f64"],[T],["f64"],[T],[T],["f64"]],["bool"]]],[11,R[101],E,E,50,[[["self"]],["bool"]]],[11,"eq",R[62],E,39,[[["self"],[R[102]]],["bool"]]],[11,"eq",E,E,40,[[["self"],[R[103]]],["bool"]]],[11,"eq",E,E,41,[[["self"],[R[104]]],["bool"]]],[11,"eq",E,E,42,[[["self"],[R[105]]],["bool"]]],[11,R[85],E,E,39,[[],[R[102]]]],[11,R[85],E,E,40,[[],[R[103]]]],[11,R[85],E,E,41,[[],[R[104]]]],[11,R[85],E,E,42,[[],[R[105]]]],[11,R[85],R[66],E,47,[[],[R[107]]]],[11,R[85],E,E,48,[[],[R[108]]]],[11,R[85],E,E,49,[[],[R[109]]]],[11,R[85],E,E,50,[[],[R[110]]]],[11,R[85],R[72],E,56,[[],["self"]]],[11,"cmp",R[62],E,39,[[["self"],[R[102]]],[R[80]]]],[11,"cmp",E,E,40,[[["self"],[R[103]]],[R[80]]]],[11,"cmp",E,E,41,[[["self"],[R[104]]],[R[80]]]],[11,"cmp",E,E,42,[[["self"],[R[105]]],[R[80]]]],[11,"clone",R[60],E,37,[[["self"]],[R[106]]]],[11,"clone",R[62],E,39,[[["self"]],[R[102]]]],[11,"clone",E,E,40,[[["self"]],[R[103]]]],[11,"clone",E,E,41,[[["self"]],[R[104]]]],[11,"clone",E,E,42,[[["self"]],[R[105]]]],[11,"clone",R[66],E,47,[[["self"]],[R[107]]]],[11,"clone",E,E,48,[[["self"]],[R[108]]]],[11,"clone",E,E,49,[[["self"]],[R[109]]]],[11,"clone",E,E,50,[[["self"]],[R[110]]]],[11,"clone",R[72],E,56,[[["self"]],[R[111]]]],[11,R[97],R[62],E,39,[[["self"],[R[102]]],[R[98],[R[80]]]]],[11,R[97],E,E,40,[[["self"],[R[103]]],[R[98],[R[80]]]]],[11,R[97],E,E,41,[[["self"],[R[104]]],[R[98],[R[80]]]]],[11,R[97],E,E,42,[[["self"],[R[105]]],[R[98],[R[80]]]]],[11,"hash",E,E,39,N],[11,"hash",E,E,40,N],[11,"hash",E,E,41,N],[11,"hash",E,E,42,N],[11,"fmt",E,E,39,[[["self"],[R[90]]],[R[8]]]],[11,"fmt",E,E,40,[[["self"],[R[90]]],[R[8]]]],[11,"fmt",E,E,41,[[["self"],[R[90]]],[R[8]]]],[11,"fmt",E,E,42,[[["self"],[R[90]]],[R[8]]]],[11,"fmt",R[66],E,47,[[["self"],[R[90]]],[R[8]]]],[11,"fmt",E,E,48,[[["self"],[R[90]]],[R[8]]]],[11,"fmt",E,E,49,[[["self"],[R[90]]],[R[8]]]],[11,"fmt",E,E,50,[[["self"],[R[90]]],[R[8]]]],[11,"fmt",R[72],E,56,[[["self"],[R[90]]],[R[8]]]],[11,R[91],R[60],E,37,[[["__d"]],[R[8]]]],[11,R[91],R[61],E,38,[[["__d"]],[R[8]]]],[11,R[91],R[62],E,39,[[["__d"]],[R[8]]]],[11,R[91],E,E,40,[[["__d"]],[R[8]]]],[11,R[91],E,E,41,[[["__d"]],[R[8]]]],[11,R[91],E,E,42,[[["__d"]],[R[8]]]],[11,R[91],R[63],E,43,[[["__d"]],[R[8]]]],[11,R[91],R[64],E,44,[[["__d"]],[R[8]]]],[11,R[91],R[65],E,45,[[["__d"]],[R[8]]]],[11,R[91],R[66],E,47,[[["__d"]],[R[8]]]],[11,R[91],E,E,48,[[["__d"]],[R[8]]]],[11,R[91],E,E,49,[[["__d"]],[R[8]]]],[11,R[91],E,E,50,[[["__d"]],[R[8]]]],[11,R[91],R[67],E,51,[[["__d"]],[R[8]]]],[11,R[91],R[68],E,52,[[["__d"]],[R[8]]]],[11,R[91],R[69],E,53,[[["__d"]],[R[8]]]],[11,R[91],R[70],E,54,[[["__d"]],[R[8]]]],[11,R[91],R[71],E,55,[[["__d"]],[R[8]]]],[11,R[91],R[72],E,56,[[["__d"]],[R[8]]]],[11,R[91],E,E,57,[[["__d"]],[R[8]]]],[11,R[91],R[73],E,58,[[["__d"]],[R[8]]]],[11,R[91],R[74],E,59,[[["__d"]],[R[8]]]],[11,R[91],R[75],E,60,[[["__d"]],[R[8]]]],[11,R[91],R[76],E,61,[[["__d"]],[R[8]]]],[11,R[99],R[60],E,37,[[["self"],["__s"]],[R[8]]]],[11,R[99],R[61],E,38,[[["self"],["__s"]],[R[8]]]],[11,R[99],R[62],E,39,[[["self"],["__s"]],[R[8]]]],[11,R[99],E,E,40,[[["self"],["__s"]],[R[8]]]],[11,R[99],E,E,41,[[["self"],["__s"]],[R[8]]]],[11,R[99],E,E,42,[[["self"],["__s"]],[R[8]]]],[11,R[99],R[63],E,43,[[["self"],["__s"]],[R[8]]]],[11,R[99],R[64],E,44,[[["self"],["__s"]],[R[8]]]],[11,R[99],R[65],E,45,[[["self"],["__s"]],[R[8]]]],[11,R[99],R[66],E,47,[[["self"],["__s"]],[R[8]]]],[11,R[99],E,E,48,[[["self"],["__s"]],[R[8]]]],[11,R[99],E,E,49,[[["self"],["__s"]],[R[8]]]],[11,R[99],E,E,50,[[["self"],["__s"]],[R[8]]]],[11,R[99],R[67],E,51,[[["self"],["__s"]],[R[8]]]],[11,R[99],R[68],E,52,[[["self"],["__s"]],[R[8]]]],[11,R[99],R[69],E,53,[[["self"],["__s"]],[R[8]]]],[11,R[99],R[70],E,54,[[["self"],["__s"]],[R[8]]]],[11,R[99],R[71],E,55,[[["self"],["__s"]],[R[8]]]],[11,R[99],R[72],E,56,[[["self"],["__s"]],[R[8]]]],[11,R[99],E,E,57,[[["self"],["__s"]],[R[8]]]],[11,R[99],R[73],E,58,[[["self"],["__s"]],[R[8]]]],[11,R[99],R[74],E,59,[[["self"],["__s"]],[R[8]]]],[11,R[99],R[75],E,60,[[["self"],["__s"]],[R[8]]]],[11,R[99],R[76],E,61,[[["self"],["__s"]],[R[8]]]],[11,"run",R[60],R[145],37,[[["self"]],[R[8],[R[9],"error"]]]],[11,R[146],E,R[147],37,[[["self"]],[R[8],[R[9],"error"]]]],[11,"apply",E,R[148],37,N],[11,R[14],E,R[149],37,N],[11,R[150],E,R[151],37,N],[11,R[112],E,R[152],37,N],[11,R[153],E,R[154],37,N],[11,R[113],E,R[155],37,N],[11,R[114],E,R[156],37,N],[11,R[32],E,R[157],37,N],[11,R[115],E,R[158],37,N],[11,R[116],E,R[159],37,N],[11,"modify",E,R[160],37,N],[11,R[8],E,R[161],37,[[["self"]],[R[9]]]],[11,R[117],E,R[162],37,[[["self"],["u64"]]]],[11,R[118],E,R[163],37,[[["self"]],["u64"]]],[11,R[119],E,R[164],37,[[["self"]]]],[11,R[165],E,R[166],37,[[["self"]],["u64"]]],[11,R[167],E,R[168],37,[[["self"]],["f64"]]],[11,R[120],E,R[169],37,[[["self"],["f64"]]]],[11,R[121],E,R[170],37,[[["self"]],["f64"]]],[11,R[122],E,R[171],37,[[["self"],["f64"]]]],[11,R[123],E,R[172],37,[[["self"],["f64"]]]],[11,R[124],E,R[173],37,[[["self"]]]],[11,R[125],E,R[174],37,[[["self"],["u64"]]]],[11,R[126],E,R[130],37,[[["self"]],["u64"]]],[11,R[127],E,R[175],37,[[["self"]]]],[11,R[128],E,R[176],37,[[["self"],["u64"]]]],[11,R[129],E,R[130],37,[[["self"]],["u64"]]],[11,R[131],E,R[177],37,[[["self"]]]],[11,R[132],E,R[178],37,[[["self"],["u64"]]]],[11,R[133],E,R[130],37,[[["self"]],["u64"]]],[11,R[134],E,R[179],37,[[["self"],["arc",[R[180]]]]]],[11,R[135],E,R[181],37,[[["self"],["arc",[R[182]]]]]],[11,R[136],E,R[183],37,[[["self"],[R[78]]]]],[11,R[137],E,R[184],37,[[["self"]],[R[78]]]],[11,R[138],E,R[185],37,[[["self"]]]],[11,R[139],E,R[140],37,[[["self"],["str"]]]],[11,R[141],E,R[142],37,[[["self"],["str"]]]],[11,R[143],E,R[144],37,[[["self"],[R[82]]]]],[11,"run",R[61],R[145],38,[[["self"]],[R[8],[R[9],"error"]]]],[11,R[146],E,R[147],38,[[["self"]],[R[8],[R[9],"error"]]]],[11,"apply",E,R[148],38,N],[11,R[14],E,R[149],38,N],[11,R[150],E,R[151],38,N],[11,R[112],E,R[152],38,N],[11,R[153],E,R[154],38,N],[11,R[113],E,R[155],38,N],[11,R[114],E,R[156],38,N],[11,R[32],E,R[157],38,N],[11,R[115],E,R[158],38,N],[11,R[116],E,R[159],38,N],[11,"modify",E,R[160],38,N],[11,R[8],E,R[161],38,[[["self"]],[R[9]]]],[11,R[117],E,R[162],38,[[["self"],["u64"]]]],[11,R[118],E,R[163],38,[[["self"]],["u64"]]],[11,R[119],E,R[164],38,[[["self"]]]],[11,R[165],E,R[166],38,[[["self"]],["u64"]]],[11,R[167],E,R[168],38,[[["self"]],["f64"]]],[11,R[120],E,R[169],38,[[["self"],["f64"]]]],[11,R[121],E,R[170],38,[[["self"]],["f64"]]],[11,R[122],E,R[171],38,[[["self"],["f64"]]]],[11,R[123],E,R[172],38,[[["self"],["f64"]]]],[11,R[124],E,R[173],38,[[["self"]]]],[11,R[125],E,R[174],38,[[["self"],["u64"]]]],[11,R[126],E,R[130],38,[[["self"]],["u64"]]],[11,R[127],E,R[175],38,[[["self"]]]],[11,R[128],E,R[176],38,[[["self"],["u64"]]]],[11,R[129],E,R[130],38,[[["self"]],["u64"]]],[11,R[131],E,R[177],38,[[["self"]]]],[11,R[132],E,R[178],38,[[["self"],["u64"]]]],[11,R[133],E,R[130],38,[[["self"]],["u64"]]],[11,R[134],E,R[179],38,[[["self"],["arc",[R[180]]]]]],[11,R[135],E,R[181],38,[[["self"],["arc",[R[182]]]]]],[11,R[136],E,R[183],38,[[["self"],[R[78]]]]],[11,R[137],E,R[184],38,[[["self"]],[R[78]]]],[11,R[138],E,R[185],38,[[["self"]]]],[11,R[139],E,R[140],38,[[["self"],["str"]]]],[11,R[141],E,R[142],38,[[["self"],["str"]]]],[11,R[143],E,R[144],38,[[["self"],[R[82]]]]],[11,"run",R[63],R[145],43,[[["self"]],[R[8],[R[9],"error"]]]],[11,R[146],E,R[147],43,[[["self"]],[R[8],[R[9],"error"]]]],[11,"apply",E,R[148],43,N],[11,R[14],E,R[149],43,N],[11,R[150],E,R[151],43,N],[11,R[112],E,R[152],43,N],[11,R[153],E,R[154],43,N],[11,R[113],E,R[155],43,N],[11,R[114],E,R[156],43,N],[11,R[32],E,R[157],43,N],[11,R[115],E,R[158],43,N],[11,R[116],E,R[159],43,N],[11,"modify",E,R[160],43,N],[11,R[8],E,R[161],43,[[["self"]],[R[9]]]],[11,R[117],E,R[162],43,[[["self"],["u64"]]]],[11,R[118],E,R[163],43,[[["self"]],["u64"]]],[11,R[119],E,R[164],43,[[["self"]]]],[11,R[165],E,R[166],43,[[["self"]],["u64"]]],[11,R[167],E,R[168],43,[[["self"]],["f64"]]],[11,R[120],E,R[169],43,[[["self"],["f64"]]]],[11,R[121],E,R[170],43,[[["self"]],["f64"]]],[11,R[122],E,R[171],43,[[["self"],["f64"]]]],[11,R[123],E,R[172],43,[[["self"],["f64"]]]],[11,R[124],E,R[173],43,[[["self"]]]],[11,R[125],E,R[174],43,[[["self"],["u64"]]]],[11,R[126],E,R[130],43,[[["self"]],["u64"]]],[11,R[127],E,R[175],43,[[["self"]]]],[11,R[128],E,R[176],43,[[["self"],["u64"]]]],[11,R[129],E,R[130],43,[[["self"]],["u64"]]],[11,R[131],E,R[177],43,[[["self"]]]],[11,R[132],E,R[178],43,[[["self"],["u64"]]]],[11,R[133],E,R[130],43,[[["self"]],["u64"]]],[11,R[134],E,R[179],43,[[["self"],["arc",[R[180]]]]]],[11,R[135],E,R[181],43,[[["self"],["arc",[R[182]]]]]],[11,R[136],E,R[183],43,[[["self"],[R[78]]]]],[11,R[137],E,R[184],43,[[["self"]],[R[78]]]],[11,R[138],E,R[185],43,[[["self"]]]],[11,R[139],E,R[140],43,[[["self"],["str"]]]],[11,R[141],E,R[142],43,[[["self"],["str"]]]],[11,R[143],E,R[144],43,[[["self"],[R[82]]]]],[11,"run",R[64],R[145],44,[[["self"]],[R[8],[R[9],"error"]]]],[11,R[146],E,R[147],44,[[["self"]],[R[8],[R[9],"error"]]]],[11,"apply",E,R[148],44,N],[11,R[14],E,R[149],44,N],[11,R[150],E,R[151],44,N],[11,R[112],E,R[152],44,N],[11,R[153],E,R[154],44,N],[11,R[113],E,R[155],44,N],[11,R[114],E,R[156],44,N],[11,R[32],E,R[157],44,N],[11,R[115],E,R[158],44,N],[11,R[116],E,R[159],44,N],[11,"modify",E,R[160],44,N],[11,R[8],E,R[161],44,[[["self"]],[R[9]]]],[11,R[117],E,R[162],44,[[["self"],["u64"]]]],[11,R[118],E,R[163],44,[[["self"]],["u64"]]],[11,R[119],E,R[164],44,[[["self"]]]],[11,R[165],E,R[166],44,[[["self"]],["u64"]]],[11,R[167],E,R[168],44,[[["self"]],["f64"]]],[11,R[120],E,R[169],44,[[["self"],["f64"]]]],[11,R[121],E,R[170],44,[[["self"]],["f64"]]],[11,R[122],E,R[171],44,[[["self"],["f64"]]]],[11,R[123],E,R[172],44,[[["self"],["f64"]]]],[11,R[124],E,R[173],44,[[["self"]]]],[11,R[125],E,R[174],44,[[["self"],["u64"]]]],[11,R[126],E,R[130],44,[[["self"]],["u64"]]],[11,R[127],E,R[175],44,[[["self"]]]],[11,R[128],E,R[176],44,[[["self"],["u64"]]]],[11,R[129],E,R[130],44,[[["self"]],["u64"]]],[11,R[131],E,R[177],44,[[["self"]]]],[11,R[132],E,R[178],44,[[["self"],["u64"]]]],[11,R[133],E,R[130],44,[[["self"]],["u64"]]],[11,R[134],E,R[179],44,[[["self"],["arc",[R[180]]]]]],[11,R[135],E,R[181],44,[[["self"],["arc",[R[182]]]]]],[11,R[136],E,R[183],44,[[["self"],[R[78]]]]],[11,R[137],E,R[184],44,[[["self"]],[R[78]]]],[11,R[138],E,R[185],44,[[["self"]]]],[11,R[139],E,R[140],44,[[["self"],["str"]]]],[11,R[141],E,R[142],44,[[["self"],["str"]]]],[11,R[143],E,R[144],44,[[["self"],[R[82]]]]],[11,"run",R[65],R[145],45,[[["self"]],[R[8],[R[9],"error"]]]],[11,R[146],E,R[147],45,[[["self"]],[R[8],[R[9],"error"]]]],[11,"apply",E,R[148],45,N],[11,R[14],E,R[149],45,N],[11,R[150],E,R[151],45,N],[11,R[112],E,R[152],45,N],[11,R[153],E,R[154],45,N],[11,R[113],E,R[155],45,N],[11,R[114],E,R[156],45,N],[11,R[32],E,R[157],45,N],[11,R[115],E,R[158],45,N],[11,R[116],E,R[159],45,N],[11,"modify",E,R[160],45,N],[11,R[8],E,R[161],45,[[["self"]],[R[9]]]],[11,R[117],E,R[162],45,[[["self"],["u64"]]]],[11,R[118],E,R[163],45,[[["self"]],["u64"]]],[11,R[119],E,R[164],45,[[["self"]]]],[11,R[165],E,R[166],45,[[["self"]],["u64"]]],[11,R[167],E,R[168],45,[[["self"]],["f64"]]],[11,R[120],E,R[169],45,[[["self"],["f64"]]]],[11,R[121],E,R[170],45,[[["self"]],["f64"]]],[11,R[122],E,R[171],45,[[["self"],["f64"]]]],[11,R[123],E,R[172],45,[[["self"],["f64"]]]],[11,R[124],E,R[173],45,[[["self"]]]],[11,R[125],E,R[174],45,[[["self"],["u64"]]]],[11,R[126],E,R[130],45,[[["self"]],["u64"]]],[11,R[127],E,R[175],45,[[["self"]]]],[11,R[128],E,R[176],45,[[["self"],["u64"]]]],[11,R[129],E,R[130],45,[[["self"]],["u64"]]],[11,R[131],E,R[177],45,[[["self"]]]],[11,R[132],E,R[178],45,[[["self"],["u64"]]]],[11,R[133],E,R[130],45,[[["self"]],["u64"]]],[11,R[134],E,R[179],45,[[["self"],["arc",[R[180]]]]]],[11,R[135],E,R[181],45,[[["self"],["arc",[R[182]]]]]],[11,R[136],E,R[183],45,[[["self"],[R[78]]]]],[11,R[137],E,R[184],45,[[["self"]],[R[78]]]],[11,R[138],E,R[185],45,[[["self"]]]],[11,R[139],E,R[140],45,[[["self"],["str"]]]],[11,R[141],E,R[142],45,[[["self"],["str"]]]],[11,R[143],E,R[144],45,[[["self"],[R[82]]]]],[11,"run",R[67],R[145],51,[[["self"]],[R[8],[R[9],"error"]]]],[11,R[146],E,R[147],51,[[["self"]],[R[8],[R[9],"error"]]]],[11,"apply",E,R[148],51,N],[11,R[14],E,R[149],51,N],[11,R[150],E,R[151],51,N],[11,R[112],E,R[152],51,N],[11,R[153],E,R[154],51,N],[11,R[113],E,R[155],51,N],[11,R[114],E,R[156],51,N],[11,R[32],E,R[157],51,N],[11,R[115],E,R[158],51,N],[11,R[116],E,R[159],51,N],[11,"modify",E,R[160],51,N],[11,R[8],E,R[161],51,[[["self"]],[R[9]]]],[11,R[117],E,R[162],51,[[["self"],["u64"]]]],[11,R[118],E,R[163],51,[[["self"]],["u64"]]],[11,R[119],E,R[164],51,[[["self"]]]],[11,R[165],E,R[166],51,[[["self"]],["u64"]]],[11,R[167],E,R[168],51,[[["self"]],["f64"]]],[11,R[120],E,R[169],51,[[["self"],["f64"]]]],[11,R[121],E,R[170],51,[[["self"]],["f64"]]],[11,R[122],E,R[171],51,[[["self"],["f64"]]]],[11,R[123],E,R[172],51,[[["self"],["f64"]]]],[11,R[124],E,R[173],51,[[["self"]]]],[11,R[125],E,R[174],51,[[["self"],["u64"]]]],[11,R[126],E,R[130],51,[[["self"]],["u64"]]],[11,R[127],E,R[175],51,[[["self"]]]],[11,R[128],E,R[176],51,[[["self"],["u64"]]]],[11,R[129],E,R[130],51,[[["self"]],["u64"]]],[11,R[131],E,R[177],51,[[["self"]]]],[11,R[132],E,R[178],51,[[["self"],["u64"]]]],[11,R[133],E,R[130],51,[[["self"]],["u64"]]],[11,R[134],E,R[179],51,[[["self"],["arc",[R[180]]]]]],[11,R[135],E,R[181],51,[[["self"],["arc",[R[182]]]]]],[11,R[136],E,R[183],51,[[["self"],[R[78]]]]],[11,R[137],E,R[184],51,[[["self"]],[R[78]]]],[11,R[138],E,R[185],51,[[["self"]]]],[11,R[139],E,R[140],51,[[["self"],["str"]]]],[11,R[141],E,R[142],51,[[["self"],["str"]]]],[11,R[143],E,R[144],51,[[["self"],[R[82]]]]],[11,"run",R[68],R[145],52,[[["self"]],[R[8],[R[9],"error"]]]],[11,R[146],E,R[147],52,[[["self"]],[R[8],[R[9],"error"]]]],[11,"apply",E,R[148],52,N],[11,R[14],E,R[149],52,N],[11,R[150],E,R[151],52,N],[11,R[112],E,R[152],52,N],[11,R[153],E,R[154],52,N],[11,R[113],E,R[155],52,N],[11,R[114],E,R[156],52,N],[11,R[32],E,R[157],52,N],[11,R[115],E,R[158],52,N],[11,R[116],E,R[159],52,N],[11,"modify",E,R[160],52,N],[11,R[8],E,R[161],52,[[["self"]],[R[9]]]],[11,R[117],E,R[162],52,[[["self"],["u64"]]]],[11,R[118],E,R[163],52,[[["self"]],["u64"]]],[11,R[119],E,R[164],52,[[["self"]]]],[11,R[165],E,R[166],52,[[["self"]],["u64"]]],[11,R[167],E,R[168],52,[[["self"]],["f64"]]],[11,R[120],E,R[169],52,[[["self"],["f64"]]]],[11,R[121],E,R[170],52,[[["self"]],["f64"]]],[11,R[122],E,R[171],52,[[["self"],["f64"]]]],[11,R[123],E,R[172],52,[[["self"],["f64"]]]],[11,R[124],E,R[173],52,[[["self"]]]],[11,R[125],E,R[174],52,[[["self"],["u64"]]]],[11,R[126],E,R[130],52,[[["self"]],["u64"]]],[11,R[127],E,R[175],52,[[["self"]]]],[11,R[128],E,R[176],52,[[["self"],["u64"]]]],[11,R[129],E,R[130],52,[[["self"]],["u64"]]],[11,R[131],E,R[177],52,[[["self"]]]],[11,R[132],E,R[178],52,[[["self"],["u64"]]]],[11,R[133],E,R[130],52,[[["self"]],["u64"]]],[11,R[134],E,R[179],52,[[["self"],["arc",[R[180]]]]]],[11,R[135],E,R[181],52,[[["self"],["arc",[R[182]]]]]],[11,R[136],E,R[183],52,[[["self"],[R[78]]]]],[11,R[137],E,R[184],52,[[["self"]],[R[78]]]],[11,R[138],E,R[185],52,[[["self"]]]],[11,R[139],E,R[140],52,[[["self"],["str"]]]],[11,R[141],E,R[142],52,[[["self"],["str"]]]],[11,R[143],E,R[144],52,[[["self"],[R[82]]]]],[11,"run",R[69],R[145],53,[[["self"]],[R[8],[R[9],"error"]]]],[11,R[146],E,R[147],53,[[["self"]],[R[8],[R[9],"error"]]]],[11,"apply",E,R[148],53,N],[11,R[14],E,R[149],53,N],[11,R[150],E,R[151],53,N],[11,R[112],E,R[152],53,N],[11,R[153],E,R[154],53,N],[11,R[113],E,R[155],53,N],[11,R[114],E,R[156],53,N],[11,R[32],E,R[157],53,N],[11,R[115],E,R[158],53,N],[11,R[116],E,R[159],53,N],[11,"modify",E,R[160],53,N],[11,R[8],E,R[161],53,[[["self"]],[R[9]]]],[11,R[117],E,R[162],53,[[["self"],["u64"]]]],[11,R[118],E,R[163],53,[[["self"]],["u64"]]],[11,R[119],E,R[164],53,[[["self"]]]],[11,R[165],E,R[166],53,[[["self"]],["u64"]]],[11,R[167],E,R[168],53,[[["self"]],["f64"]]],[11,R[120],E,R[169],53,[[["self"],["f64"]]]],[11,R[121],E,R[170],53,[[["self"]],["f64"]]],[11,R[122],E,R[171],53,[[["self"],["f64"]]]],[11,R[123],E,R[172],53,[[["self"],["f64"]]]],[11,R[124],E,R[173],53,[[["self"]]]],[11,R[125],E,R[174],53,[[["self"],["u64"]]]],[11,R[126],E,R[130],53,[[["self"]],["u64"]]],[11,R[127],E,R[175],53,[[["self"]]]],[11,R[128],E,R[176],53,[[["self"],["u64"]]]],[11,R[129],E,R[130],53,[[["self"]],["u64"]]],[11,R[131],E,R[177],53,[[["self"]]]],[11,R[132],E,R[178],53,[[["self"],["u64"]]]],[11,R[133],E,R[130],53,[[["self"]],["u64"]]],[11,R[134],E,R[179],53,[[["self"],["arc",[R[180]]]]]],[11,R[135],E,R[181],53,[[["self"],["arc",[R[182]]]]]],[11,R[136],E,R[183],53,[[["self"],[R[78]]]]],[11,R[137],E,R[184],53,[[["self"]],[R[78]]]],[11,R[138],E,R[185],53,[[["self"]]]],[11,R[139],E,R[140],53,[[["self"],["str"]]]],[11,R[141],E,R[142],53,[[["self"],["str"]]]],[11,R[143],E,R[144],53,[[["self"],[R[82]]]]],[11,"run",R[70],R[145],54,[[["self"]],[R[8],[R[9],"error"]]]],[11,R[146],E,R[147],54,[[["self"]],[R[8],[R[9],"error"]]]],[11,"apply",E,R[148],54,N],[11,R[14],E,R[149],54,N],[11,R[150],E,R[151],54,N],[11,R[112],E,R[152],54,N],[11,R[153],E,R[154],54,N],[11,R[113],E,R[155],54,N],[11,R[114],E,R[156],54,N],[11,R[32],E,R[157],54,N],[11,R[115],E,R[158],54,N],[11,R[116],E,R[159],54,N],[11,"modify",E,R[160],54,N],[11,R[8],E,R[161],54,[[["self"]],[R[9]]]],[11,R[117],E,R[162],54,[[["self"],["u64"]]]],[11,R[118],E,R[163],54,[[["self"]],["u64"]]],[11,R[119],E,R[164],54,[[["self"]]]],[11,R[165],E,R[166],54,[[["self"]],["u64"]]],[11,R[167],E,R[168],54,[[["self"]],["f64"]]],[11,R[120],E,R[169],54,[[["self"],["f64"]]]],[11,R[121],E,R[170],54,[[["self"]],["f64"]]],[11,R[122],E,R[171],54,[[["self"],["f64"]]]],[11,R[123],E,R[172],54,[[["self"],["f64"]]]],[11,R[124],E,R[173],54,[[["self"]]]],[11,R[125],E,R[174],54,[[["self"],["u64"]]]],[11,R[126],E,R[130],54,[[["self"]],["u64"]]],[11,R[127],E,R[175],54,[[["self"]]]],[11,R[128],E,R[176],54,[[["self"],["u64"]]]],[11,R[129],E,R[130],54,[[["self"]],["u64"]]],[11,R[131],E,R[177],54,[[["self"]]]],[11,R[132],E,R[178],54,[[["self"],["u64"]]]],[11,R[133],E,R[130],54,[[["self"]],["u64"]]],[11,R[134],E,R[179],54,[[["self"],["arc",[R[180]]]]]],[11,R[135],E,R[181],54,[[["self"],["arc",[R[182]]]]]],[11,R[136],E,R[183],54,[[["self"],[R[78]]]]],[11,R[137],E,R[184],54,[[["self"]],[R[78]]]],[11,R[138],E,R[185],54,[[["self"]]]],[11,R[139],E,R[140],54,[[["self"],["str"]]]],[11,R[141],E,R[142],54,[[["self"],["str"]]]],[11,R[143],E,R[144],54,[[["self"],[R[82]]]]],[11,"run",R[71],R[145],55,[[["self"]],[R[8],[R[9],"error"]]]],[11,R[146],E,R[147],55,[[["self"]],[R[8],[R[9],"error"]]]],[11,"apply",E,R[148],55,N],[11,R[14],E,R[149],55,N],[11,R[150],E,R[151],55,N],[11,R[112],E,R[152],55,N],[11,R[153],E,R[154],55,N],[11,R[113],E,R[155],55,N],[11,R[114],E,R[156],55,N],[11,R[32],E,R[157],55,N],[11,R[115],E,R[158],55,N],[11,R[116],E,R[159],55,N],[11,"modify",E,R[160],55,N],[11,R[8],E,R[161],55,[[["self"]],[R[9]]]],[11,R[117],E,R[162],55,[[["self"],["u64"]]]],[11,R[118],E,R[163],55,[[["self"]],["u64"]]],[11,R[119],E,R[164],55,[[["self"]]]],[11,R[165],E,R[166],55,[[["self"]],["u64"]]],[11,R[167],E,R[168],55,[[["self"]],["f64"]]],[11,R[120],E,R[169],55,[[["self"],["f64"]]]],[11,R[121],E,R[170],55,[[["self"]],["f64"]]],[11,R[122],E,R[171],55,[[["self"],["f64"]]]],[11,R[123],E,R[172],55,[[["self"],["f64"]]]],[11,R[124],E,R[173],55,[[["self"]]]],[11,R[125],E,R[174],55,[[["self"],["u64"]]]],[11,R[126],E,R[130],55,[[["self"]],["u64"]]],[11,R[127],E,R[175],55,[[["self"]]]],[11,R[128],E,R[176],55,[[["self"],["u64"]]]],[11,R[129],E,R[130],55,[[["self"]],["u64"]]],[11,R[131],E,R[177],55,[[["self"]]]],[11,R[132],E,R[178],55,[[["self"],["u64"]]]],[11,R[133],E,R[130],55,[[["self"]],["u64"]]],[11,R[134],E,R[179],55,[[["self"],["arc",[R[180]]]]]],[11,R[135],E,R[181],55,[[["self"],["arc",[R[182]]]]]],[11,R[136],E,R[183],55,[[["self"],[R[78]]]]],[11,R[137],E,R[184],55,[[["self"]],[R[78]]]],[11,R[138],E,R[185],55,[[["self"]]]],[11,R[139],E,R[140],55,[[["self"],["str"]]]],[11,R[141],E,R[142],55,[[["self"],["str"]]]],[11,R[143],E,R[144],55,[[["self"],[R[82]]]]],[11,"run",R[72],R[145],57,[[["self"]],[R[8],[R[9],"error"]]]],[11,R[146],E,R[147],57,[[["self"]],[R[8],[R[9],"error"]]]],[11,"apply",E,R[148],57,N],[11,R[14],E,R[149],57,N],[11,R[150],E,R[151],57,N],[11,R[112],E,R[152],57,N],[11,R[153],E,R[154],57,N],[11,R[113],E,R[155],57,N],[11,R[114],E,R[156],57,N],[11,R[32],E,R[157],57,N],[11,R[115],E,R[158],57,N],[11,R[116],E,R[159],57,N],[11,"modify",E,R[160],57,N],[11,R[8],E,R[161],57,[[["self"]],[R[9]]]],[11,R[117],E,R[162],57,[[["self"],["u64"]]]],[11,R[118],E,R[163],57,[[["self"]],["u64"]]],[11,R[119],E,R[164],57,[[["self"]]]],[11,R[165],E,R[166],57,[[["self"]],["u64"]]],[11,R[167],E,R[168],57,[[["self"]],["f64"]]],[11,R[120],E,R[169],57,[[["self"],["f64"]]]],[11,R[121],E,R[170],57,[[["self"]],["f64"]]],[11,R[122],E,R[171],57,[[["self"],["f64"]]]],[11,R[123],E,R[172],57,[[["self"],["f64"]]]],[11,R[124],E,R[173],57,[[["self"]]]],[11,R[125],E,R[174],57,[[["self"],["u64"]]]],[11,R[126],E,R[130],57,[[["self"]],["u64"]]],[11,R[127],E,R[175],57,[[["self"]]]],[11,R[128],E,R[176],57,[[["self"],["u64"]]]],[11,R[129],E,R[130],57,[[["self"]],["u64"]]],[11,R[131],E,R[177],57,[[["self"]]]],[11,R[132],E,R[178],57,[[["self"],["u64"]]]],[11,R[133],E,R[130],57,[[["self"]],["u64"]]],[11,R[134],E,R[179],57,[[["self"],["arc",[R[180]]]]]],[11,R[135],E,R[181],57,[[["self"],["arc",[R[182]]]]]],[11,R[136],E,R[183],57,[[["self"],[R[78]]]]],[11,R[137],E,R[184],57,[[["self"]],[R[78]]]],[11,R[138],E,R[185],57,[[["self"]]]],[11,R[139],E,R[140],57,[[["self"],["str"]]]],[11,R[141],E,R[142],57,[[["self"],["str"]]]],[11,R[143],E,R[144],57,[[["self"],[R[82]]]]],[11,"run",R[73],R[145],58,[[["self"]],[R[8],[R[9],"error"]]]],[11,R[146],E,R[147],58,[[["self"]],[R[8],[R[9],"error"]]]],[11,"apply",E,R[148],58,N],[11,R[14],E,R[149],58,N],[11,R[150],E,R[151],58,N],[11,R[112],E,R[152],58,N],[11,R[153],E,R[154],58,N],[11,R[113],E,R[155],58,N],[11,R[114],E,R[156],58,N],[11,R[32],E,R[157],58,N],[11,R[115],E,R[158],58,N],[11,R[116],E,R[159],58,N],[11,"modify",E,R[160],58,N],[11,R[8],E,R[161],58,[[["self"]],[R[9]]]],[11,R[117],E,R[162],58,[[["self"],["u64"]]]],[11,R[118],E,R[163],58,[[["self"]],["u64"]]],[11,R[119],E,R[164],58,[[["self"]]]],[11,R[165],E,R[166],58,[[["self"]],["u64"]]],[11,R[167],E,R[168],58,[[["self"]],["f64"]]],[11,R[120],E,R[169],58,[[["self"],["f64"]]]],[11,R[121],E,R[170],58,[[["self"]],["f64"]]],[11,R[122],E,R[171],58,[[["self"],["f64"]]]],[11,R[123],E,R[172],58,[[["self"],["f64"]]]],[11,R[124],E,R[173],58,[[["self"]]]],[11,R[125],E,R[174],58,[[["self"],["u64"]]]],[11,R[126],E,R[130],58,[[["self"]],["u64"]]],[11,R[127],E,R[175],58,[[["self"]]]],[11,R[128],E,R[176],58,[[["self"],["u64"]]]],[11,R[129],E,R[130],58,[[["self"]],["u64"]]],[11,R[131],E,R[177],58,[[["self"]]]],[11,R[132],E,R[178],58,[[["self"],["u64"]]]],[11,R[133],E,R[130],58,[[["self"]],["u64"]]],[11,R[134],E,R[179],58,[[["self"],["arc",[R[180]]]]]],[11,R[135],E,R[181],58,[[["self"],["arc",[R[182]]]]]],[11,R[136],E,R[183],58,[[["self"],[R[78]]]]],[11,R[137],E,R[184],58,[[["self"]],[R[78]]]],[11,R[138],E,R[185],58,[[["self"]]]],[11,R[139],E,R[140],58,[[["self"],["str"]]]],[11,R[141],E,R[142],58,[[["self"],["str"]]]],[11,R[143],E,R[144],58,[[["self"],[R[82]]]]],[11,"run",R[74],R[145],59,[[["self"]],[R[8],[R[9],"error"]]]],[11,R[146],E,R[147],59,[[["self"]],[R[8],[R[9],"error"]]]],[11,"apply",E,R[148],59,N],[11,R[14],E,R[149],59,N],[11,R[150],E,R[151],59,N],[11,R[112],E,R[152],59,N],[11,R[153],E,R[154],59,N],[11,R[113],E,R[155],59,N],[11,R[114],E,R[156],59,N],[11,R[32],E,R[157],59,N],[11,R[115],E,R[158],59,N],[11,R[116],E,R[159],59,N],[11,"modify",E,R[160],59,N],[11,R[8],E,R[161],59,[[["self"]],[R[9]]]],[11,R[117],E,R[162],59,[[["self"],["u64"]]]],[11,R[118],E,R[163],59,[[["self"]],["u64"]]],[11,R[119],E,R[164],59,[[["self"]]]],[11,R[165],E,R[166],59,[[["self"]],["u64"]]],[11,R[167],E,R[168],59,[[["self"]],["f64"]]],[11,R[120],E,R[169],59,[[["self"],["f64"]]]],[11,R[121],E,R[170],59,[[["self"]],["f64"]]],[11,R[122],E,R[171],59,[[["self"],["f64"]]]],[11,R[123],E,R[172],59,[[["self"],["f64"]]]],[11,R[124],E,R[173],59,[[["self"]]]],[11,R[125],E,R[174],59,[[["self"],["u64"]]]],[11,R[126],E,R[130],59,[[["self"]],["u64"]]],[11,R[127],E,R[175],59,[[["self"]]]],[11,R[128],E,R[176],59,[[["self"],["u64"]]]],[11,R[129],E,R[130],59,[[["self"]],["u64"]]],[11,R[131],E,R[177],59,[[["self"]]]],[11,R[132],E,R[178],59,[[["self"],["u64"]]]],[11,R[133],E,R[130],59,[[["self"]],["u64"]]],[11,R[134],E,R[179],59,[[["self"],["arc",[R[180]]]]]],[11,R[135],E,R[181],59,[[["self"],["arc",[R[182]]]]]],[11,R[136],E,R[183],59,[[["self"],[R[78]]]]],[11,R[137],E,R[184],59,[[["self"]],[R[78]]]],[11,R[138],E,R[185],59,[[["self"]]]],[11,R[139],E,R[140],59,[[["self"],["str"]]]],[11,R[141],E,R[142],59,[[["self"],["str"]]]],[11,R[143],E,R[144],59,[[["self"],[R[82]]]]],[11,"run",R[75],R[145],60,[[["self"]],[R[8],[R[9],"error"]]]],[11,R[146],E,R[147],60,[[["self"]],[R[8],[R[9],"error"]]]],[11,"apply",E,R[148],60,N],[11,R[14],E,R[149],60,N],[11,R[150],E,R[151],60,N],[11,R[112],E,R[152],60,N],[11,R[153],E,R[154],60,N],[11,R[113],E,R[155],60,N],[11,R[114],E,R[156],60,N],[11,R[32],E,R[157],60,N],[11,R[115],E,R[158],60,N],[11,R[116],E,R[159],60,N],[11,"modify",E,R[160],60,N],[11,R[8],E,R[161],60,[[["self"]],[R[9]]]],[11,R[117],E,R[162],60,[[["self"],["u64"]]]],[11,R[118],E,R[163],60,[[["self"]],["u64"]]],[11,R[119],E,R[164],60,[[["self"]]]],[11,R[165],E,R[166],60,[[["self"]],["u64"]]],[11,R[167],E,R[168],60,[[["self"]],["f64"]]],[11,R[120],E,R[169],60,[[["self"],["f64"]]]],[11,R[121],E,R[170],60,[[["self"]],["f64"]]],[11,R[122],E,R[171],60,[[["self"],["f64"]]]],[11,R[123],E,R[172],60,[[["self"],["f64"]]]],[11,R[124],E,R[173],60,[[["self"]]]],[11,R[125],E,R[174],60,[[["self"],["u64"]]]],[11,R[126],E,R[130],60,[[["self"]],["u64"]]],[11,R[127],E,R[175],60,[[["self"]]]],[11,R[128],E,R[176],60,[[["self"],["u64"]]]],[11,R[129],E,R[130],60,[[["self"]],["u64"]]],[11,R[131],E,R[177],60,[[["self"]]]],[11,R[132],E,R[178],60,[[["self"],["u64"]]]],[11,R[133],E,R[130],60,[[["self"]],["u64"]]],[11,R[134],E,R[179],60,[[["self"],["arc",[R[180]]]]]],[11,R[135],E,R[181],60,[[["self"],["arc",[R[182]]]]]],[11,R[136],E,R[183],60,[[["self"],[R[78]]]]],[11,R[137],E,R[184],60,[[["self"]],[R[78]]]],[11,R[138],E,R[185],60,[[["self"]]]],[11,R[139],E,R[140],60,[[["self"],["str"]]]],[11,R[141],E,R[142],60,[[["self"],["str"]]]],[11,R[143],E,R[144],60,[[["self"],[R[82]]]]],[11,"run",R[76],R[145],61,[[["self"]],[R[8],[R[9],"error"]]]],[11,R[146],E,R[147],61,[[["self"]],[R[8],[R[9],"error"]]]],[11,"apply",E,R[148],61,N],[11,R[14],E,R[149],61,N],[11,R[150],E,R[151],61,N],[11,R[112],E,R[152],61,N],[11,R[153],E,R[154],61,N],[11,R[113],E,R[155],61,N],[11,R[114],E,R[156],61,N],[11,R[32],E,R[157],61,N],[11,R[115],E,R[158],61,N],[11,R[116],E,R[159],61,N],[11,"modify",E,R[160],61,N],[11,R[8],E,R[161],61,[[["self"]],[R[9]]]],[11,R[117],E,R[162],61,[[["self"],["u64"]]]],[11,R[118],E,R[163],61,[[["self"]],["u64"]]],[11,R[119],E,R[164],61,[[["self"]]]],[11,R[165],E,R[166],61,[[["self"]],["u64"]]],[11,R[167],E,R[168],61,[[["self"]],["f64"]]],[11,R[120],E,R[169],61,[[["self"],["f64"]]]],[11,R[121],E,R[170],61,[[["self"]],["f64"]]],[11,R[122],E,R[171],61,[[["self"],["f64"]]]],[11,R[123],E,R[172],61,[[["self"],["f64"]]]],[11,R[124],E,R[173],61,[[["self"]]]],[11,R[125],E,R[174],61,[[["self"],["u64"]]]],[11,R[126],E,R[130],61,[[["self"]],["u64"]]],[11,R[127],E,R[175],61,[[["self"]]]],[11,R[128],E,R[176],61,[[["self"],["u64"]]]],[11,R[129],E,R[130],61,[[["self"]],["u64"]]],[11,R[131],E,R[177],61,[[["self"]]]],[11,R[132],E,R[178],61,[[["self"],["u64"]]]],[11,R[133],E,R[130],61,[[["self"]],["u64"]]],[11,R[134],E,R[179],61,[[["self"],["arc",[R[180]]]]]],[11,R[135],E,R[181],61,[[["self"],["arc",[R[182]]]]]],[11,R[136],E,R[183],61,[[["self"],[R[78]]]]],[11,R[137],E,R[184],61,[[["self"]],[R[78]]]],[11,R[138],E,R[185],61,[[["self"]]]],[11,R[139],E,R[140],61,[[["self"],["str"]]]],[11,R[141],E,R[142],61,[[["self"],["str"]]]],[11,R[143],E,R[144],61,[[["self"],[R[82]]]]],[11,"init",R[60],E,37,[[["self"]],[R[8],["error"]]]],[11,R[186],E,R[188],37,[[["self"]],[R[8],[R[187],"error"]]]],[11,"init",R[61],E,38,[[["self"]],[R[8],["error"]]]],[11,R[186],E,R[188],38,[[["self"]],[R[8],[R[187],"error"]]]],[11,R[186],R[63],R[188],43,[[["self"]],[R[8],[R[187],"error"]]]],[11,R[186],R[64],E,44,[[["self"]],[R[8],[R[187],"error"]]]],[11,R[186],R[65],E,45,[[["self"]],[R[8],[R[187],"error"]]]],[11,"init",R[67],E,51,[[["self"]],[R[8],["error"]]]],[11,R[186],E,E,51,[[["self"]],[R[8],[R[187],"error"]]]],[11,"init",R[68],E,52,[[["self"]],[R[8],["error"]]]],[11,R[186],E,E,52,[[["self"]],[R[8],[R[187],"error"]]]],[11,R[186],R[69],E,53,[[["self"]],[R[8],[R[187],"error"]]]],[11,R[186],R[70],E,54,[[["self"]],[R[8],[R[187],"error"]]]],[11,"init",R[71],E,55,[[["self"]],[R[8],["error"]]]],[11,R[186],E,E,55,[[["self"]],[R[8],[R[187],"error"]]]],[11,R[186],R[72],R[188],57,[[["self"]],[R[8],[R[187],"error"]]]],[11,"init",R[73],E,58,[[["self"]],[R[8],["error"]]]],[11,R[186],E,E,58,[[["self"]],[R[8],[R[187],"error"]]]],[11,"init",R[74],E,59,[[["self"]],[R[8],["error"]]]],[11,R[186],E,E,59,[[["self"]],[R[8],[R[187],"error"]]]],[11,"init",R[75],E,60,[[["self"]],[R[8],["error"]]]],[11,R[186],E,E,60,[[["self"]],[R[8],[R[187],"error"]]]],[11,"init",R[76],E,61,[[["self"]],[R[8],["error"]]]],[11,R[186],E,E,61,[[["self"]],[R[8],[R[187],"error"]]]],[11,R[189],R[65],R[197],45,N],[11,R[190],E,R[198],45,N],[11,R[191],E,R[201],45,[[["self"],["f64"]],[R[8],["error"]]]],[11,R[192],E,R[199],45,[[["self"],["f64"]]]],[11,R[193],E,R[200],45,N],[11,R[194],E,R[196],45,[[["self"]],[R[8],["error"]]]],[11,R[195],E,R[196],45,[[["self"]],[R[8],["error"]]]],[11,R[189],R[67],R[197],51,N],[11,R[190],E,R[198],51,N],[11,R[192],E,R[199],51,[[["self"],["f64"]]]],[11,R[193],E,R[200],51,N],[11,R[194],E,R[196],51,[[["self"]],[R[8],["error"]]]],[11,R[195],E,R[196],51,[[["self"]],[R[8],["error"]]]],[11,R[191],E,R[201],51,[[["self"],["f64"]],[R[8],["error"]]]],[11,R[189],R[68],R[197],52,N],[11,R[190],E,R[198],52,N],[11,R[192],E,R[199],52,[[["self"],["f64"]]]],[11,R[193],E,R[200],52,N],[11,R[194],E,R[196],52,[[["self"]],[R[8],["error"]]]],[11,R[195],E,R[196],52,[[["self"]],[R[8],["error"]]]],[11,R[191],E,R[201],52,[[["self"],["f64"]],[R[8],["error"]]]],[11,R[42],R[73],E,58,[[["self"],["f64"]]]],[11,R[203],E,E,58,N],[11,R[202],E,E,58,N],[11,R[42],R[74],E,59,[[["self"],["f64"]]]],[11,R[203],E,E,59,N],[11,R[202],E,E,59,N],[11,R[42],R[75],E,60,[[["self"],["f64"]]]],[11,R[203],E,E,60,N],[11,R[202],E,E,60,N],[11,"update",R[62],E,39,[[["self"],[T],[T],[T]],["f64"]]],[11,"update",E,E,40,[[["self"],[T],[T],[T]],["f64"]]],[11,"update",E,E,41,[[["self"],[T],[T],[T]],["f64"]]],[11,"update",E,E,42,[[["self"],[T],[T],[T]],["f64"]]],[11,"new",R[45],"Create a new empty `PerturbationVector`",1,[[],[R[100]]]],[11,"add",E,"Add an index `x_idx` and the corresponding function…",1,[[["self"],["usize"],["vec",["usize"]]],[R[100]]]],[11,"new",R[4],R[30],62,[[[T],["f64"]],[R[187]]]],[11,"param",E,"Returns the parameter vector",62,[[["self"]],[T]]],[11,"cost",E,"Returns the cost function value",62,[[["self"]],["f64"]]],[11,"add_kv",E,"Adds an `ArgminKV`",62,[[["self"],[R[13]]],[R[187]]]],[11,"get_kv",E,"Returns an `ArgminKV`",62,[[["self"]],[R[98],[R[13]]]]],[11,"new",E,E,63,[[],[R[87]]]],[11,R[204],E,"Returns `true` if a solver terminated and `false` otherwise",12,[[["self"]],["bool"]]],[11,"text",E,"Returns a texual representation of what happened",12,[[["self"]],["str"]]],[11,"new",E,E,64,[[],[R[88]]]],[11,"push",E,E,64,[[["self"],["arc",[R[182]]]],[R[88]]]],[11,"new",R[54],E,14,[[["l"],["e"],["p"]],[R[19]]]],[11,"new",R[4],R[30],20,[[],[R[13]]]],[11,"push",E,"Push a key-value pair to the `kv` vector.",20,[[["self"],["str"],[T]],[R[13]]]],[11,"merge",E,"Merge another `kv` into `self.kv`",20,[[["self"],[R[13]]],[R[13]]]],[11,"new",E,R[30],22,[[[T],["f64"],["u64"],[R[78]]],[R[9]]]],[11,"new",R[56],E,65,[[["str"],["str"]],[R[79]]]],[11,"set_serializer",E,E,65,[[["self"],[R[83]]],[R[79]]]],[11,"set_mode",E,E,65,[[["self"],[R[81]]],[R[79]]]],[11,"new",R[4],E,66,[[],[R[89]]]],[11,"new",E,R[30],67,N],[11,"kv_for_logs",E,"Return the KV for the initial logging",67,[[["self"]],[R[13]]]],[11,"kv_for_iter",E,"Return the KV for logging of the iterations",67,[[["self"]],[R[13]]]],[11,"reset",E,"Reset `self` to its initial state.",67,N],[11,"apply",E,"Apply the operator to `param`",67,N],[11,R[14],E,"Compute the gradient at `param`",67,N],[11,R[150],E,"Compute the hessian at `param`",67,N],[11,"modify",E,"Modify a `param` with the `modify` method of `operator`.",67,N],[11,R[114],E,"Set the current parameter vector",67,N],[11,R[112],E,"Return the current parameter vector",67,N],[11,R[116],E,"Set the new best parameter vector",67,N],[11,"best_param",E,"Return the current best parameter vector",67,N],[11,R[120],E,"Set the current cost function value",67,[[["self"],["f64"]],[R[92]]]],[11,R[167],E,"Return the current cost function value",67,[[["self"]],["f64"]]],[11,R[122],E,"Set the cost function value of the current best parameter…",67,[[["self"],["f64"]],[R[92]]]],[11,R[121],E,"Return the cost function value of the current best…",67,[[["self"]],["f64"]]],[11,R[32],E,"Set the current gradient",67,N],[11,R[153],E,"Return the current gradient",67,N],[11,R[115],E,"Set the current hessian",67,N],[11,R[113],E,"Return the current hessian",67,N],[11,R[123],E,"Set the target cost function value",67,[[["self"],["f64"]],[R[92]]]],[11,"target_cost",E,"Return the target cost function value",67,[[["self"]],["f64"]]],[11,R[119],E,"Increment the number of iterations.",67,[[["self"]],[R[92]]]],[11,R[165],E,"Return the current number of iterations",67,[[["self"]],["u64"]]],[11,R[124],E,R[205],67,[[["self"]],[R[92]]]],[11,R[125],E,R[206],67,[[["self"],["u64"]],[R[92]]]],[11,R[126],E,R[207],67,[[["self"]],["u64"]]],[11,R[127],E,R[208],67,[[["self"]],[R[92]]]],[11,R[128],E,R[209],67,[[["self"],["u64"]],[R[92]]]],[11,R[129],E,R[11],67,[[["self"]],["u64"]]],[11,R[131],E,R[210],67,[[["self"]],[R[92]]]],[11,R[132],E,R[211],67,[[["self"],["u64"]],[R[92]]]],[11,R[133],E,R[11],67,[[["self"]],["u64"]]],[11,R[117],E,"Set the maximum number of iterations.",67,[[["self"],["u64"]],[R[92]]]],[11,R[118],E,"Return the maximum number of iterations",67,[[["self"]],["u64"]]],[11,R[136],E,"Set the `TerminationReason`",67,[[["self"],[R[78]]],[R[92]]]],[11,R[212],E,"Return the `TerminationReason`",67,[[["self"]],[R[78]]]],[11,"termination_reason_text",E,"Return the textual representation of the `TerminationReason`",67,[[["self"]],["str"]]],[11,R[204],E,"Return whether the algorithm has terminated or not",67,[[["self"]],["bool"]]],[11,R[8],E,"Return the result.",67,[[["self"]],[R[9]]]],[11,"set_total_time",E,"Set the total time needed by the solver",67,[[["self"],["duration"]],[R[92]]]],[11,"total_time",E,"Return the total time",67,[[["self"]],["duration"]]],[11,R[134],E,"Add a logger to the list of loggers",67,[[["self"],["arc",[R[180]]]],[R[92]]]],[11,R[135],E,"Add a writer to the list of writers",67,[[["self"],["arc",[R[182]]]],[R[92]]]],[11,R[94],E,"Log a `kv`",67,[[["self"],[R[13]]],[R[8],["error"]]]],[11,R[93],E,"Log a message and a `kv`",67,[[["self"],["str"],[R[13]]],[R[8],["error"]]]],[11,"write",E,"Write",67,N],[11,R[139],E,R[140],67,N],[11,R[141],E,R[142],67,N],[11,R[143],E,E,67,N],[11,"store_checkpoint",E,E,67,[[["self"],[T]],[R[8],["error"]]]],[11,"new",E,R[30],68,[[],[R[86]]]],[11,"push",E,"Push another `ArgminLog` to the `logger` field",68,[[["self"],["arc",[R[180]]]],[R[86]]]],[11,"new",E,E,69,[[["str"],[R[82]]],[R[8],[R[84],"error"]]]],[11,"set_dir",E,E,69,N],[11,"dir",E,E,69,[[["self"]],[R[58]]]],[11,"set_name",E,E,69,N],[11,"name",E,E,69,[[["self"]],[R[58]]]],[11,"set_mode",E,E,69,N],[11,"store",E,E,69,[[["self"],[T],[R[58]]],[R[8],["error"]]]],[11,"store_cond",E,E,69,[[["self"],[T],["u64"]],[R[8],["error"]]]],[11,"term",E,"Log to the terminal in a blocking way",70,[[],["arc",[R[213]]]]],[11,"term_noblock",E,"Log to the terminal in a non-blocking way (in case of…",70,[[],["arc",[R[213]]]]],[11,"file",E,"Log JSON to a file in a blocking way",70,[[["str"]],[R[8],["arc","error"]]]],[11,"file_noblock",E,"Log JSON to a file in a non-blocking way (in case of…",70,[[["str"]],[R[8],["arc","error"]]]],[11,"from_boxed_compat",E,"Creates an `Error` from `Box<std::error::Error>`.",71,[[["box",["error"]]],["error"]]],[11,R[59],E,"Return a reference to the underlying failure that this…",71,[[["self"]],["fail"]]],[11,"name",E,"Returns the name of the underlying fail.",71,[[["self"]],[R[98],["str"]]]],[11,"cause",E,"Returns a reference to the underlying cause of this…",71,[[["self"]],["fail"]]],[11,R[77],E,"Gets a reference to the `Backtrace` for this `Error`.",71,[[["self"]],[R[77]]]],[11,"context",E,"Provides context for this `Error`.",71,[[["self"],["d"]],["context"]]],[11,"compat",E,"Wraps `Error` in a compatibility type.",71,[[["self"]],["compat",["error"]]]],[11,"downcast",E,R[214],71,[[["self"]],[R[8],["error"]]]],[11,"find_root_cause",E,"Returns the \"root cause\" of this error - the last value in…",71,[[["self"]],["fail"]]],[11,"iter_causes",E,"Returns a iterator over the causes of this error with the…",71,[[["self"]],["causes"]]],[11,"iter_chain",E,"Returns a iterator over all fails up the chain from the…",71,[[["self"]],["causes"]]],[11,"downcast_ref",E,R[214],71,[[["self"]],[R[98]]]],[11,"downcast_mut",E,R[214],71,[[["self"]],[R[98]]]],[11,"root_cause",E,"Deprecated alias to `find_root_cause`.",71,[[["self"]],["fail"]]],[11,"causes",E,"Deprecated alias to `iter_causes`.",71,[[["self"]],["causes"]]]],"p":[[8,R[215]],[3,R[216]],[8,R[217]],[8,R[218]],[8,R[219]],[8,R[220]],[8,"ArgminOp"],[8,R[221]],[8,R[222]],[8,R[223]],[8,R[224]],[8,R[225]],[4,R[226]],[8,R[227]],[3,R[228]],[8,R[229]],[8,R[230]],[8,R[231]],[8,R[232]],[8,R[233]],[3,"ArgminKV"],[8,R[234]],[3,R[235]],[8,R[236]],[4,R[237]],[8,R[238]],[4,R[239]],[8,R[240]],[8,R[241]],[4,"Error"],[4,R[242]],[4,R[243]],[8,R[244]],[8,R[245]],[8,R[246]],[8,R[247]],[4,R[248]],[3,R[249]],[3,R[250]],[3,R[251]],[3,R[252]],[3,R[253]],[3,R[254]],[3,R[255]],[3,R[256]],[3,R[257]],[8,R[258]],[3,R[259]],[3,R[260]],[3,R[261]],[3,R[262]],[3,R[263]],[3,R[264]],[3,"NewtonCG"],[3,"Newton"],[3,"BFGS"],[4,R[265]],[3,R[266]],[3,R[267]],[3,"Dogleg"],[3,"Steihaug"],[3,R[268]],[3,R[269]],[3,R[270]],[3,R[271]],[3,R[272]],[3,R[273]],[3,R[274]],[3,R[275]],[3,R[276]],[3,R[277]],[3,"Error"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);