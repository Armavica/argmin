var N=null,E="",T="t",U="u",searchIndex={};
var r_0a="set_alpha_min_max",r_0b="Log general info",r_0c="str",r_0d="update",r_0e="SteepestDescent",r_1a="set alpha limits",r_1b="This should be used to log iteration data only (because…",r_1c="set_checkpoint_name",r_1d="param",r_1e="Landweber",r_2a="argmin::solver::newton",r_2b="hash",r_2c="Set checkpoint name",r_2d="terminated",r_2e="BacktrackingLineSearch",r_3a="set_gamma",r_3b="default",r_3c="set_checkpoint_mode",r_3d="Increment the cost function evaluation count",r_3e="LineSearchCondition",r_4a="set gamma",r_4b="minimalnooperator",r_4c="Set checkpoint mode",r_4d="Increaese the cost function evaluation count by a given…",r_4e="ArmijoCondition",r_5a="argmin::solver::trustregion",r_5b="nooperator",r_5c="Run the optimization algorithm",r_5d="Return the cost function evaluation count",r_5e="WolfeCondition",r_6a="set_epsilon",r_6b="serialize",r_6c="Run the essential parts of the optimization algorithm (no…",r_6d="Increment the gradient evaluation count",r_6e="StrongWolfeCondition",r_7a="set_radius",r_7b="__s",r_7c="Applies the cost function or operator to a parameter…",r_7d="Increase the gradient evaluation count by a given value",r_7e="GoldsteinCondition",r_8a="set_eta",r_8b="partial_cmp",r_8c="Computes the gradient at parameter `param`. Returns an…",r_8d="Increment the hessian evaluation count",r_8e="HagerZhangLineSearch",r_9a="Rastrigin test function",r_9b="option",r_9c="Computes the Hessian at parameter `param`. Returns an…",r_9d="Increase the hessian evaluation count by a given value",r_9e="MoreThuenteLineSearch",r_Aa="Aborted",r_Ab="argmin::solver::linesearch::hagerzhang",r_Ac="set_max_iters",r_Ad="Attaches a writer which implements `ArgminWrite` to the…",r_Ae="Decomposition",r_Ba="decomposition",r_Bb="argmin::solver::linesearch::morethuente",r_Bc="max_iters",r_Bd="argminwrite",r_Be="ModCholeskySE99",r_Ca="arraybase",r_Cb="argmin::solver::newton::newton_cg",r_Cc="increment_iter",r_Cd="Sets the `TerminationReason`",r_Ce="ArgminZero",r_Da="usize",r_Db="argmin::solver::newton::newton_method",r_Dc="cur_iter",r_Dd="Checks whether any of the conditions to terminate is true…",r_De="ArgminAdd",r_Ea="Return zero(s)",r_Eb="argmin::solver::quasinewton::bfgs",r_Ec="cur_cost",r_Ed="Resets the `base` field to it's initial conditions. This…",r_Ee="ArgminKV",r_Fa="Add a `T` to `self`",r_Fb="argmin::solver::simulatedannealing",r_Fc="set_cur_cost",r_Fd="arc",r_Fe="ArgminWeightedDot",r_Ga="Dot/scalar product of `T` and `self`",r_Gb="argmin::solver::trustregion::cauchypoint",r_Gc="best_cost",r_Gd="run",r_Ge="ArgminResult",r_Ha="Subtract a `T` scaled by an `U` from `self`",r_Hb="argmin::solver::trustregion::dogleg",r_Hc="set_best_cost",r_Hd="next_iter",r_He="ArgminDot",r_Ia="Never",r_Ib="argmin::solver::trustregion::steihaug",r_Ic="set_target_cost",r_Id="argminiterdata",r_Ie="WriteToFileSerializer",r_Ja="Always",r_Jb="argmin::solver::trustregion::trustregion_method",r_Jc="increment_cost_func_count",r_Jd="init",r_Je="ArgminScaledSub",r_Ka="Every",r_Kb="formatter",r_Kc="increase_cost_func_count",r_Kd="Perform one iteration of SA algorithm",r_Ke="CheckpointMode",r_La="argmin::prelude::ArgminError",r_Lb="ordering",r_Lc="cost_func_count",r_Ld="set_search_direction",r_Le="ArgminTranspose",r_Ma="text",r_Mb="cmp",r_Mc="increment_grad_func_count",r_Md="set_initial_parameter",r_Me="ArgminEye",r_Na="Compute the l2-norm (`U`) of `self`",r_Nb="terminationreason",r_Nc="increase_grad_func_count",r_Nd="set_initial_alpha",r_Ne="WriterMode",r_Oa="Subtract a `T` from `self`",r_Ob="checkpointmode",r_Oc="grad_func_count",r_Od="set_initial_cost",r_Oe="SignalType",r_Pa="Error",r_Pb="deserialize",r_Pc="Returns the current value of the counter for the…",r_Pd="set_initial_gradient",r_Pe="ArgminError",r_Qa="(Pointwise) Divide a `T` by `self`",r_Qb="writetofileserializer",r_Qc="increment_hessian_func_count",r_Qd="calc_initial_cost",r_Qe="ArgminNorm",r_Ra="argmin::solver::conjugategradient",r_Rb="writetofile",r_Rc="increase_hessian_func_count",r_Rd="calc_initial_gradient",r_Re="ArgminSub",r_Sa="u64",r_Sb="__d",r_Sc="hessian_func_count",r_Sd="Calculate initial cost function value",r_Se="ArgminDiv",r_Ta="Constructor",r_Tb="argmincheckpoint",r_Tc="add_logger",r_Td="Set search direction",r_Te="ArgminInv",r_Ua="new",r_Ub="writermode",r_Uc="add_writer",r_Ud="Set initial parameter",r_Ue="ConjugateGradient",r_Va="argmin::solver",r_Vb="fmt",r_Vc="set_termination_reason",r_Vd="Set initial cost function value",r_Ve="NonlinearConjugateGradient",r_Wa="set_cur_grad",r_Wb="write",r_Wc="terminate",r_Wd="Set initial gradient",r_We="FletcherReeves",r_Xa="f64",r_Xb="bool",r_Xc="base_reset",r_Xd="Set initial alpha value",r_Xe="PolakRibiere",r_Ya="argmin::solver::linesearch",r_Yb="log_info",r_Yc="set_checkpoint_dir",r_Yd="set_grad",r_Ye="PolakRibierePlus",r_Za="set current gradient value",r_Zb="log_iter",r_Zc="Set checkpoint directory",r_Zd="set_hessian",r_Ze="HestenesStiefel",r_aa="argmin",r_ab="Ackley test function",r_ac="backtrace",r_ad="Returns the current parameter vector.",r_ae="termination_reason",r_af="NewtonCG",r_ba="self",r_bb="argmin::prelude::finitediff",r_bc="clone",r_bd="Returns the most recently stored gradient.",r_be="duration",r_bf="Newton",r_ca="Calculation of the Jacobian J(x) of a vector function `fs`…",r_cb="try_from",r_cc="argminbase",r_cd="Returns the most recently stored Hessian.",r_ce="push",r_cf="SATempFunc",r_da="Calculation of the product of the Jacobian J(x) of a…",r_db="borrow",r_dc="argminlogger",r_dd="Sets the current parameter to `param`.",r_de="set_mode",r_df="SimulatedAnnealing",r_ea="Calculation of the product of the Hessian H(x) of a…",r_eb="type_id",r_ec="argminwriter",r_ed="Sets the current gradient to `grad`.",r_ee="argminsloglogger",r_ef="CauchyPoint",r_fa="argmin::prelude",r_fb="typeid",r_fc="cause",r_fd="Sets the current Hessian to `hessian`.",r_fe="name",r_ff="Dogleg",r_ga="return current gradient",r_gb="borrow_mut",r_gc="perturbationvector",r_gd="Sets the best parameter vector to `param`.",r_ge="context",r_gf="Steihaug",r_ha="set current gradient",r_hb="try_into",r_hc="requires_cur_grad",r_hd="Modify the parameter vector by calling the `modify` method…",r_he="compat",r_hf="TrustRegion",r_ia="set current parameter vector",r_ib="from",r_ic="eval",r_id="Returns the result of the optimization.",r_ie="causes",r_if="ArgminIterData",r_ja="result",r_jb="into",r_jc="fletcherreeves",r_jd="Sets the maximum number of iterations to `iters`.",r_je="Attempts to downcast this `Error` to a particular `Fail`…",r_jf="ArgminWriter",r_ka="error",r_kb="to_owned",r_kc="polakribiere",r_kd="Returns the maximum number of iterations.",r_ke="PerturbationVector",r_kf="WriteToFile",r_la="argminresult",r_lb="clone_into",r_lc="polakribiereplus",r_ld="Increments the iteration counter.",r_le="FiniteDiff",r_lf="ArgminBase",r_ma="Get current cost function value",r_mb="argmin::prelude::modcholesky",r_mc="hestenesstiefel",r_md="Returns the current number of iterations.",r_me="ArgminSolver",r_mf="NoOperator",r_na="Return the gradient evaluation count",r_nb="to_string",r_nc="conjugategradient",r_nd="Returns the most recently stored cost function value.",r_ne="ArgminIter",r_nf="ArgminLogger",r_oa="Hessian",r_ob="string",r_oc="armijocondition",r_od="Sets the current cost function value to `cost`",r_oe="ArgminLog",r_of="MinimalNoOperator",r_pa="argminkv",r_pb="argmin::prelude::file",r_pc="wolfecondition",r_pd="Returns the best cost function value obtained so far.",r_pe="ArgminWrite",r_pf="ArgminCheckpoint",r_qa="Param",r_qb="argmin::prelude::ctrlc",r_qc="strongwolfecondition",r_qd="Sets the best cost function value.",r_qe="ArgminOp",r_qf="ArgminSlogLogger",r_ra="Output",r_rb="as_fail",r_rc="goldsteincondition",r_rd="Sets the target cost function value to `cost`. The…",r_re="ArgminLineSearch",r_sa="apply",r_sb="fail",r_sc="satempfunc",r_sd="Increments the counter for the computations of the cost…",r_se="ArgminTrustRegion",r_ta="gradient",r_tb="argmin::solver::conjugategradient::cg",r_tc="run_fast",r_td="Increases the counter for the computations of the cost…",r_te="ArgminNLCGBetaUpdate",r_ua="hessian",r_ub="argmin::solver::conjugategradient::nonlinear_cg",r_uc="cur_param",r_ud="Increments the counter for the computations of the…",r_ue="ArgminMul",r_va="modify",r_vb="argmin::solver::conjugategradient::beta",r_vc="cur_grad",r_vd="Increases the counter for the computations of the gradient…",r_ve="ArgminScaledAdd",r_wa="Set the initial step length",r_wb="argmin::solver::gradientdescent::steepestdescent",r_wc="cur_hessian",r_wd="Increments the counter for the computations of the Hessian…",r_we="TerminationReason",r_xa="Set the gradient at the starting point",r_xb="argmin::solver::landweber",r_xc="set_cur_param",r_xd="Increases the counter for the computations of the Hessian…",r_xe="GershgorinCircles",r_ya="(Pointwise) Multiply a `T` with `self`",r_yb="argmin::solver::linesearch::backtracking",r_yc="set_cur_hessian",r_yd="Attaches a logger which implements `ArgminLog` to the…",r_ye="ModCholeskySE90",r_za="Add a `T` scaled by an `U` to `self`",r_zb="argmin::solver::linesearch::condition",r_zc="set_best_param",r_zd="argminlog",r_ze="ModCholeskyGMW81";

searchIndex[r_aa]={"doc":"A pure Rust optimization framework","i":[[0,"prelude",r_aa,"Definition of all relevant traits and types # Re-export of…",N,N],[0,"macros",r_fa,"Macros # Macros",N,N],[0,"finitediff",E,"Finite Differentiation",N,N],[3,r_ke,r_bb,"Perturbation Vector for the accelerated computation of the…",N,N],[12,"x_idx",E,"x indices",0,N],[12,"r_idx",E,"correspoding function indices",0,N],[6,"PerturbationVectors",E,"A collection of `PerturbationVector`s",N,N],[8,r_le,E,E,N,N],[16,"Jacobian",E,E,1,N],[16,r_oa,E,E,1,N],[16,"OperatorOutput",E,E,1,N],[10,"forward_diff",E,"Forward difference calculated as",1,[[[r_ba],["fn"]],[r_ba]]],[10,"central_diff",E,"Central difference calculated as",1,[[[r_ba],["fn"]],[r_ba]]],[10,"forward_jacobian",E,r_ca,1,N],[10,"central_jacobian",E,r_ca,1,N],[10,"forward_jacobian_vec_prod",E,r_da,1,[[[r_ba],["fn"],[r_ba]],[r_ba]]],[10,"central_jacobian_vec_prod",E,r_da,1,[[[r_ba],["fn"],[r_ba]],[r_ba]]],[10,"forward_jacobian_pert",E,E,1,N],[10,"central_jacobian_pert",E,E,1,N],[10,"forward_hessian",E,"Calculation of the Hessian using forward differences",1,N],[10,"central_hessian",E,"Calculation of the Hessian using central differences",1,N],[10,"forward_hessian_vec_prod",E,r_ea,1,[[[r_ba],["fn"],[r_ba]],[r_ba]]],[10,"central_hessian_vec_prod",E,r_ea,1,[[[r_ba],["fn"],[r_ba]],[r_ba]]],[10,"forward_hessian_nograd",E,"Calculation of the Hessian using forward differences…",1,N],[10,"forward_hessian_nograd_sparse",E,"Calculation of a sparse Hessian using forward differences…",1,N],[8,r_me,r_fa,"Defines the interface to a solver. Usually, there is no…",N,N],[11,"from_checkpoint",E,"Load solver from checkpoint",2,[[["p"]],[r_ja,[r_ka]]]],[10,r_sa,E,"apply cost function or operator to a parameter vector",2,N],[10,r_ta,E,"compute the gradient for a parameter vector",2,N],[10,r_ua,E,"compute the hessian for a parameter vector",2,N],[10,r_va,E,"modify the parameter vector",2,N],[10,r_uc,E,"return current parameter vector",2,N],[10,r_vc,E,r_ga,2,N],[10,r_wc,E,r_ga,2,N],[10,r_xc,E,r_ia,2,N],[10,r_Wa,E,r_ha,2,N],[10,r_yc,E,r_ha,2,N],[10,r_zc,E,r_ia,2,N],[10,r_Gd,E,"Execute the optimization algorithm.",2,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[10,r_tc,E,"Execute the optimization algorithm without Ctrl-C…",2,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[10,r_ja,E,"Returns the best solution found during optimization.",2,[[[r_ba]],[r_la]]],[10,r_Vc,E,"Set termination reason (doesn't terminate yet! -- this is…",2,N],[10,r_Wc,E,"Evaluate all stopping criterions and return the…",2,[[[r_ba]],[r_Nb]]],[10,r_Ac,E,"Set max number of iterations.",2,N],[10,r_Bc,E,"Get max number of iterations.",2,[[[r_ba]],[r_Sa]]],[10,r_Dc,E,"Get current iteration number.",2,[[[r_ba]],[r_Sa]]],[10,r_Cc,E,"Increment the iteration number by one",2,N],[10,r_Ec,E,r_ma,2,[[[r_ba]],[r_Xa]]],[10,r_Fc,E,r_ma,2,N],[10,r_Gc,E,"Get best cost function value",2,[[[r_ba]],[r_Xa]]],[10,r_Hc,E,"set best cost value",2,N],[10,r_Ic,E,"Set the target cost function value which is used as a…",2,N],[10,r_Tc,E,"Add a logger to the array of loggers",2,N],[10,r_Uc,E,"Add a writer to the array of writers",2,N],[10,r_Xc,E,"Reset the base of the algorithm to its initial state",2,N],[10,r_Jc,E,r_3d,2,N],[10,r_Kc,E,r_4d,2,N],[10,r_Lc,E,r_5d,2,[[[r_ba]],[r_Sa]]],[10,r_Mc,E,r_6d,2,N],[10,r_Nc,E,r_7d,2,N],[10,r_Oc,E,r_na,2,[[[r_ba]],[r_Sa]]],[10,r_Qc,E,r_8d,2,N],[10,r_Rc,E,r_9d,2,N],[10,r_Sc,E,r_na,2,[[[r_ba]],[r_Sa]]],[10,r_Yc,E,r_Zc,2,N],[10,r_1c,E,r_2c,2,N],[10,r_3c,E,r_4c,2,N],[8,r_ne,E,"Main part of every solver: `next_iter` computes one…",N,N],[16,r_qa,E,"Parameter vectors",3,N],[16,r_ra,E,"Output of the operator",3,N],[16,r_oa,E,r_oa,3,N],[10,r_Hd,E,"Computes one iteration of the algorithm.",3,[[[r_ba]],[r_ja,[r_Id,r_ka]]]],[11,r_Jd,E,"Initializes the algorithm",3,[[[r_ba]],[r_ja,[r_ka]]]],[8,r_oe,E,"Defince the interface every logger needs to expose",N,N],[10,r_Yb,E,"Logs general information (a message `msg` and/or key-value…",4,[[[r_ba],[r_0c],[r_pa]],[r_ja,[r_ka]]]],[10,r_Zb,E,"Logs information from iterations. Only accepts key-value…",4,[[[r_ba],[r_pa]],[r_ja,[r_ka]]]],[8,r_pe,E,"Every writer (which is something that writes parameter…",N,N],[16,r_qa,E,E,5,N],[10,r_Wb,E,"Writes the parameter vector somewhere",5,N],[3,r_if,E,"The datastructure which is returned by the `next_iter`…",N,N],[8,r_qe,E,"This trait needs to be implemented for every operator/cost…",N,N],[16,r_qa,E,"Type of the parameter vector",6,N],[16,r_ra,E,"Output of the operator. Most solvers expect `f64`.",6,N],[16,r_oa,E,"Type of Hessian",6,N],[11,r_sa,E,"Applies the operator/cost function to parameters",6,N],[11,r_ta,E,"Computes the gradient at the given parameters",6,N],[11,r_ua,E,"Computes the hessian at the given parameters",6,N],[11,r_va,E,"Modifies a parameter vector. Comes with a variable that…",6,N],[8,r_re,E,"Defines a common interface to line search methods.…",N,N],[10,r_Md,E,"Set the initial parameter (starting point)",7,N],[10,r_Ld,E,"Set the search direction",7,N],[10,r_Nd,E,r_wa,7,[[[r_ba],[r_Xa]],[r_ja,[r_ka]]]],[10,r_Od,E,"Set the cost function value at the starting point as…",7,N],[10,r_Pd,E,"Set the gradient at the starting point as opposed to…",7,N],[10,r_Qd,E,"calculate the initial cost function value using an…",7,[[[r_ba]],[r_ja,[r_ka]]]],[10,r_Rd,E,"calculate the initial gradient using an operator as…",7,[[[r_ba]],[r_ja,[r_ka]]]],[8,r_se,E,"Defines a common interface to methods which calculate…",N,N],[10,r_7a,E,r_wa,8,N],[10,r_Yd,E,r_xa,8,N],[10,r_Zd,E,r_xa,8,N],[8,r_te,E,"Every method for the update of beta needs to implement…",N,N],[10,r_0d,E,"Update beta Parameter 1: \\nabla f_k Parameter 2: \\nabla…",9,[[[r_ba],[T],[T],[T]],[r_Xa]]],[8,r_ue,E,r_ya,N,N],[10,"mul",E,r_ya,10,[[[r_ba],[T]],[U]]],[8,r_ve,E,r_za,N,N],[10,"scaled_add",E,r_za,11,[[[r_ba],[U],[T]],["v"]]],[4,r_we,E,"Indicates why the optimization algorithm stopped",N,N],[13,"NotTerminated",E,"In case it has not terminated yet",12,N],[13,"MaxItersReached",E,"Maximum number of iterations reached",12,N],[13,"TargetCostReached",E,"Target cost function value reached",12,N],[13,"TargetPrecisionReached",E,"Target precision reached",12,N],[13,"AcceptedStallIterExceeded",E,"Acceped stall iter exceeded",12,N],[13,"BestStallIterExceeded",E,"Best stall iter exceeded",12,N],[13,"LineSearchConditionMet",E,"Condition for Line search met",12,N],[13,r_Aa,E,r_Aa,12,N],[3,r_jf,E,E,N,N],[0,"modcholesky",E,"Modified Cholesky decompositions Modified Cholesky…",N,N],[8,r_xe,r_mb,"Gershgorin circles",N,N],[10,"gershgorin_circles",E,"Computes the Gershgorin Circles of a matrix",13,[[[r_ba]],["vec"]]],[8,r_ye,E,"Schnabel & Eskow algorithm (1990)",N,N],[11,"mod_cholesky_se90",E,"Computes the modified Cholesky decomposition with the SE90…",14,[[[r_ba]],[r_Ba]]],[8,r_ze,E,"Gill, Murray and Wright (1981)",N,N],[11,"mod_cholesky_gmw81",E,"Computes the modified Cholesky decomposition with the…",15,[[[r_ba]],[r_Ba]]],[3,r_Ae,E,E,N,N],[12,"l",E,E,16,N],[12,"e",E,E,16,N],[12,"p",E,E,16,N],[8,r_Be,E,"Schnabel & Eskow algorithm (1999)",N,N],[11,"mod_cholesky_se99",E,"Computes the modified Cholesky decomposition with the SE99…",17,[[[r_ba]],[r_Ba]]],[0,"utils",E,"Utility functions",N,N],[5,"eigenvalues_2x2","argmin::prelude::modcholesky::utils","Computes the Eigenvalues of a 2x2 matrix",N,N],[5,"swap_columns",E,"Swaps columns `idx1` and `idx2` of matrix `mat`",N,N],[5,"swap_rows",E,"Swaps rows `idx1` and `idx2` of matrix `mat`",N,N],[5,"index_of_largest",E,"Returns the index of the largest element in a 1D array",N,[[[r_Ca]],[r_Da]]],[5,"index_of_largest_abs",E,"Returns the index of the element with the largest absolute…",N,[[[r_Ca]],[r_Da]]],[5,"index_to_permutation_mat",E,"Returns the permutation matrix for a vector of permuted…",N,N],[5,"diag_mat_from_arr",E,"Builds a diagonal matrix from a 1D slice",N,N],[5,"random_householder",E,"Returns a random Householder matrix of dimension `dim` and…",N,[[[r_Da],["u8"]],[r_Ca,["ownedrepr","dim"]]]],[5,"random_diagonal",E,"Returns a random diagonal matrix with Eigenvalues…",N,N],[8,r_Ce,r_fa,"Return param vector of all zeros (for now, this is a hack.…",N,N],[10,"zero_like",E,r_Ea,18,[[[r_ba]],[r_ba]]],[10,"zero",E,r_Ea,18,[[],[r_ba]]],[8,r_De,E,r_Fa,N,N],[10,"add",E,r_Fa,19,[[[r_ba],[T]],[U]]],[3,r_Ee,E,"A simple key-value storage",N,N],[12,"kv",E,"The actual key value storage",20,N],[8,r_Fe,E,"Dot/scalar product of `T` and `self` weighted by W (p^TWv)",N,N],[10,"weighted_dot",E,r_Ga,21,[[[r_ba],["v"],[T]],[U]]],[3,r_Ge,E,"Return struct for all solvers.",N,N],[12,r_1d,E,"Final parameter vector",22,N],[12,"cost",E,"Final cost value",22,N],[12,"iters",E,"Number of iterations",22,N],[12,r_2d,E,"Indicated whether it terminated or not",22,N],[12,r_ae,E,"Reason of termination",22,N],[8,r_He,E,r_Ga,N,N],[10,"dot",E,r_Ga,23,[[[r_ba],[T]],[U]]],[14,"check_param",E,"Release an `T` from an `Option<T>` if it is not `None`. If…",N,N],[0,"file",E,"Output parameter vectors to file",N,N],[4,r_Ie,r_pb,E,N,N],[13,"Bincode",E,E,24,N],[13,"JSON",E,E,24,N],[3,r_kf,E,E,N,N],[3,r_lf,r_fa,"Storage for data needed by most solvers",N,N],[3,r_mf,E,E,N,N],[8,r_Je,E,r_Ha,N,N],[10,"scaled_sub",E,r_Ha,25,[[[r_ba],[U],[T]],["v"]]],[4,r_Ke,E,E,N,N],[13,r_Ia,E,E,26,N],[13,r_Ka,E,E,26,N],[13,r_Ja,E,E,26,N],[5,"load_checkpoint",E,E,N,[[["p"]],[r_ja,[r_ka]]]],[3,r_nf,E,"Container for `ArgminLog`gers",N,N],[8,r_Le,E,E,N,N],[10,T,E,E,27,[[[r_ba]],[r_ba]]],[8,r_Me,E,E,N,N],[10,"eye",E,E,28,[[[r_Da]],[r_ba]]],[10,"eye_like",E,E,28,[[[r_ba]],[r_ba]]],[4,r_Ne,E,E,N,N],[13,r_Ia,E,E,29,N],[13,r_Ja,E,E,29,N],[13,r_Ka,E,E,29,N],[13,"NewBest",E,E,29,N],[14,"make_kv",E,"Creates an `ArgminKV` at compile time in order to avoid…",N,N],[3,r_of,E,E,N,N],[5,"set_handler",r_qb,"Register signal handler for Ctrl-C.",N,[[["f"]],[r_ja,[r_ka]]]],[4,r_Pa,E,"Ctrl-C error.",N,N],[13,"NoSuchSignal",E,"Signal could not be found from the system.",30,N],[13,"MultipleHandlers",E,"Ctrl-C signal handler already registered.",30,N],[13,"System",E,"Unexpected system error.",30,N],[4,r_Oe,E,"A cross-platform way to represent Ctrl-C or program…",N,N],[13,"Ctrlc",E,"Ctrl-C",31,N],[13,"Termination",E,"Program termination Maps to `SIGTERM` on *nix,…",31,N],[13,"Other",E,"Other signal/event using platform-specific data",31,N],[6,"Signal",E,"Platform specific signal type",N,N],[3,r_pf,r_fa,E,N,N],[3,r_qf,E,"A logger based on `slog`",N,N],[4,r_Pe,E,E,N,N],[13,"InvalidParameter",E,"Indicates and invalid parameter",32,N],[12,r_Ma,r_La,E,32,N],[13,"NotImplemented",r_fa,"Indicates that a function is not implemented",32,N],[12,r_Ma,r_La,E,32,N],[13,"NotInitialized",r_fa,"Indicates that a function is not initialized",32,N],[12,r_Ma,r_La,E,32,N],[13,"ConditionViolated",r_fa,"Indicates that a condition is violated",32,N],[12,r_Ma,r_La,E,32,N],[13,"CheckpointNotFound",r_fa,"Checkpoint was not found",32,N],[12,r_Ma,r_La,E,32,N],[13,"ImpossibleError",r_fa,"Indicates an impossible error",32,N],[12,r_Ma,r_La,E,32,N],[8,r_Qe,r_fa,r_Na,N,N],[10,"norm",E,r_Na,33,[[[r_ba]],[U]]],[8,r_Re,E,r_Oa,N,N],[10,"sub",E,r_Oa,34,[[[r_ba],[T]],[U]]],[3,r_Pa,E,"The `Error` type, which can contain any failure.",N,N],[8,r_Se,E,r_Qa,N,N],[10,"div",E,r_Qa,35,[[[r_ba],[T]],[U]]],[8,r_Te,E,"Compute the inverse (`T`) of `self`",N,N],[10,"inv",E,E,36,[[[r_ba]],[r_ja,[r_ka]]]],[0,"solver",r_aa,"Solvers",N,N],[0,r_nc,r_Va,"Conjugate Gradient methods",N,N],[0,"cg",r_Ra,"Conjugate gradient method # References:",N,N],[3,r_Ue,r_tb,"The conjugate gradient method is a solver for systems of…",N,N],[11,r_Ua,E,r_Ta,37,N],[11,"p",E,"Return the current search direction (This is needed by…",37,N],[11,"p_prev",E,"Return the previous search direction (This is needed by…",37,N],[11,"residual",E,"Return the current residual (This is needed by NewtonCG…",37,N],[0,"nonlinear_cg",r_Ra,"Nonlinear conjugate gradient method Important TODO: Find…",N,N],[3,r_Ve,r_ub,"The nonlinear conjugate gradient is a generalization of…",N,N],[11,r_Ua,E,"Constructor (Polak Ribiere Conjugate Gradient (PR-CG))",38,N],[11,"set_restart_iters",E,"Specifiy the number of iterations after which a restart…",38,[[[r_ba],[r_Sa]],[r_ba]]],[11,"set_restart_orthogonality",E,"Set the value for the orthogonality measure. Setting this…",38,[[[r_ba],[r_Xa]],[r_ba]]],[0,"beta",r_Ra,"Beta update methods for nonlinear CG # Beta update methods",N,N],[3,r_We,r_vb,"Fletcher and Reeves (FR) method TODO: Reference",N,N],[3,r_Xe,E,"Polak and Ribiere (PR) method TODO: Reference",N,N],[3,r_Ye,E,"Polak and Ribiere Plus (PR+) method TODO: Reference",N,N],[3,r_Ze,E,"Hestenes and Stiefel (HS) method TODO: Reference",N,N],[11,r_Ua,E,r_Ta,39,[[],[r_ba]]],[11,r_Ua,E,r_Ta,40,[[],[r_ba]]],[11,r_Ua,E,r_Ta,41,[[],[r_ba]]],[11,r_Ua,E,r_Ta,42,[[],[r_ba]]],[0,"gradientdescent",r_Va,"Gradient descent methods",N,N],[0,"steepestdescent","argmin::solver::gradientdescent","Steepest Descent method",N,N],[3,r_0e,r_wb,"Steepest descent iteratively takes steps in the direction…",N,N],[11,r_Ua,E,r_Ta,43,N],[0,"landweber",r_Va,"Landweber iteration",N,N],[3,r_1e,r_xb,"The Landweber iteration is a solver for ill-posed linear…",N,N],[11,r_Ua,E,r_Ta,44,N],[0,"linesearch",r_Va,"Line search methods",N,N],[0,"backtracking",r_Ya,"Backtracking line search algorithm * Backtracking line…",N,N],[3,r_2e,r_yb,"The Backtracking line search is a simple method to find a…",N,N],[11,r_Ua,E,r_Ta,45,[[["o"],["l"]],[r_ba]]],[11,r_Wa,E,r_Za,45,N],[11,"set_rho",E,"Set contraction factor rho",45,[[[r_ba],[r_Xa]],[r_ja,[r_ka]]]],[0,"condition",r_Ya,"Acceptance conditions # References:",N,N],[3,r_4e,r_zb,"Armijo Condition",N,N],[3,r_5e,E,"Wolfe Condition",N,N],[3,r_6e,E,"Strong Wolfe conditions",N,N],[3,r_7e,E,"Goldstein conditions",N,N],[8,r_3e,E,"Needs to be implemented by everything that wants to be a…",N,N],[10,r_ic,E,"Evaluate the condition",46,[[[r_ba],[r_Xa],[T],[r_Xa],[T],[T],[r_Xa]],[r_Xb]]],[10,r_hc,E,"Indicates whether this condition requires the computation…",46,[[[r_ba]],[r_Xb]]],[11,r_Ua,E,r_Ta,47,[[[r_Xa]],[r_ja,[r_ka]]]],[11,r_Ua,E,r_Ta,48,[[[r_Xa],[r_Xa]],[r_ja,[r_ka]]]],[11,r_Ua,E,r_Ta,49,[[[r_Xa],[r_Xa]],[r_ja,[r_ka]]]],[11,r_Ua,E,r_Ta,50,[[[r_Xa]],[r_ja,[r_ka]]]],[0,"hagerzhang",r_Ya,"Hager-Zhang line search algorithm * Hager-Zhang line search",N,N],[3,r_8e,r_Ab,"The Hager-Zhang line search is a method to find a step…",N,N],[11,r_Ua,E,r_Ta,51,[[["o"]],[r_ba]]],[11,r_Wa,E,r_Za,51,N],[11,"set_delta",E,"set delta",51,[[[r_ba],[r_Xa]],[r_ja,[r_ka]]]],[11,"set_sigma",E,"set sigma",51,[[[r_ba],[r_Xa]],[r_ja,[r_ka]]]],[11,r_6a,E,"set epsilon",51,[[[r_ba],[r_Xa]],[r_ja,[r_ka]]]],[11,"set_theta",E,"set theta",51,[[[r_ba],[r_Xa]],[r_ja,[r_ka]]]],[11,r_3a,E,r_4a,51,[[[r_ba],[r_Xa]],[r_ja,[r_ka]]]],[11,r_8a,E,"set eta",51,[[[r_ba],[r_Xa]],[r_ja,[r_ka]]]],[11,r_0a,E,r_1a,51,[[[r_ba],[r_Xa],[r_Xa]],[r_ja,[r_ka]]]],[0,"morethuente",r_Ya,"More-Thuente line search algorithm * More-Thuente line…",N,N],[3,r_9e,r_Bb,"The More-Thuente line search is a method to find a step…",N,N],[11,r_Ua,E,r_Ta,52,[[["o"]],[r_ba]]],[11,r_Wa,E,r_Za,52,N],[11,"set_c",E,"Set c1 and c2 where 0 < c1 < c2 < 1.",52,[[[r_ba],[r_Xa],[r_Xa]],[r_ja,[r_ka]]]],[11,r_0a,E,r_1a,52,[[[r_ba],[r_Xa],[r_Xa]],[r_ja,[r_ka]]]],[0,"newton",r_Va,"Newton Methods",N,N],[0,"newton_cg",r_2a,"Newton-CG method TODO: Stop when search direction is close…",N,N],[3,r_af,r_Cb,"The Newton-CG method (also called truncated Newton method)…",N,N],[11,r_Ua,E,r_Ta,53,N],[11,"set_curvature_threshold",E,"Set curvature threshold",53,[[[r_ba],[r_Xa]],[r_ba]]],[0,"newton_method",r_2a,"Newton's method # References:",N,N],[3,r_bf,r_Db,"Newton's method iteratively finds the stationary points of…",N,N],[11,r_Ua,E,r_Ta,54,N],[11,r_3a,E,r_4a,54,[[[r_ba],[r_Xa]],[r_ja,[r_ka]]]],[0,"quasinewton",r_Va,"Quasi-Newton methods",N,N],[0,"bfgs","argmin::solver::quasinewton","References:",N,N],[3,"BFGS",r_Eb,"BFGS method",N,N],[11,r_Ua,E,r_Ta,55,N],[0,"simulatedannealing",r_Va,E,N,N],[3,r_df,r_Fb,"Simulated Annealing",N,N],[4,r_cf,E,"Temperature functions for Simulated Annealing.",N,N],[13,"TemperatureFast",E,"`t_i = t_init / i`",56,N],[13,"Boltzmann",E,"`t_i = t_init / ln(i)`",56,N],[13,"Exponential",E,"`t_i = t_init * x^i`",56,N],[11,r_Ua,E,r_Ta,57,N],[11,"temp_func",E,"Set temperature function to one of the options in…",57,[[[r_ba],[r_sc]],[r_ba]]],[11,"stall_accepted",E,"The optimization stops after there has been no accepted…",57,[[[r_ba],[r_Sa]],[r_ba]]],[11,"stall_best",E,"The optimization stops after there has been no new best…",57,[[[r_ba],[r_Sa]],[r_ba]]],[11,"reannealing_fixed",E,"Start reannealing after `iter` iterations",57,[[[r_ba],[r_Sa]],[r_ba]]],[11,"reannealing_accepted",E,"Start reannealing after no accepted solution has been…",57,[[[r_ba],[r_Sa]],[r_ba]]],[11,"reannealing_best",E,"Start reannealing after no new best solution has been…",57,[[[r_ba],[r_Sa]],[r_ba]]],[0,"trustregion",r_Va,"Argmin Trust region methods",N,N],[5,"reduction_ratio",r_5a,"Computes reduction ratio",N,[[[r_Xa],[r_Xa],[r_Xa],[r_Xa]],[r_Xa]]],[0,"cauchypoint",E,"Cauchy Point # References:",N,N],[3,r_ef,r_Gb,"The Cauchy point is the minimum of the quadratic…",N,N],[11,r_Ua,E,r_Ta,58,[[["o"]],[r_ba]]],[0,"dogleg",r_5a,"Dogleg method # References:",N,N],[3,r_ff,r_Hb,"The Dogleg method computes the intersection of the trust…",N,N],[11,r_Ua,E,r_Ta,59,[[["o"]],[r_ba]]],[0,"steihaug",r_5a,"Steihaug method # References:",N,N],[3,r_gf,r_Ib,"The Steihaug method is a conjugate gradients based…",N,N],[11,r_Ua,E,r_Ta,60,[[["o"]],[r_ba]]],[11,r_6a,E,"Set epsilon",60,[[[r_ba],[r_Xa]],[r_ja,[r_ka]]]],[0,"trustregion_method",r_5a,"Trust region solver # References:",N,N],[3,r_hf,r_Jb,"The trust region method approximates the cost function…",N,N],[11,r_Ua,E,r_Ta,61,N],[11,r_7a,E,"set radius",61,[[[r_ba],[r_Xa]],[r_ba]]],[11,"set_max_radius",E,"Set maximum radius",61,[[[r_ba],[r_Xa]],[r_ba]]],[11,r_8a,E,"Set eta",61,[[[r_ba],[r_Xa]],[r_ja,[r_ka]]]],[0,"testfunctions",r_aa,"Testfunctions # Testfunctions",N,N],[5,"mccorminck","argmin::testfunctions","McCorminck test function",N,N],[5,"himmelblau",E,"Himmelblau test function",N,N],[5,"sphere_derivative",E,"Derivative of sphere test function",N,N],[5,"schaffer_n2",E,"Schaffer test function No. 2",N,N],[5,"holder_table",E,"Holder table test function",N,N],[5,"rosenbrock_2d_hessian",E,"Hessian of 2D Rosenbrock function",N,N],[5,"rastrigin",E,r_9a,N,N],[5,"rosenbrock_2d",E,"2D Rosenbrock test function",N,N],[5,"ackley",E,r_ab,N,N],[5,"zero",E,"Zero test function",N,N],[5,"goldsteinprice",E,"Goldstein-Price test function",N,N],[5,"matyas",E,"Matyas test function",N,N],[5,"schaffer_n4",E,"Schaffer test function No. 4",N,N],[5,"booth",E,"Booth test function",N,N],[5,"eggholder",E,"Eggholder test function",N,N],[5,"picheny",E,"Picheny test function",N,N],[5,"rastrigin_a",E,r_9a,N,N],[5,"levy_n13",E,"Levy test function No. 13",N,N],[5,"cross_in_tray",E,"Cross-in-tray test function",N,N],[5,"sphere",E,"Sphere test function",N,N],[5,"zero_derivative",E,"Derivative of zero test function",N,N],[5,"threehumpcamel",E,"Three-hump camel test function",N,N],[5,"styblinski_tang",E,"Styblinski-Tang test function",N,N],[5,"levy",E,"Levy test function",N,N],[5,"rosenbrock_2d_derivative",E,"Derivative of 2D Rosenbrock function",N,N],[5,"easom",E,"Easom test function",N,N],[5,"rosenbrock",E,"Multidimensional Rosenbrock test function",N,N],[5,"ackley_param",E,r_ab,N,N],[5,"bukin_n6",E,"Bukin test function No. 6",N,N],[5,"beale",E,"Beale test function",N,N],[11,r_ib,r_bb,E,0,[[[T]],[T]]],[11,r_jb,E,E,0,[[[r_ba]],[U]]],[11,r_kb,E,E,0,[[[r_ba]],[T]]],[11,r_lb,E,E,0,N],[11,r_cb,E,E,0,[[[U]],[r_ja]]],[11,r_db,E,E,0,[[[r_ba]],[T]]],[11,r_eb,E,E,0,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,0,[[[r_ba]],[T]]],[11,r_hb,E,E,0,[[[r_ba]],[r_ja]]],[11,r_ib,r_fa,E,62,[[[T]],[T]]],[11,r_jb,E,E,62,[[[r_ba]],[U]]],[11,r_cb,E,E,62,[[[U]],[r_ja]]],[11,r_db,E,E,62,[[[r_ba]],[T]]],[11,r_eb,E,E,62,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,62,[[[r_ba]],[T]]],[11,r_hb,E,E,62,[[[r_ba]],[r_ja]]],[11,r_nb,E,E,12,[[[r_ba]],[r_ob]]],[11,r_ib,E,E,12,[[[T]],[T]]],[11,r_jb,E,E,12,[[[r_ba]],[U]]],[11,r_kb,E,E,12,[[[r_ba]],[T]]],[11,r_lb,E,E,12,N],[11,r_cb,E,E,12,[[[U]],[r_ja]]],[11,r_db,E,E,12,[[[r_ba]],[T]]],[11,r_eb,E,E,12,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,12,[[[r_ba]],[T]]],[11,r_hb,E,E,12,[[[r_ba]],[r_ja]]],[11,r_ib,E,E,63,[[[T]],[T]]],[11,r_jb,E,E,63,[[[r_ba]],[U]]],[11,r_kb,E,E,63,[[[r_ba]],[T]]],[11,r_lb,E,E,63,N],[11,r_cb,E,E,63,[[[U]],[r_ja]]],[11,r_db,E,E,63,[[[r_ba]],[T]]],[11,r_eb,E,E,63,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,63,[[[r_ba]],[T]]],[11,r_hb,E,E,63,[[[r_ba]],[r_ja]]],[11,r_ib,r_mb,E,16,[[[T]],[T]]],[11,r_jb,E,E,16,[[[r_ba]],[U]]],[11,r_cb,E,E,16,[[[U]],[r_ja]]],[11,r_db,E,E,16,[[[r_ba]],[T]]],[11,r_eb,E,E,16,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,16,[[[r_ba]],[T]]],[11,r_hb,E,E,16,[[[r_ba]],[r_ja]]],[11,r_nb,r_fa,E,20,[[[r_ba]],[r_ob]]],[11,r_ib,E,E,20,[[[T]],[T]]],[11,r_jb,E,E,20,[[[r_ba]],[U]]],[11,r_kb,E,E,20,[[[r_ba]],[T]]],[11,r_lb,E,E,20,N],[11,r_cb,E,E,20,[[[U]],[r_ja]]],[11,r_db,E,E,20,[[[r_ba]],[T]]],[11,r_eb,E,E,20,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,20,[[[r_ba]],[T]]],[11,r_hb,E,E,20,[[[r_ba]],[r_ja]]],[11,r_nb,E,E,22,[[[r_ba]],[r_ob]]],[11,r_ib,E,E,22,[[[T]],[T]]],[11,r_jb,E,E,22,[[[r_ba]],[U]]],[11,r_kb,E,E,22,[[[r_ba]],[T]]],[11,r_lb,E,E,22,N],[11,r_cb,E,E,22,[[[U]],[r_ja]]],[11,r_db,E,E,22,[[[r_ba]],[T]]],[11,r_eb,E,E,22,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,22,[[[r_ba]],[T]]],[11,r_hb,E,E,22,[[[r_ba]],[r_ja]]],[11,r_ib,r_pb,E,24,[[[T]],[T]]],[11,r_jb,E,E,24,[[[r_ba]],[U]]],[11,r_kb,E,E,24,[[[r_ba]],[T]]],[11,r_lb,E,E,24,N],[11,r_cb,E,E,24,[[[U]],[r_ja]]],[11,r_db,E,E,24,[[[r_ba]],[T]]],[11,r_eb,E,E,24,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,24,[[[r_ba]],[T]]],[11,r_hb,E,E,24,[[[r_ba]],[r_ja]]],[11,r_ib,E,E,64,[[[T]],[T]]],[11,r_jb,E,E,64,[[[r_ba]],[U]]],[11,r_kb,E,E,64,[[[r_ba]],[T]]],[11,r_lb,E,E,64,N],[11,r_cb,E,E,64,[[[U]],[r_ja]]],[11,r_db,E,E,64,[[[r_ba]],[T]]],[11,r_eb,E,E,64,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,64,[[[r_ba]],[T]]],[11,r_hb,E,E,64,[[[r_ba]],[r_ja]]],[11,r_ib,r_fa,E,65,[[[T]],[T]]],[11,r_jb,E,E,65,[[[r_ba]],[U]]],[11,r_kb,E,E,65,[[[r_ba]],[T]]],[11,r_lb,E,E,65,N],[11,r_cb,E,E,65,[[[U]],[r_ja]]],[11,r_db,E,E,65,[[[r_ba]],[T]]],[11,r_eb,E,E,65,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,65,[[[r_ba]],[T]]],[11,r_hb,E,E,65,[[[r_ba]],[r_ja]]],[11,r_ib,E,E,66,[[[T]],[T]]],[11,r_jb,E,E,66,[[[r_ba]],[U]]],[11,r_kb,E,E,66,[[[r_ba]],[T]]],[11,r_lb,E,E,66,N],[11,r_cb,E,E,66,[[[U]],[r_ja]]],[11,r_db,E,E,66,[[[r_ba]],[T]]],[11,r_eb,E,E,66,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,66,[[[r_ba]],[T]]],[11,r_hb,E,E,66,[[[r_ba]],[r_ja]]],[11,r_ib,E,E,26,[[[T]],[T]]],[11,r_jb,E,E,26,[[[r_ba]],[U]]],[11,r_kb,E,E,26,[[[r_ba]],[T]]],[11,r_lb,E,E,26,N],[11,r_cb,E,E,26,[[[U]],[r_ja]]],[11,r_db,E,E,26,[[[r_ba]],[T]]],[11,r_eb,E,E,26,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,26,[[[r_ba]],[T]]],[11,r_hb,E,E,26,[[[r_ba]],[r_ja]]],[11,r_ib,E,E,67,[[[T]],[T]]],[11,r_jb,E,E,67,[[[r_ba]],[U]]],[11,r_kb,E,E,67,[[[r_ba]],[T]]],[11,r_lb,E,E,67,N],[11,r_cb,E,E,67,[[[U]],[r_ja]]],[11,r_db,E,E,67,[[[r_ba]],[T]]],[11,r_eb,E,E,67,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,67,[[[r_ba]],[T]]],[11,r_hb,E,E,67,[[[r_ba]],[r_ja]]],[11,r_ib,E,E,29,[[[T]],[T]]],[11,r_jb,E,E,29,[[[r_ba]],[U]]],[11,r_kb,E,E,29,[[[r_ba]],[T]]],[11,r_lb,E,E,29,N],[11,r_cb,E,E,29,[[[U]],[r_ja]]],[11,r_db,E,E,29,[[[r_ba]],[T]]],[11,r_eb,E,E,29,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,29,[[[r_ba]],[T]]],[11,r_hb,E,E,29,[[[r_ba]],[r_ja]]],[11,r_ib,E,E,68,[[[T]],[T]]],[11,r_jb,E,E,68,[[[r_ba]],[U]]],[11,r_kb,E,E,68,[[[r_ba]],[T]]],[11,r_lb,E,E,68,N],[11,r_cb,E,E,68,[[[U]],[r_ja]]],[11,r_db,E,E,68,[[[r_ba]],[T]]],[11,r_eb,E,E,68,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,68,[[[r_ba]],[T]]],[11,r_hb,E,E,68,[[[r_ba]],[r_ja]]],[11,r_nb,r_qb,E,30,[[[r_ba]],[r_ob]]],[11,r_ib,E,E,30,[[[T]],[T]]],[11,r_jb,E,E,30,[[[r_ba]],[U]]],[11,r_cb,E,E,30,[[[U]],[r_ja]]],[11,r_db,E,E,30,[[[r_ba]],[T]]],[11,r_eb,E,E,30,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,30,[[[r_ba]],[T]]],[11,r_hb,E,E,30,[[[r_ba]],[r_ja]]],[11,r_rb,E,E,30,[[[r_ba]],[r_sb]]],[11,r_ib,E,E,31,[[[T]],[T]]],[11,r_jb,E,E,31,[[[r_ba]],[U]]],[11,r_cb,E,E,31,[[[U]],[r_ja]]],[11,r_db,E,E,31,[[[r_ba]],[T]]],[11,r_eb,E,E,31,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,31,[[[r_ba]],[T]]],[11,r_hb,E,E,31,[[[r_ba]],[r_ja]]],[11,r_ib,r_fa,E,69,[[[T]],[T]]],[11,r_jb,E,E,69,[[[r_ba]],[U]]],[11,r_kb,E,E,69,[[[r_ba]],[T]]],[11,r_lb,E,E,69,N],[11,r_cb,E,E,69,[[[U]],[r_ja]]],[11,r_db,E,E,69,[[[r_ba]],[T]]],[11,r_eb,E,E,69,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,69,[[[r_ba]],[T]]],[11,r_hb,E,E,69,[[[r_ba]],[r_ja]]],[11,r_ib,E,E,70,[[[T]],[T]]],[11,r_jb,E,E,70,[[[r_ba]],[U]]],[11,r_kb,E,E,70,[[[r_ba]],[T]]],[11,r_lb,E,E,70,N],[11,r_cb,E,E,70,[[[U]],[r_ja]]],[11,r_db,E,E,70,[[[r_ba]],[T]]],[11,r_eb,E,E,70,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,70,[[[r_ba]],[T]]],[11,r_hb,E,E,70,[[[r_ba]],[r_ja]]],[11,r_nb,E,E,32,[[[r_ba]],[r_ob]]],[11,r_ib,E,E,32,[[[T]],[T]]],[11,r_jb,E,E,32,[[[r_ba]],[U]]],[11,r_cb,E,E,32,[[[U]],[r_ja]]],[11,r_db,E,E,32,[[[r_ba]],[T]]],[11,r_eb,E,E,32,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,32,[[[r_ba]],[T]]],[11,r_hb,E,E,32,[[[r_ba]],[r_ja]]],[11,r_rb,E,E,32,[[[r_ba]],[r_sb]]],[11,r_nb,E,E,71,[[[r_ba]],[r_ob]]],[11,r_ib,E,E,71,[[[T]],[T]]],[11,r_jb,E,E,71,[[[r_ba]],[U]]],[11,r_cb,E,E,71,[[[U]],[r_ja]]],[11,r_db,E,E,71,[[[r_ba]],[T]]],[11,r_eb,E,E,71,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,71,[[[r_ba]],[T]]],[11,r_hb,E,E,71,[[[r_ba]],[r_ja]]],[11,r_rb,E,E,71,[[[r_ba]],[r_sb]]],[11,r_ib,r_tb,E,37,[[[T]],[T]]],[11,r_jb,E,E,37,[[[r_ba]],[U]]],[11,r_kb,E,E,37,[[[r_ba]],[T]]],[11,r_lb,E,E,37,N],[11,r_cb,E,E,37,[[[U]],[r_ja]]],[11,r_db,E,E,37,[[[r_ba]],[T]]],[11,r_eb,E,E,37,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,37,[[[r_ba]],[T]]],[11,r_hb,E,E,37,[[[r_ba]],[r_ja]]],[11,r_ib,r_ub,E,38,[[[T]],[T]]],[11,r_jb,E,E,38,[[[r_ba]],[U]]],[11,r_cb,E,E,38,[[[U]],[r_ja]]],[11,r_db,E,E,38,[[[r_ba]],[T]]],[11,r_eb,E,E,38,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,38,[[[r_ba]],[T]]],[11,r_hb,E,E,38,[[[r_ba]],[r_ja]]],[11,r_ib,r_vb,E,39,[[[T]],[T]]],[11,r_jb,E,E,39,[[[r_ba]],[U]]],[11,r_kb,E,E,39,[[[r_ba]],[T]]],[11,r_lb,E,E,39,N],[11,r_cb,E,E,39,[[[U]],[r_ja]]],[11,r_db,E,E,39,[[[r_ba]],[T]]],[11,r_eb,E,E,39,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,39,[[[r_ba]],[T]]],[11,r_hb,E,E,39,[[[r_ba]],[r_ja]]],[11,r_ib,E,E,40,[[[T]],[T]]],[11,r_jb,E,E,40,[[[r_ba]],[U]]],[11,r_kb,E,E,40,[[[r_ba]],[T]]],[11,r_lb,E,E,40,N],[11,r_cb,E,E,40,[[[U]],[r_ja]]],[11,r_db,E,E,40,[[[r_ba]],[T]]],[11,r_eb,E,E,40,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,40,[[[r_ba]],[T]]],[11,r_hb,E,E,40,[[[r_ba]],[r_ja]]],[11,r_ib,E,E,41,[[[T]],[T]]],[11,r_jb,E,E,41,[[[r_ba]],[U]]],[11,r_kb,E,E,41,[[[r_ba]],[T]]],[11,r_lb,E,E,41,N],[11,r_cb,E,E,41,[[[U]],[r_ja]]],[11,r_db,E,E,41,[[[r_ba]],[T]]],[11,r_eb,E,E,41,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,41,[[[r_ba]],[T]]],[11,r_hb,E,E,41,[[[r_ba]],[r_ja]]],[11,r_ib,E,E,42,[[[T]],[T]]],[11,r_jb,E,E,42,[[[r_ba]],[U]]],[11,r_kb,E,E,42,[[[r_ba]],[T]]],[11,r_lb,E,E,42,N],[11,r_cb,E,E,42,[[[U]],[r_ja]]],[11,r_db,E,E,42,[[[r_ba]],[T]]],[11,r_eb,E,E,42,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,42,[[[r_ba]],[T]]],[11,r_hb,E,E,42,[[[r_ba]],[r_ja]]],[11,r_ib,r_wb,E,43,[[[T]],[T]]],[11,r_jb,E,E,43,[[[r_ba]],[U]]],[11,r_cb,E,E,43,[[[U]],[r_ja]]],[11,r_db,E,E,43,[[[r_ba]],[T]]],[11,r_eb,E,E,43,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,43,[[[r_ba]],[T]]],[11,r_hb,E,E,43,[[[r_ba]],[r_ja]]],[11,r_ib,r_xb,E,44,[[[T]],[T]]],[11,r_jb,E,E,44,[[[r_ba]],[U]]],[11,r_cb,E,E,44,[[[U]],[r_ja]]],[11,r_db,E,E,44,[[[r_ba]],[T]]],[11,r_eb,E,E,44,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,44,[[[r_ba]],[T]]],[11,r_hb,E,E,44,[[[r_ba]],[r_ja]]],[11,r_ib,r_yb,E,45,[[[T]],[T]]],[11,r_jb,E,E,45,[[[r_ba]],[U]]],[11,r_cb,E,E,45,[[[U]],[r_ja]]],[11,r_db,E,E,45,[[[r_ba]],[T]]],[11,r_eb,E,E,45,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,45,[[[r_ba]],[T]]],[11,r_hb,E,E,45,[[[r_ba]],[r_ja]]],[11,r_ib,r_zb,E,47,[[[T]],[T]]],[11,r_jb,E,E,47,[[[r_ba]],[U]]],[11,r_kb,E,E,47,[[[r_ba]],[T]]],[11,r_lb,E,E,47,N],[11,r_cb,E,E,47,[[[U]],[r_ja]]],[11,r_db,E,E,47,[[[r_ba]],[T]]],[11,r_eb,E,E,47,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,47,[[[r_ba]],[T]]],[11,r_hb,E,E,47,[[[r_ba]],[r_ja]]],[11,r_ib,E,E,48,[[[T]],[T]]],[11,r_jb,E,E,48,[[[r_ba]],[U]]],[11,r_kb,E,E,48,[[[r_ba]],[T]]],[11,r_lb,E,E,48,N],[11,r_cb,E,E,48,[[[U]],[r_ja]]],[11,r_db,E,E,48,[[[r_ba]],[T]]],[11,r_eb,E,E,48,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,48,[[[r_ba]],[T]]],[11,r_hb,E,E,48,[[[r_ba]],[r_ja]]],[11,r_ib,E,E,49,[[[T]],[T]]],[11,r_jb,E,E,49,[[[r_ba]],[U]]],[11,r_kb,E,E,49,[[[r_ba]],[T]]],[11,r_lb,E,E,49,N],[11,r_cb,E,E,49,[[[U]],[r_ja]]],[11,r_db,E,E,49,[[[r_ba]],[T]]],[11,r_eb,E,E,49,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,49,[[[r_ba]],[T]]],[11,r_hb,E,E,49,[[[r_ba]],[r_ja]]],[11,r_ib,E,E,50,[[[T]],[T]]],[11,r_jb,E,E,50,[[[r_ba]],[U]]],[11,r_kb,E,E,50,[[[r_ba]],[T]]],[11,r_lb,E,E,50,N],[11,r_cb,E,E,50,[[[U]],[r_ja]]],[11,r_db,E,E,50,[[[r_ba]],[T]]],[11,r_eb,E,E,50,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,50,[[[r_ba]],[T]]],[11,r_hb,E,E,50,[[[r_ba]],[r_ja]]],[11,r_ib,r_Ab,E,51,[[[T]],[T]]],[11,r_jb,E,E,51,[[[r_ba]],[U]]],[11,r_cb,E,E,51,[[[U]],[r_ja]]],[11,r_db,E,E,51,[[[r_ba]],[T]]],[11,r_eb,E,E,51,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,51,[[[r_ba]],[T]]],[11,r_hb,E,E,51,[[[r_ba]],[r_ja]]],[11,r_ib,r_Bb,E,52,[[[T]],[T]]],[11,r_jb,E,E,52,[[[r_ba]],[U]]],[11,r_cb,E,E,52,[[[U]],[r_ja]]],[11,r_db,E,E,52,[[[r_ba]],[T]]],[11,r_eb,E,E,52,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,52,[[[r_ba]],[T]]],[11,r_hb,E,E,52,[[[r_ba]],[r_ja]]],[11,r_ib,r_Cb,E,53,[[[T]],[T]]],[11,r_jb,E,E,53,[[[r_ba]],[U]]],[11,r_cb,E,E,53,[[[U]],[r_ja]]],[11,r_db,E,E,53,[[[r_ba]],[T]]],[11,r_eb,E,E,53,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,53,[[[r_ba]],[T]]],[11,r_hb,E,E,53,[[[r_ba]],[r_ja]]],[11,r_ib,r_Db,E,54,[[[T]],[T]]],[11,r_jb,E,E,54,[[[r_ba]],[U]]],[11,r_cb,E,E,54,[[[U]],[r_ja]]],[11,r_db,E,E,54,[[[r_ba]],[T]]],[11,r_eb,E,E,54,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,54,[[[r_ba]],[T]]],[11,r_hb,E,E,54,[[[r_ba]],[r_ja]]],[11,r_ib,r_Eb,E,55,[[[T]],[T]]],[11,r_jb,E,E,55,[[[r_ba]],[U]]],[11,r_cb,E,E,55,[[[U]],[r_ja]]],[11,r_db,E,E,55,[[[r_ba]],[T]]],[11,r_eb,E,E,55,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,55,[[[r_ba]],[T]]],[11,r_hb,E,E,55,[[[r_ba]],[r_ja]]],[11,r_ib,r_Fb,E,57,[[[T]],[T]]],[11,r_jb,E,E,57,[[[r_ba]],[U]]],[11,r_cb,E,E,57,[[[U]],[r_ja]]],[11,r_db,E,E,57,[[[r_ba]],[T]]],[11,r_eb,E,E,57,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,57,[[[r_ba]],[T]]],[11,r_hb,E,E,57,[[[r_ba]],[r_ja]]],[11,r_ib,E,E,56,[[[T]],[T]]],[11,r_jb,E,E,56,[[[r_ba]],[U]]],[11,r_kb,E,E,56,[[[r_ba]],[T]]],[11,r_lb,E,E,56,N],[11,r_cb,E,E,56,[[[U]],[r_ja]]],[11,r_db,E,E,56,[[[r_ba]],[T]]],[11,r_eb,E,E,56,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,56,[[[r_ba]],[T]]],[11,r_hb,E,E,56,[[[r_ba]],[r_ja]]],[11,r_ib,r_Gb,E,58,[[[T]],[T]]],[11,r_jb,E,E,58,[[[r_ba]],[U]]],[11,r_cb,E,E,58,[[[U]],[r_ja]]],[11,r_db,E,E,58,[[[r_ba]],[T]]],[11,r_eb,E,E,58,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,58,[[[r_ba]],[T]]],[11,r_hb,E,E,58,[[[r_ba]],[r_ja]]],[11,r_ib,r_Hb,E,59,[[[T]],[T]]],[11,r_jb,E,E,59,[[[r_ba]],[U]]],[11,r_cb,E,E,59,[[[U]],[r_ja]]],[11,r_db,E,E,59,[[[r_ba]],[T]]],[11,r_eb,E,E,59,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,59,[[[r_ba]],[T]]],[11,r_hb,E,E,59,[[[r_ba]],[r_ja]]],[11,r_ib,r_Ib,E,60,[[[T]],[T]]],[11,r_jb,E,E,60,[[[r_ba]],[U]]],[11,r_cb,E,E,60,[[[U]],[r_ja]]],[11,r_db,E,E,60,[[[r_ba]],[T]]],[11,r_eb,E,E,60,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,60,[[[r_ba]],[T]]],[11,r_hb,E,E,60,[[[r_ba]],[r_ja]]],[11,r_ib,r_Jb,E,61,[[[T]],[T]]],[11,r_jb,E,E,61,[[[r_ba]],[U]]],[11,r_cb,E,E,61,[[[U]],[r_ja]]],[11,r_db,E,E,61,[[[r_ba]],[T]]],[11,r_eb,E,E,61,[[[r_ba]],[r_fb]]],[11,r_gb,E,E,61,[[[r_ba]],[T]]],[11,r_hb,E,E,61,[[[r_ba]],[r_ja]]],[11,r_Vb,r_fa,E,12,[[[r_ba],[r_Kb]],[r_ja,[r_ka]]]],[11,r_Vb,E,E,20,[[[r_ba],[r_Kb]],[r_ja,[r_ka]]]],[11,r_Vb,E,E,22,[[[r_ba],[r_Kb]],[r_ja,[r_ka]]]],[11,r_Vb,E,E,32,[[[r_ba],[r_Kb]],[r_ja,[r_ka]]]],[11,r_Mb,E,E,26,[[[r_ba],[r_Ob]],[r_Lb]]],[11,r_Mb,E,E,29,[[[r_ba],[r_Ub]],[r_Lb]]],[11,r_Mb,r_pb,E,64,[[[r_ba],[r_Rb]],[r_Lb]]],[11,r_Mb,r_fa,E,69,[[[r_ba],[r_Tb]],[r_Lb]]],[11,r_Mb,r_pb,E,24,[[[r_ba],[r_Qb]],[r_Lb]]],[11,r_Mb,r_fa,E,12,[[[r_ba],[r_Nb]],[r_Lb]]],[11,r_Mb,E,E,20,[[[r_ba],[r_pa]],[r_Lb]]],[11,r_Mb,E,E,22,[[[r_ba],[r_la]],[r_Lb]]],[11,r_Pb,E,E,26,[[[r_Sb]],[r_ja,[r_Ob]]]],[11,r_Pb,r_pb,E,24,[[[r_Sb]],[r_ja,[r_Qb]]]],[11,r_Pb,r_fa,E,22,[[[r_Sb]],[r_ja,[r_la]]]],[11,r_Pb,E,E,20,[[[r_Sb]],[r_ja,[r_pa]]]],[11,r_Pb,r_pb,E,64,[[[r_Sb]],[r_ja,[r_Rb]]]],[11,r_Pb,r_fa,E,12,[[[r_Sb]],[r_ja,[r_Nb]]]],[11,r_Pb,E,E,69,[[[r_Sb]],[r_ja,[r_Tb]]]],[11,r_Pb,E,E,29,[[[r_Sb]],[r_ja,[r_Ub]]]],[11,r_Pb,E,E,68,[[[r_Sb]],[r_ja,[r_4b]]]],[11,r_Pb,E,E,66,[[[r_Sb]],[r_ja,[r_5b]]]],[11,r_Pb,E,E,65,[[[r_Sb]],[r_ja,[r_cc]]]],[11,r_Vb,E,E,65,[[[r_ba],[r_Kb]],[r_ja,[r_ka]]]],[11,r_Vb,E,E,12,[[[r_ba],[r_Kb]],[r_ja,[r_ka]]]],[11,r_Vb,r_pb,E,24,[[[r_ba],[r_Kb]],[r_ja,[r_ka]]]],[11,r_Vb,r_fa,E,26,[[[r_ba],[r_Kb]],[r_ja,[r_ka]]]],[11,r_Vb,r_pb,E,64,[[[r_ba],[r_Kb]],[r_ja,[r_ka]]]],[11,r_Vb,r_fa,E,68,[[[r_ba],[r_Kb]],[r_ja,[r_ka]]]],[11,r_Vb,E,E,29,[[[r_ba],[r_Kb]],[r_ja,[r_ka]]]],[11,r_Vb,E,E,66,[[[r_ba],[r_Kb]],[r_ja,[r_ka]]]],[11,r_Vb,E,E,32,[[[r_ba],[r_Kb]],[r_ja,[r_ka]]]],[11,r_Vb,E,E,22,[[[r_ba],[r_Kb]],[r_ja,[r_ka]]]],[11,r_Vb,E,E,20,[[[r_ba],[r_Kb]],[r_ja,[r_ka]]]],[11,r_Vb,E,E,69,[[[r_ba],[r_Kb]],[r_ja,[r_ka]]]],[11,r_Wb,r_pb,E,64,[[[r_ba],[T],[r_Sa],[r_Xb]],[r_ja,[r_ka]]]],[11,r_Wb,r_fa,E,63,[[[r_ba],[T],[r_Sa],[r_Xb]],[r_ja,[r_ka]]]],[11,r_Yb,E,r_0b,67,[[[r_ba],[r_0c],[r_pa]],[r_ja,[r_ka]]]],[11,r_Zb,E,r_1b,67,[[[r_ba],[r_pa]],[r_ja,[r_ka]]]],[11,r_Yb,E,r_0b,70,[[[r_ba],[r_0c],[r_pa]],[r_ja,[r_ka]]]],[11,r_Zb,E,r_1b,70,[[[r_ba],[r_pa]],[r_ja,[r_ka]]]],[11,r_2b,E,E,12,N],[11,r_2b,E,E,26,N],[11,r_2b,E,E,20,N],[11,r_2b,E,E,69,N],[11,r_3b,E,E,63,[[],[r_ec]]],[11,r_3b,E,E,68,[[],[r_4b]]],[11,r_3b,E,E,22,[[],[r_la]]],[11,r_3b,E,E,26,[[],[r_Ob]]],[11,r_3b,E,E,29,[[],[r_Ub]]],[11,r_3b,E,E,20,[[],[r_pa]]],[11,r_3b,r_pb,E,24,[[],[r_Qb]]],[11,r_3b,r_fa,E,69,[[],[r_Tb]]],[11,r_3b,E,E,66,[[],[r_5b]]],[11,r_3b,E,E,67,[[],[r_dc]]],[11,r_3b,E,E,12,[[],[r_Nb]]],[11,"from_iter",E,E,20,[[["i"]],[r_pa]]],[11,"eq",r_pb,E,64,[[[r_ba],[r_Rb]],[r_Xb]]],[11,"ne",E,E,64,[[[r_ba],[r_Rb]],[r_Xb]]],[11,"eq",E,E,24,[[[r_ba],[r_Qb]],[r_Xb]]],[11,"eq",r_fa,E,20,[[[r_ba],[r_pa]],[r_Xb]]],[11,"ne",E,E,20,[[[r_ba],[r_pa]],[r_Xb]]],[11,"eq",E,E,12,[[[r_ba],[r_Nb]],[r_Xb]]],[11,"eq",E,E,26,[[[r_ba],[r_Ob]],[r_Xb]]],[11,"ne",E,E,26,[[[r_ba],[r_Ob]],[r_Xb]]],[11,"eq",E,E,29,[[[r_ba],[r_Ub]],[r_Xb]]],[11,"ne",E,E,29,[[[r_ba],[r_Ub]],[r_Xb]]],[11,"eq",E,E,69,[[[r_ba],[r_Tb]],[r_Xb]]],[11,"ne",E,E,69,[[[r_ba],[r_Tb]],[r_Xb]]],[11,"eq",E,E,22,[[[r_ba],[r_la]],[r_Xb]]],[11,"extend",E,E,20,N],[11,r_6b,r_pb,E,64,[[[r_ba],[r_7b]],[r_ja]]],[11,r_6b,r_fa,E,65,[[[r_ba],[r_7b]],[r_ja]]],[11,r_6b,E,E,12,[[[r_ba],[r_7b]],[r_ja]]],[11,r_6b,E,E,29,[[[r_ba],[r_7b]],[r_ja]]],[11,r_6b,r_pb,E,24,[[[r_ba],[r_7b]],[r_ja]]],[11,r_6b,r_fa,E,69,[[[r_ba],[r_7b]],[r_ja]]],[11,r_6b,E,E,20,[[[r_ba],[r_7b]],[r_ja]]],[11,r_6b,E,E,22,[[[r_ba],[r_7b]],[r_ja]]],[11,r_6b,E,E,26,[[[r_ba],[r_7b]],[r_ja]]],[11,r_6b,E,E,68,[[[r_ba],[r_7b]],[r_ja]]],[11,r_6b,E,E,66,[[[r_ba],[r_7b]],[r_ja]]],[11,r_8b,E,E,29,[[[r_ba],[r_Ub]],[r_9b,[r_Lb]]]],[11,"lt",E,E,29,[[[r_ba],[r_Ub]],[r_Xb]]],[11,"le",E,E,29,[[[r_ba],[r_Ub]],[r_Xb]]],[11,"gt",E,E,29,[[[r_ba],[r_Ub]],[r_Xb]]],[11,"ge",E,E,29,[[[r_ba],[r_Ub]],[r_Xb]]],[11,r_8b,E,E,20,[[[r_ba],[r_pa]],[r_9b,[r_Lb]]]],[11,"lt",E,E,20,[[[r_ba],[r_pa]],[r_Xb]]],[11,"le",E,E,20,[[[r_ba],[r_pa]],[r_Xb]]],[11,"gt",E,E,20,[[[r_ba],[r_pa]],[r_Xb]]],[11,"ge",E,E,20,[[[r_ba],[r_pa]],[r_Xb]]],[11,r_8b,r_pb,E,24,[[[r_ba],[r_Qb]],[r_9b,[r_Lb]]]],[11,r_8b,E,E,64,[[[r_ba],[r_Rb]],[r_9b,[r_Lb]]]],[11,"lt",E,E,64,[[[r_ba],[r_Rb]],[r_Xb]]],[11,"le",E,E,64,[[[r_ba],[r_Rb]],[r_Xb]]],[11,"gt",E,E,64,[[[r_ba],[r_Rb]],[r_Xb]]],[11,"ge",E,E,64,[[[r_ba],[r_Rb]],[r_Xb]]],[11,r_8b,r_fa,E,12,[[[r_ba],[r_Nb]],[r_9b,[r_Lb]]]],[11,r_8b,E,E,22,[[[r_ba],[r_la]],[r_9b,[r_Lb]]]],[11,r_8b,E,E,26,[[[r_ba],[r_Ob]],[r_9b,[r_Lb]]]],[11,"lt",E,E,26,[[[r_ba],[r_Ob]],[r_Xb]]],[11,"le",E,E,26,[[[r_ba],[r_Ob]],[r_Xb]]],[11,"gt",E,E,26,[[[r_ba],[r_Ob]],[r_Xb]]],[11,"ge",E,E,26,[[[r_ba],[r_Ob]],[r_Xb]]],[11,r_8b,E,E,69,[[[r_ba],[r_Tb]],[r_9b,[r_Lb]]]],[11,"lt",E,E,69,[[[r_ba],[r_Tb]],[r_Xb]]],[11,"le",E,E,69,[[[r_ba],[r_Tb]],[r_Xb]]],[11,"gt",E,E,69,[[[r_ba],[r_Tb]],[r_Xb]]],[11,"ge",E,E,69,[[[r_ba],[r_Tb]],[r_Xb]]],[11,r_sa,E,E,68,N],[11,r_ta,E,E,68,N],[11,r_ua,E,E,68,N],[11,r_va,E,E,68,N],[11,r_sa,E,E,66,N],[11,r_ta,E,E,66,N],[11,r_ua,E,E,66,N],[11,r_va,E,E,66,N],[11,r_fe,E,E,32,[[[r_ba]],[r_9b,[r_0c]]]],[11,r_fc,E,E,32,[[[r_ba]],[r_9b,[r_sb]]]],[11,r_ac,E,E,32,[[[r_ba]],[r_9b,[r_ac]]]],[11,r_bc,E,E,29,[[[r_ba]],[r_Ub]]],[11,r_bc,E,E,22,[[[r_ba]],[r_la]]],[11,r_bc,E,E,20,[[[r_ba]],[r_pa]]],[11,r_bc,E,E,65,[[[r_ba]],[r_cc]]],[11,r_bc,E,E,67,[[[r_ba]],[r_dc]]],[11,r_bc,E,E,12,[[[r_ba]],[r_Nb]]],[11,r_bc,E,E,69,[[[r_ba]],[r_Tb]]],[11,r_bc,E,E,63,[[[r_ba]],[r_ec]]],[11,r_bc,r_pb,E,24,[[[r_ba]],[r_Qb]]],[11,r_bc,r_fa,E,70,[[[r_ba]],[r_ee]]],[11,r_bc,r_pb,E,64,[[[r_ba]],[r_Rb]]],[11,r_bc,r_fa,E,66,[[[r_ba]],[r_5b]]],[11,r_bc,E,E,26,[[[r_ba]],[r_Ob]]],[11,r_bc,E,E,68,[[[r_ba]],[r_4b]]],[11,r_Vb,r_qb,E,30,[[[r_ba],[r_Kb]],[r_ja,[r_ka]]]],[11,"description",E,E,30,[[[r_ba]],[r_0c]]],[11,r_fc,E,E,30,[[[r_ba]],[r_9b,[r_ka]]]],[11,r_Vb,E,E,31,[[[r_ba],[r_Kb]],[r_ja,[r_ka]]]],[11,r_Vb,E,E,30,[[[r_ba],[r_Kb]],[r_ja,[r_ka]]]],[11,r_ib,E,E,30,[[[r_ka]],[r_ka]]],[11,r_Vb,r_fa,E,71,[[[r_ba],[r_Kb]],[r_ja,[r_ka]]]],[11,r_rb,E,E,71,[[[r_ba]],[r_sb]]],[11,"as_ref",E,E,71,[[[r_ba]],[r_sb]]],[11,r_Vb,E,E,71,[[[r_ba],[r_Kb]],[r_ja,[r_ka]]]],[11,r_ib,E,E,71,[[["f"]],[r_ka]]],[11,r_3b,r_bb,E,0,[[],[r_gc]]],[11,r_bc,E,E,0,[[[r_ba]],[r_gc]]],[11,r_ic,r_zb,E,47,[[[r_ba],[r_Xa],[T],[r_Xa],[T],[T],[r_Xa]],[r_Xb]]],[11,r_hc,E,E,47,[[[r_ba]],[r_Xb]]],[11,r_ic,E,E,48,[[[r_ba],[r_Xa],[T],[r_Xa],[T],[T],[r_Xa]],[r_Xb]]],[11,r_hc,E,E,48,[[[r_ba]],[r_Xb]]],[11,r_ic,E,E,49,[[[r_ba],[r_Xa],[T],[r_Xa],[T],[T],[r_Xa]],[r_Xb]]],[11,r_hc,E,E,49,[[[r_ba]],[r_Xb]]],[11,r_ic,E,E,50,[[[r_ba],[r_Xa],[T],[r_Xa],[T],[T],[r_Xa]],[r_Xb]]],[11,r_hc,E,E,50,[[[r_ba]],[r_Xb]]],[11,"eq",r_vb,E,39,[[[r_ba],[r_jc]],[r_Xb]]],[11,"eq",E,E,40,[[[r_ba],[r_kc]],[r_Xb]]],[11,"eq",E,E,41,[[[r_ba],[r_lc]],[r_Xb]]],[11,"eq",E,E,42,[[[r_ba],[r_mc]],[r_Xb]]],[11,r_3b,E,E,39,[[],[r_jc]]],[11,r_3b,E,E,40,[[],[r_kc]]],[11,r_3b,E,E,41,[[],[r_lc]]],[11,r_3b,E,E,42,[[],[r_mc]]],[11,r_3b,r_zb,E,47,[[],[r_oc]]],[11,r_3b,E,E,48,[[],[r_pc]]],[11,r_3b,E,E,49,[[],[r_qc]]],[11,r_3b,E,E,50,[[],[r_rc]]],[11,r_3b,r_Fb,E,56,[[],[r_ba]]],[11,r_bc,r_tb,E,37,[[[r_ba]],[r_nc]]],[11,r_bc,r_vb,E,39,[[[r_ba]],[r_jc]]],[11,r_bc,E,E,40,[[[r_ba]],[r_kc]]],[11,r_bc,E,E,41,[[[r_ba]],[r_lc]]],[11,r_bc,E,E,42,[[[r_ba]],[r_mc]]],[11,r_bc,r_zb,E,47,[[[r_ba]],[r_oc]]],[11,r_bc,E,E,48,[[[r_ba]],[r_pc]]],[11,r_bc,E,E,49,[[[r_ba]],[r_qc]]],[11,r_bc,E,E,50,[[[r_ba]],[r_rc]]],[11,r_bc,r_Fb,E,56,[[[r_ba]],[r_sc]]],[11,r_Mb,r_vb,E,39,[[[r_ba],[r_jc]],[r_Lb]]],[11,r_Mb,E,E,40,[[[r_ba],[r_kc]],[r_Lb]]],[11,r_Mb,E,E,41,[[[r_ba],[r_lc]],[r_Lb]]],[11,r_Mb,E,E,42,[[[r_ba],[r_mc]],[r_Lb]]],[11,r_8b,E,E,39,[[[r_ba],[r_jc]],[r_9b,[r_Lb]]]],[11,r_8b,E,E,40,[[[r_ba],[r_kc]],[r_9b,[r_Lb]]]],[11,r_8b,E,E,41,[[[r_ba],[r_lc]],[r_9b,[r_Lb]]]],[11,r_8b,E,E,42,[[[r_ba],[r_mc]],[r_9b,[r_Lb]]]],[11,r_Vb,E,E,39,[[[r_ba],[r_Kb]],[r_ja]]],[11,r_Vb,E,E,40,[[[r_ba],[r_Kb]],[r_ja]]],[11,r_Vb,E,E,41,[[[r_ba],[r_Kb]],[r_ja]]],[11,r_Vb,E,E,42,[[[r_ba],[r_Kb]],[r_ja]]],[11,r_Vb,r_zb,E,47,[[[r_ba],[r_Kb]],[r_ja]]],[11,r_Vb,E,E,48,[[[r_ba],[r_Kb]],[r_ja]]],[11,r_Vb,E,E,49,[[[r_ba],[r_Kb]],[r_ja]]],[11,r_Vb,E,E,50,[[[r_ba],[r_Kb]],[r_ja]]],[11,r_Vb,r_Fb,E,56,[[[r_ba],[r_Kb]],[r_ja]]],[11,r_2b,r_vb,E,39,N],[11,r_2b,E,E,40,N],[11,r_2b,E,E,41,N],[11,r_2b,E,E,42,N],[11,r_Pb,r_tb,E,37,[[[r_Sb]],[r_ja]]],[11,r_Pb,r_ub,E,38,[[[r_Sb]],[r_ja]]],[11,r_Pb,r_vb,E,39,[[[r_Sb]],[r_ja]]],[11,r_Pb,E,E,40,[[[r_Sb]],[r_ja]]],[11,r_Pb,E,E,41,[[[r_Sb]],[r_ja]]],[11,r_Pb,E,E,42,[[[r_Sb]],[r_ja]]],[11,r_Pb,r_wb,E,43,[[[r_Sb]],[r_ja]]],[11,r_Pb,r_xb,E,44,[[[r_Sb]],[r_ja]]],[11,r_Pb,r_yb,E,45,[[[r_Sb]],[r_ja]]],[11,r_Pb,r_zb,E,47,[[[r_Sb]],[r_ja]]],[11,r_Pb,E,E,48,[[[r_Sb]],[r_ja]]],[11,r_Pb,E,E,49,[[[r_Sb]],[r_ja]]],[11,r_Pb,E,E,50,[[[r_Sb]],[r_ja]]],[11,r_Pb,r_Ab,E,51,[[[r_Sb]],[r_ja]]],[11,r_Pb,r_Bb,E,52,[[[r_Sb]],[r_ja]]],[11,r_Pb,r_Cb,E,53,[[[r_Sb]],[r_ja]]],[11,r_Pb,r_Db,E,54,[[[r_Sb]],[r_ja]]],[11,r_Pb,r_Eb,E,55,[[[r_Sb]],[r_ja]]],[11,r_Pb,r_Fb,E,56,[[[r_Sb]],[r_ja]]],[11,r_Pb,E,E,57,[[[r_Sb]],[r_ja]]],[11,r_Pb,r_Gb,E,58,[[[r_Sb]],[r_ja]]],[11,r_Pb,r_Hb,E,59,[[[r_Sb]],[r_ja]]],[11,r_Pb,r_Ib,E,60,[[[r_Sb]],[r_ja]]],[11,r_Pb,r_Jb,E,61,[[[r_Sb]],[r_ja]]],[11,r_6b,r_tb,E,37,[[[r_ba],[r_7b]],[r_ja]]],[11,r_6b,r_ub,E,38,[[[r_ba],[r_7b]],[r_ja]]],[11,r_6b,r_vb,E,39,[[[r_ba],[r_7b]],[r_ja]]],[11,r_6b,E,E,40,[[[r_ba],[r_7b]],[r_ja]]],[11,r_6b,E,E,41,[[[r_ba],[r_7b]],[r_ja]]],[11,r_6b,E,E,42,[[[r_ba],[r_7b]],[r_ja]]],[11,r_6b,r_wb,E,43,[[[r_ba],[r_7b]],[r_ja]]],[11,r_6b,r_xb,E,44,[[[r_ba],[r_7b]],[r_ja]]],[11,r_6b,r_yb,E,45,[[[r_ba],[r_7b]],[r_ja]]],[11,r_6b,r_zb,E,47,[[[r_ba],[r_7b]],[r_ja]]],[11,r_6b,E,E,48,[[[r_ba],[r_7b]],[r_ja]]],[11,r_6b,E,E,49,[[[r_ba],[r_7b]],[r_ja]]],[11,r_6b,E,E,50,[[[r_ba],[r_7b]],[r_ja]]],[11,r_6b,r_Ab,E,51,[[[r_ba],[r_7b]],[r_ja]]],[11,r_6b,r_Bb,E,52,[[[r_ba],[r_7b]],[r_ja]]],[11,r_6b,r_Cb,E,53,[[[r_ba],[r_7b]],[r_ja]]],[11,r_6b,r_Db,E,54,[[[r_ba],[r_7b]],[r_ja]]],[11,r_6b,r_Eb,E,55,[[[r_ba],[r_7b]],[r_ja]]],[11,r_6b,r_Fb,E,56,[[[r_ba],[r_7b]],[r_ja]]],[11,r_6b,E,E,57,[[[r_ba],[r_7b]],[r_ja]]],[11,r_6b,r_Gb,E,58,[[[r_ba],[r_7b]],[r_ja]]],[11,r_6b,r_Hb,E,59,[[[r_ba],[r_7b]],[r_ja]]],[11,r_6b,r_Ib,E,60,[[[r_ba],[r_7b]],[r_ja]]],[11,r_6b,r_Jb,E,61,[[[r_ba],[r_7b]],[r_ja]]],[11,r_Gd,r_tb,r_5c,37,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_tc,E,r_6c,37,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_sa,E,r_7c,37,N],[11,r_ta,E,r_8c,37,N],[11,r_ua,E,r_9c,37,N],[11,r_uc,E,r_ad,37,N],[11,r_vc,E,r_bd,37,N],[11,r_wc,E,r_cd,37,N],[11,r_xc,E,r_dd,37,N],[11,r_Wa,E,r_ed,37,N],[11,r_yc,E,r_fd,37,N],[11,r_zc,E,r_gd,37,N],[11,r_va,E,r_hd,37,N],[11,r_ja,E,r_id,37,[[[r_ba]],[r_la]]],[11,r_Ac,E,r_jd,37,[[[r_ba],[r_Sa]]]],[11,r_Bc,E,r_kd,37,[[[r_ba]],[r_Sa]]],[11,r_Cc,E,r_ld,37,[[[r_ba]]]],[11,r_Dc,E,r_md,37,[[[r_ba]],[r_Sa]]],[11,r_Ec,E,r_nd,37,[[[r_ba]],[r_Xa]]],[11,r_Fc,E,r_od,37,[[[r_ba],[r_Xa]]]],[11,r_Gc,E,r_pd,37,[[[r_ba]],[r_Xa]]],[11,r_Hc,E,r_qd,37,[[[r_ba],[r_Xa]]]],[11,r_Ic,E,r_rd,37,[[[r_ba],[r_Xa]]]],[11,r_Jc,E,r_sd,37,[[[r_ba]]]],[11,r_Kc,E,r_td,37,[[[r_ba],[r_Sa]]]],[11,r_Lc,E,r_Pc,37,[[[r_ba]],[r_Sa]]],[11,r_Mc,E,r_ud,37,[[[r_ba]]]],[11,r_Nc,E,r_vd,37,[[[r_ba],[r_Sa]]]],[11,r_Oc,E,r_Pc,37,[[[r_ba]],[r_Sa]]],[11,r_Qc,E,r_wd,37,[[[r_ba]]]],[11,r_Rc,E,r_xd,37,[[[r_ba],[r_Sa]]]],[11,r_Sc,E,r_Pc,37,[[[r_ba]],[r_Sa]]],[11,r_Tc,E,r_yd,37,[[[r_ba],[r_Fd,[r_zd]]]]],[11,r_Uc,E,r_Ad,37,[[[r_ba],[r_Fd,[r_Bd]]]]],[11,r_Vc,E,r_Cd,37,[[[r_ba],[r_Nb]]]],[11,r_Wc,E,r_Dd,37,[[[r_ba]],[r_Nb]]],[11,r_Xc,E,r_Ed,37,[[[r_ba]]]],[11,r_Yc,E,r_Zc,37,[[[r_ba],[r_0c]]]],[11,r_1c,E,r_2c,37,[[[r_ba],[r_0c]]]],[11,r_3c,E,r_4c,37,[[[r_ba],[r_Ob]]]],[11,r_Gd,r_ub,r_5c,38,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_tc,E,r_6c,38,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_sa,E,r_7c,38,N],[11,r_ta,E,r_8c,38,N],[11,r_ua,E,r_9c,38,N],[11,r_uc,E,r_ad,38,N],[11,r_vc,E,r_bd,38,N],[11,r_wc,E,r_cd,38,N],[11,r_xc,E,r_dd,38,N],[11,r_Wa,E,r_ed,38,N],[11,r_yc,E,r_fd,38,N],[11,r_zc,E,r_gd,38,N],[11,r_va,E,r_hd,38,N],[11,r_ja,E,r_id,38,[[[r_ba]],[r_la]]],[11,r_Ac,E,r_jd,38,[[[r_ba],[r_Sa]]]],[11,r_Bc,E,r_kd,38,[[[r_ba]],[r_Sa]]],[11,r_Cc,E,r_ld,38,[[[r_ba]]]],[11,r_Dc,E,r_md,38,[[[r_ba]],[r_Sa]]],[11,r_Ec,E,r_nd,38,[[[r_ba]],[r_Xa]]],[11,r_Fc,E,r_od,38,[[[r_ba],[r_Xa]]]],[11,r_Gc,E,r_pd,38,[[[r_ba]],[r_Xa]]],[11,r_Hc,E,r_qd,38,[[[r_ba],[r_Xa]]]],[11,r_Ic,E,r_rd,38,[[[r_ba],[r_Xa]]]],[11,r_Jc,E,r_sd,38,[[[r_ba]]]],[11,r_Kc,E,r_td,38,[[[r_ba],[r_Sa]]]],[11,r_Lc,E,r_Pc,38,[[[r_ba]],[r_Sa]]],[11,r_Mc,E,r_ud,38,[[[r_ba]]]],[11,r_Nc,E,r_vd,38,[[[r_ba],[r_Sa]]]],[11,r_Oc,E,r_Pc,38,[[[r_ba]],[r_Sa]]],[11,r_Qc,E,r_wd,38,[[[r_ba]]]],[11,r_Rc,E,r_xd,38,[[[r_ba],[r_Sa]]]],[11,r_Sc,E,r_Pc,38,[[[r_ba]],[r_Sa]]],[11,r_Tc,E,r_yd,38,[[[r_ba],[r_Fd,[r_zd]]]]],[11,r_Uc,E,r_Ad,38,[[[r_ba],[r_Fd,[r_Bd]]]]],[11,r_Vc,E,r_Cd,38,[[[r_ba],[r_Nb]]]],[11,r_Wc,E,r_Dd,38,[[[r_ba]],[r_Nb]]],[11,r_Xc,E,r_Ed,38,[[[r_ba]]]],[11,r_Yc,E,r_Zc,38,[[[r_ba],[r_0c]]]],[11,r_1c,E,r_2c,38,[[[r_ba],[r_0c]]]],[11,r_3c,E,r_4c,38,[[[r_ba],[r_Ob]]]],[11,r_Gd,r_wb,r_5c,43,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_tc,E,r_6c,43,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_sa,E,r_7c,43,N],[11,r_ta,E,r_8c,43,N],[11,r_ua,E,r_9c,43,N],[11,r_uc,E,r_ad,43,N],[11,r_vc,E,r_bd,43,N],[11,r_wc,E,r_cd,43,N],[11,r_xc,E,r_dd,43,N],[11,r_Wa,E,r_ed,43,N],[11,r_yc,E,r_fd,43,N],[11,r_zc,E,r_gd,43,N],[11,r_va,E,r_hd,43,N],[11,r_ja,E,r_id,43,[[[r_ba]],[r_la]]],[11,r_Ac,E,r_jd,43,[[[r_ba],[r_Sa]]]],[11,r_Bc,E,r_kd,43,[[[r_ba]],[r_Sa]]],[11,r_Cc,E,r_ld,43,[[[r_ba]]]],[11,r_Dc,E,r_md,43,[[[r_ba]],[r_Sa]]],[11,r_Ec,E,r_nd,43,[[[r_ba]],[r_Xa]]],[11,r_Fc,E,r_od,43,[[[r_ba],[r_Xa]]]],[11,r_Gc,E,r_pd,43,[[[r_ba]],[r_Xa]]],[11,r_Hc,E,r_qd,43,[[[r_ba],[r_Xa]]]],[11,r_Ic,E,r_rd,43,[[[r_ba],[r_Xa]]]],[11,r_Jc,E,r_sd,43,[[[r_ba]]]],[11,r_Kc,E,r_td,43,[[[r_ba],[r_Sa]]]],[11,r_Lc,E,r_Pc,43,[[[r_ba]],[r_Sa]]],[11,r_Mc,E,r_ud,43,[[[r_ba]]]],[11,r_Nc,E,r_vd,43,[[[r_ba],[r_Sa]]]],[11,r_Oc,E,r_Pc,43,[[[r_ba]],[r_Sa]]],[11,r_Qc,E,r_wd,43,[[[r_ba]]]],[11,r_Rc,E,r_xd,43,[[[r_ba],[r_Sa]]]],[11,r_Sc,E,r_Pc,43,[[[r_ba]],[r_Sa]]],[11,r_Tc,E,r_yd,43,[[[r_ba],[r_Fd,[r_zd]]]]],[11,r_Uc,E,r_Ad,43,[[[r_ba],[r_Fd,[r_Bd]]]]],[11,r_Vc,E,r_Cd,43,[[[r_ba],[r_Nb]]]],[11,r_Wc,E,r_Dd,43,[[[r_ba]],[r_Nb]]],[11,r_Xc,E,r_Ed,43,[[[r_ba]]]],[11,r_Yc,E,r_Zc,43,[[[r_ba],[r_0c]]]],[11,r_1c,E,r_2c,43,[[[r_ba],[r_0c]]]],[11,r_3c,E,r_4c,43,[[[r_ba],[r_Ob]]]],[11,r_Gd,r_xb,r_5c,44,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_tc,E,r_6c,44,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_sa,E,r_7c,44,N],[11,r_ta,E,r_8c,44,N],[11,r_ua,E,r_9c,44,N],[11,r_uc,E,r_ad,44,N],[11,r_vc,E,r_bd,44,N],[11,r_wc,E,r_cd,44,N],[11,r_xc,E,r_dd,44,N],[11,r_Wa,E,r_ed,44,N],[11,r_yc,E,r_fd,44,N],[11,r_zc,E,r_gd,44,N],[11,r_va,E,r_hd,44,N],[11,r_ja,E,r_id,44,[[[r_ba]],[r_la]]],[11,r_Ac,E,r_jd,44,[[[r_ba],[r_Sa]]]],[11,r_Bc,E,r_kd,44,[[[r_ba]],[r_Sa]]],[11,r_Cc,E,r_ld,44,[[[r_ba]]]],[11,r_Dc,E,r_md,44,[[[r_ba]],[r_Sa]]],[11,r_Ec,E,r_nd,44,[[[r_ba]],[r_Xa]]],[11,r_Fc,E,r_od,44,[[[r_ba],[r_Xa]]]],[11,r_Gc,E,r_pd,44,[[[r_ba]],[r_Xa]]],[11,r_Hc,E,r_qd,44,[[[r_ba],[r_Xa]]]],[11,r_Ic,E,r_rd,44,[[[r_ba],[r_Xa]]]],[11,r_Jc,E,r_sd,44,[[[r_ba]]]],[11,r_Kc,E,r_td,44,[[[r_ba],[r_Sa]]]],[11,r_Lc,E,r_Pc,44,[[[r_ba]],[r_Sa]]],[11,r_Mc,E,r_ud,44,[[[r_ba]]]],[11,r_Nc,E,r_vd,44,[[[r_ba],[r_Sa]]]],[11,r_Oc,E,r_Pc,44,[[[r_ba]],[r_Sa]]],[11,r_Qc,E,r_wd,44,[[[r_ba]]]],[11,r_Rc,E,r_xd,44,[[[r_ba],[r_Sa]]]],[11,r_Sc,E,r_Pc,44,[[[r_ba]],[r_Sa]]],[11,r_Tc,E,r_yd,44,[[[r_ba],[r_Fd,[r_zd]]]]],[11,r_Uc,E,r_Ad,44,[[[r_ba],[r_Fd,[r_Bd]]]]],[11,r_Vc,E,r_Cd,44,[[[r_ba],[r_Nb]]]],[11,r_Wc,E,r_Dd,44,[[[r_ba]],[r_Nb]]],[11,r_Xc,E,r_Ed,44,[[[r_ba]]]],[11,r_Yc,E,r_Zc,44,[[[r_ba],[r_0c]]]],[11,r_1c,E,r_2c,44,[[[r_ba],[r_0c]]]],[11,r_3c,E,r_4c,44,[[[r_ba],[r_Ob]]]],[11,r_Gd,r_yb,r_5c,45,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_tc,E,r_6c,45,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_sa,E,r_7c,45,N],[11,r_ta,E,r_8c,45,N],[11,r_ua,E,r_9c,45,N],[11,r_uc,E,r_ad,45,N],[11,r_vc,E,r_bd,45,N],[11,r_wc,E,r_cd,45,N],[11,r_xc,E,r_dd,45,N],[11,r_Wa,E,r_ed,45,N],[11,r_yc,E,r_fd,45,N],[11,r_zc,E,r_gd,45,N],[11,r_va,E,r_hd,45,N],[11,r_ja,E,r_id,45,[[[r_ba]],[r_la]]],[11,r_Ac,E,r_jd,45,[[[r_ba],[r_Sa]]]],[11,r_Bc,E,r_kd,45,[[[r_ba]],[r_Sa]]],[11,r_Cc,E,r_ld,45,[[[r_ba]]]],[11,r_Dc,E,r_md,45,[[[r_ba]],[r_Sa]]],[11,r_Ec,E,r_nd,45,[[[r_ba]],[r_Xa]]],[11,r_Fc,E,r_od,45,[[[r_ba],[r_Xa]]]],[11,r_Gc,E,r_pd,45,[[[r_ba]],[r_Xa]]],[11,r_Hc,E,r_qd,45,[[[r_ba],[r_Xa]]]],[11,r_Ic,E,r_rd,45,[[[r_ba],[r_Xa]]]],[11,r_Jc,E,r_sd,45,[[[r_ba]]]],[11,r_Kc,E,r_td,45,[[[r_ba],[r_Sa]]]],[11,r_Lc,E,r_Pc,45,[[[r_ba]],[r_Sa]]],[11,r_Mc,E,r_ud,45,[[[r_ba]]]],[11,r_Nc,E,r_vd,45,[[[r_ba],[r_Sa]]]],[11,r_Oc,E,r_Pc,45,[[[r_ba]],[r_Sa]]],[11,r_Qc,E,r_wd,45,[[[r_ba]]]],[11,r_Rc,E,r_xd,45,[[[r_ba],[r_Sa]]]],[11,r_Sc,E,r_Pc,45,[[[r_ba]],[r_Sa]]],[11,r_Tc,E,r_yd,45,[[[r_ba],[r_Fd,[r_zd]]]]],[11,r_Uc,E,r_Ad,45,[[[r_ba],[r_Fd,[r_Bd]]]]],[11,r_Vc,E,r_Cd,45,[[[r_ba],[r_Nb]]]],[11,r_Wc,E,r_Dd,45,[[[r_ba]],[r_Nb]]],[11,r_Xc,E,r_Ed,45,[[[r_ba]]]],[11,r_Yc,E,r_Zc,45,[[[r_ba],[r_0c]]]],[11,r_1c,E,r_2c,45,[[[r_ba],[r_0c]]]],[11,r_3c,E,r_4c,45,[[[r_ba],[r_Ob]]]],[11,r_Gd,r_Ab,r_5c,51,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_tc,E,r_6c,51,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_sa,E,r_7c,51,N],[11,r_ta,E,r_8c,51,N],[11,r_ua,E,r_9c,51,N],[11,r_uc,E,r_ad,51,N],[11,r_vc,E,r_bd,51,N],[11,r_wc,E,r_cd,51,N],[11,r_xc,E,r_dd,51,N],[11,r_Wa,E,r_ed,51,N],[11,r_yc,E,r_fd,51,N],[11,r_zc,E,r_gd,51,N],[11,r_va,E,r_hd,51,N],[11,r_ja,E,r_id,51,[[[r_ba]],[r_la]]],[11,r_Ac,E,r_jd,51,[[[r_ba],[r_Sa]]]],[11,r_Bc,E,r_kd,51,[[[r_ba]],[r_Sa]]],[11,r_Cc,E,r_ld,51,[[[r_ba]]]],[11,r_Dc,E,r_md,51,[[[r_ba]],[r_Sa]]],[11,r_Ec,E,r_nd,51,[[[r_ba]],[r_Xa]]],[11,r_Fc,E,r_od,51,[[[r_ba],[r_Xa]]]],[11,r_Gc,E,r_pd,51,[[[r_ba]],[r_Xa]]],[11,r_Hc,E,r_qd,51,[[[r_ba],[r_Xa]]]],[11,r_Ic,E,r_rd,51,[[[r_ba],[r_Xa]]]],[11,r_Jc,E,r_sd,51,[[[r_ba]]]],[11,r_Kc,E,r_td,51,[[[r_ba],[r_Sa]]]],[11,r_Lc,E,r_Pc,51,[[[r_ba]],[r_Sa]]],[11,r_Mc,E,r_ud,51,[[[r_ba]]]],[11,r_Nc,E,r_vd,51,[[[r_ba],[r_Sa]]]],[11,r_Oc,E,r_Pc,51,[[[r_ba]],[r_Sa]]],[11,r_Qc,E,r_wd,51,[[[r_ba]]]],[11,r_Rc,E,r_xd,51,[[[r_ba],[r_Sa]]]],[11,r_Sc,E,r_Pc,51,[[[r_ba]],[r_Sa]]],[11,r_Tc,E,r_yd,51,[[[r_ba],[r_Fd,[r_zd]]]]],[11,r_Uc,E,r_Ad,51,[[[r_ba],[r_Fd,[r_Bd]]]]],[11,r_Vc,E,r_Cd,51,[[[r_ba],[r_Nb]]]],[11,r_Wc,E,r_Dd,51,[[[r_ba]],[r_Nb]]],[11,r_Xc,E,r_Ed,51,[[[r_ba]]]],[11,r_Yc,E,r_Zc,51,[[[r_ba],[r_0c]]]],[11,r_1c,E,r_2c,51,[[[r_ba],[r_0c]]]],[11,r_3c,E,r_4c,51,[[[r_ba],[r_Ob]]]],[11,r_Gd,r_Bb,r_5c,52,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_tc,E,r_6c,52,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_sa,E,r_7c,52,N],[11,r_ta,E,r_8c,52,N],[11,r_ua,E,r_9c,52,N],[11,r_uc,E,r_ad,52,N],[11,r_vc,E,r_bd,52,N],[11,r_wc,E,r_cd,52,N],[11,r_xc,E,r_dd,52,N],[11,r_Wa,E,r_ed,52,N],[11,r_yc,E,r_fd,52,N],[11,r_zc,E,r_gd,52,N],[11,r_va,E,r_hd,52,N],[11,r_ja,E,r_id,52,[[[r_ba]],[r_la]]],[11,r_Ac,E,r_jd,52,[[[r_ba],[r_Sa]]]],[11,r_Bc,E,r_kd,52,[[[r_ba]],[r_Sa]]],[11,r_Cc,E,r_ld,52,[[[r_ba]]]],[11,r_Dc,E,r_md,52,[[[r_ba]],[r_Sa]]],[11,r_Ec,E,r_nd,52,[[[r_ba]],[r_Xa]]],[11,r_Fc,E,r_od,52,[[[r_ba],[r_Xa]]]],[11,r_Gc,E,r_pd,52,[[[r_ba]],[r_Xa]]],[11,r_Hc,E,r_qd,52,[[[r_ba],[r_Xa]]]],[11,r_Ic,E,r_rd,52,[[[r_ba],[r_Xa]]]],[11,r_Jc,E,r_sd,52,[[[r_ba]]]],[11,r_Kc,E,r_td,52,[[[r_ba],[r_Sa]]]],[11,r_Lc,E,r_Pc,52,[[[r_ba]],[r_Sa]]],[11,r_Mc,E,r_ud,52,[[[r_ba]]]],[11,r_Nc,E,r_vd,52,[[[r_ba],[r_Sa]]]],[11,r_Oc,E,r_Pc,52,[[[r_ba]],[r_Sa]]],[11,r_Qc,E,r_wd,52,[[[r_ba]]]],[11,r_Rc,E,r_xd,52,[[[r_ba],[r_Sa]]]],[11,r_Sc,E,r_Pc,52,[[[r_ba]],[r_Sa]]],[11,r_Tc,E,r_yd,52,[[[r_ba],[r_Fd,[r_zd]]]]],[11,r_Uc,E,r_Ad,52,[[[r_ba],[r_Fd,[r_Bd]]]]],[11,r_Vc,E,r_Cd,52,[[[r_ba],[r_Nb]]]],[11,r_Wc,E,r_Dd,52,[[[r_ba]],[r_Nb]]],[11,r_Xc,E,r_Ed,52,[[[r_ba]]]],[11,r_Yc,E,r_Zc,52,[[[r_ba],[r_0c]]]],[11,r_1c,E,r_2c,52,[[[r_ba],[r_0c]]]],[11,r_3c,E,r_4c,52,[[[r_ba],[r_Ob]]]],[11,r_Gd,r_Cb,r_5c,53,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_tc,E,r_6c,53,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_sa,E,r_7c,53,N],[11,r_ta,E,r_8c,53,N],[11,r_ua,E,r_9c,53,N],[11,r_uc,E,r_ad,53,N],[11,r_vc,E,r_bd,53,N],[11,r_wc,E,r_cd,53,N],[11,r_xc,E,r_dd,53,N],[11,r_Wa,E,r_ed,53,N],[11,r_yc,E,r_fd,53,N],[11,r_zc,E,r_gd,53,N],[11,r_va,E,r_hd,53,N],[11,r_ja,E,r_id,53,[[[r_ba]],[r_la]]],[11,r_Ac,E,r_jd,53,[[[r_ba],[r_Sa]]]],[11,r_Bc,E,r_kd,53,[[[r_ba]],[r_Sa]]],[11,r_Cc,E,r_ld,53,[[[r_ba]]]],[11,r_Dc,E,r_md,53,[[[r_ba]],[r_Sa]]],[11,r_Ec,E,r_nd,53,[[[r_ba]],[r_Xa]]],[11,r_Fc,E,r_od,53,[[[r_ba],[r_Xa]]]],[11,r_Gc,E,r_pd,53,[[[r_ba]],[r_Xa]]],[11,r_Hc,E,r_qd,53,[[[r_ba],[r_Xa]]]],[11,r_Ic,E,r_rd,53,[[[r_ba],[r_Xa]]]],[11,r_Jc,E,r_sd,53,[[[r_ba]]]],[11,r_Kc,E,r_td,53,[[[r_ba],[r_Sa]]]],[11,r_Lc,E,r_Pc,53,[[[r_ba]],[r_Sa]]],[11,r_Mc,E,r_ud,53,[[[r_ba]]]],[11,r_Nc,E,r_vd,53,[[[r_ba],[r_Sa]]]],[11,r_Oc,E,r_Pc,53,[[[r_ba]],[r_Sa]]],[11,r_Qc,E,r_wd,53,[[[r_ba]]]],[11,r_Rc,E,r_xd,53,[[[r_ba],[r_Sa]]]],[11,r_Sc,E,r_Pc,53,[[[r_ba]],[r_Sa]]],[11,r_Tc,E,r_yd,53,[[[r_ba],[r_Fd,[r_zd]]]]],[11,r_Uc,E,r_Ad,53,[[[r_ba],[r_Fd,[r_Bd]]]]],[11,r_Vc,E,r_Cd,53,[[[r_ba],[r_Nb]]]],[11,r_Wc,E,r_Dd,53,[[[r_ba]],[r_Nb]]],[11,r_Xc,E,r_Ed,53,[[[r_ba]]]],[11,r_Yc,E,r_Zc,53,[[[r_ba],[r_0c]]]],[11,r_1c,E,r_2c,53,[[[r_ba],[r_0c]]]],[11,r_3c,E,r_4c,53,[[[r_ba],[r_Ob]]]],[11,r_Gd,r_Db,r_5c,54,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_tc,E,r_6c,54,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_sa,E,r_7c,54,N],[11,r_ta,E,r_8c,54,N],[11,r_ua,E,r_9c,54,N],[11,r_uc,E,r_ad,54,N],[11,r_vc,E,r_bd,54,N],[11,r_wc,E,r_cd,54,N],[11,r_xc,E,r_dd,54,N],[11,r_Wa,E,r_ed,54,N],[11,r_yc,E,r_fd,54,N],[11,r_zc,E,r_gd,54,N],[11,r_va,E,r_hd,54,N],[11,r_ja,E,r_id,54,[[[r_ba]],[r_la]]],[11,r_Ac,E,r_jd,54,[[[r_ba],[r_Sa]]]],[11,r_Bc,E,r_kd,54,[[[r_ba]],[r_Sa]]],[11,r_Cc,E,r_ld,54,[[[r_ba]]]],[11,r_Dc,E,r_md,54,[[[r_ba]],[r_Sa]]],[11,r_Ec,E,r_nd,54,[[[r_ba]],[r_Xa]]],[11,r_Fc,E,r_od,54,[[[r_ba],[r_Xa]]]],[11,r_Gc,E,r_pd,54,[[[r_ba]],[r_Xa]]],[11,r_Hc,E,r_qd,54,[[[r_ba],[r_Xa]]]],[11,r_Ic,E,r_rd,54,[[[r_ba],[r_Xa]]]],[11,r_Jc,E,r_sd,54,[[[r_ba]]]],[11,r_Kc,E,r_td,54,[[[r_ba],[r_Sa]]]],[11,r_Lc,E,r_Pc,54,[[[r_ba]],[r_Sa]]],[11,r_Mc,E,r_ud,54,[[[r_ba]]]],[11,r_Nc,E,r_vd,54,[[[r_ba],[r_Sa]]]],[11,r_Oc,E,r_Pc,54,[[[r_ba]],[r_Sa]]],[11,r_Qc,E,r_wd,54,[[[r_ba]]]],[11,r_Rc,E,r_xd,54,[[[r_ba],[r_Sa]]]],[11,r_Sc,E,r_Pc,54,[[[r_ba]],[r_Sa]]],[11,r_Tc,E,r_yd,54,[[[r_ba],[r_Fd,[r_zd]]]]],[11,r_Uc,E,r_Ad,54,[[[r_ba],[r_Fd,[r_Bd]]]]],[11,r_Vc,E,r_Cd,54,[[[r_ba],[r_Nb]]]],[11,r_Wc,E,r_Dd,54,[[[r_ba]],[r_Nb]]],[11,r_Xc,E,r_Ed,54,[[[r_ba]]]],[11,r_Yc,E,r_Zc,54,[[[r_ba],[r_0c]]]],[11,r_1c,E,r_2c,54,[[[r_ba],[r_0c]]]],[11,r_3c,E,r_4c,54,[[[r_ba],[r_Ob]]]],[11,r_Gd,r_Eb,r_5c,55,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_tc,E,r_6c,55,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_sa,E,r_7c,55,N],[11,r_ta,E,r_8c,55,N],[11,r_ua,E,r_9c,55,N],[11,r_uc,E,r_ad,55,N],[11,r_vc,E,r_bd,55,N],[11,r_wc,E,r_cd,55,N],[11,r_xc,E,r_dd,55,N],[11,r_Wa,E,r_ed,55,N],[11,r_yc,E,r_fd,55,N],[11,r_zc,E,r_gd,55,N],[11,r_va,E,r_hd,55,N],[11,r_ja,E,r_id,55,[[[r_ba]],[r_la]]],[11,r_Ac,E,r_jd,55,[[[r_ba],[r_Sa]]]],[11,r_Bc,E,r_kd,55,[[[r_ba]],[r_Sa]]],[11,r_Cc,E,r_ld,55,[[[r_ba]]]],[11,r_Dc,E,r_md,55,[[[r_ba]],[r_Sa]]],[11,r_Ec,E,r_nd,55,[[[r_ba]],[r_Xa]]],[11,r_Fc,E,r_od,55,[[[r_ba],[r_Xa]]]],[11,r_Gc,E,r_pd,55,[[[r_ba]],[r_Xa]]],[11,r_Hc,E,r_qd,55,[[[r_ba],[r_Xa]]]],[11,r_Ic,E,r_rd,55,[[[r_ba],[r_Xa]]]],[11,r_Jc,E,r_sd,55,[[[r_ba]]]],[11,r_Kc,E,r_td,55,[[[r_ba],[r_Sa]]]],[11,r_Lc,E,r_Pc,55,[[[r_ba]],[r_Sa]]],[11,r_Mc,E,r_ud,55,[[[r_ba]]]],[11,r_Nc,E,r_vd,55,[[[r_ba],[r_Sa]]]],[11,r_Oc,E,r_Pc,55,[[[r_ba]],[r_Sa]]],[11,r_Qc,E,r_wd,55,[[[r_ba]]]],[11,r_Rc,E,r_xd,55,[[[r_ba],[r_Sa]]]],[11,r_Sc,E,r_Pc,55,[[[r_ba]],[r_Sa]]],[11,r_Tc,E,r_yd,55,[[[r_ba],[r_Fd,[r_zd]]]]],[11,r_Uc,E,r_Ad,55,[[[r_ba],[r_Fd,[r_Bd]]]]],[11,r_Vc,E,r_Cd,55,[[[r_ba],[r_Nb]]]],[11,r_Wc,E,r_Dd,55,[[[r_ba]],[r_Nb]]],[11,r_Xc,E,r_Ed,55,[[[r_ba]]]],[11,r_Yc,E,r_Zc,55,[[[r_ba],[r_0c]]]],[11,r_1c,E,r_2c,55,[[[r_ba],[r_0c]]]],[11,r_3c,E,r_4c,55,[[[r_ba],[r_Ob]]]],[11,r_Gd,r_Fb,r_5c,57,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_tc,E,r_6c,57,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_sa,E,r_7c,57,N],[11,r_ta,E,r_8c,57,N],[11,r_ua,E,r_9c,57,N],[11,r_uc,E,r_ad,57,N],[11,r_vc,E,r_bd,57,N],[11,r_wc,E,r_cd,57,N],[11,r_xc,E,r_dd,57,N],[11,r_Wa,E,r_ed,57,N],[11,r_yc,E,r_fd,57,N],[11,r_zc,E,r_gd,57,N],[11,r_va,E,r_hd,57,N],[11,r_ja,E,r_id,57,[[[r_ba]],[r_la]]],[11,r_Ac,E,r_jd,57,[[[r_ba],[r_Sa]]]],[11,r_Bc,E,r_kd,57,[[[r_ba]],[r_Sa]]],[11,r_Cc,E,r_ld,57,[[[r_ba]]]],[11,r_Dc,E,r_md,57,[[[r_ba]],[r_Sa]]],[11,r_Ec,E,r_nd,57,[[[r_ba]],[r_Xa]]],[11,r_Fc,E,r_od,57,[[[r_ba],[r_Xa]]]],[11,r_Gc,E,r_pd,57,[[[r_ba]],[r_Xa]]],[11,r_Hc,E,r_qd,57,[[[r_ba],[r_Xa]]]],[11,r_Ic,E,r_rd,57,[[[r_ba],[r_Xa]]]],[11,r_Jc,E,r_sd,57,[[[r_ba]]]],[11,r_Kc,E,r_td,57,[[[r_ba],[r_Sa]]]],[11,r_Lc,E,r_Pc,57,[[[r_ba]],[r_Sa]]],[11,r_Mc,E,r_ud,57,[[[r_ba]]]],[11,r_Nc,E,r_vd,57,[[[r_ba],[r_Sa]]]],[11,r_Oc,E,r_Pc,57,[[[r_ba]],[r_Sa]]],[11,r_Qc,E,r_wd,57,[[[r_ba]]]],[11,r_Rc,E,r_xd,57,[[[r_ba],[r_Sa]]]],[11,r_Sc,E,r_Pc,57,[[[r_ba]],[r_Sa]]],[11,r_Tc,E,r_yd,57,[[[r_ba],[r_Fd,[r_zd]]]]],[11,r_Uc,E,r_Ad,57,[[[r_ba],[r_Fd,[r_Bd]]]]],[11,r_Vc,E,r_Cd,57,[[[r_ba],[r_Nb]]]],[11,r_Wc,E,r_Dd,57,[[[r_ba]],[r_Nb]]],[11,r_Xc,E,r_Ed,57,[[[r_ba]]]],[11,r_Yc,E,r_Zc,57,[[[r_ba],[r_0c]]]],[11,r_1c,E,r_2c,57,[[[r_ba],[r_0c]]]],[11,r_3c,E,r_4c,57,[[[r_ba],[r_Ob]]]],[11,r_Gd,r_Gb,r_5c,58,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_tc,E,r_6c,58,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_sa,E,r_7c,58,N],[11,r_ta,E,r_8c,58,N],[11,r_ua,E,r_9c,58,N],[11,r_uc,E,r_ad,58,N],[11,r_vc,E,r_bd,58,N],[11,r_wc,E,r_cd,58,N],[11,r_xc,E,r_dd,58,N],[11,r_Wa,E,r_ed,58,N],[11,r_yc,E,r_fd,58,N],[11,r_zc,E,r_gd,58,N],[11,r_va,E,r_hd,58,N],[11,r_ja,E,r_id,58,[[[r_ba]],[r_la]]],[11,r_Ac,E,r_jd,58,[[[r_ba],[r_Sa]]]],[11,r_Bc,E,r_kd,58,[[[r_ba]],[r_Sa]]],[11,r_Cc,E,r_ld,58,[[[r_ba]]]],[11,r_Dc,E,r_md,58,[[[r_ba]],[r_Sa]]],[11,r_Ec,E,r_nd,58,[[[r_ba]],[r_Xa]]],[11,r_Fc,E,r_od,58,[[[r_ba],[r_Xa]]]],[11,r_Gc,E,r_pd,58,[[[r_ba]],[r_Xa]]],[11,r_Hc,E,r_qd,58,[[[r_ba],[r_Xa]]]],[11,r_Ic,E,r_rd,58,[[[r_ba],[r_Xa]]]],[11,r_Jc,E,r_sd,58,[[[r_ba]]]],[11,r_Kc,E,r_td,58,[[[r_ba],[r_Sa]]]],[11,r_Lc,E,r_Pc,58,[[[r_ba]],[r_Sa]]],[11,r_Mc,E,r_ud,58,[[[r_ba]]]],[11,r_Nc,E,r_vd,58,[[[r_ba],[r_Sa]]]],[11,r_Oc,E,r_Pc,58,[[[r_ba]],[r_Sa]]],[11,r_Qc,E,r_wd,58,[[[r_ba]]]],[11,r_Rc,E,r_xd,58,[[[r_ba],[r_Sa]]]],[11,r_Sc,E,r_Pc,58,[[[r_ba]],[r_Sa]]],[11,r_Tc,E,r_yd,58,[[[r_ba],[r_Fd,[r_zd]]]]],[11,r_Uc,E,r_Ad,58,[[[r_ba],[r_Fd,[r_Bd]]]]],[11,r_Vc,E,r_Cd,58,[[[r_ba],[r_Nb]]]],[11,r_Wc,E,r_Dd,58,[[[r_ba]],[r_Nb]]],[11,r_Xc,E,r_Ed,58,[[[r_ba]]]],[11,r_Yc,E,r_Zc,58,[[[r_ba],[r_0c]]]],[11,r_1c,E,r_2c,58,[[[r_ba],[r_0c]]]],[11,r_3c,E,r_4c,58,[[[r_ba],[r_Ob]]]],[11,r_Gd,r_Hb,r_5c,59,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_tc,E,r_6c,59,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_sa,E,r_7c,59,N],[11,r_ta,E,r_8c,59,N],[11,r_ua,E,r_9c,59,N],[11,r_uc,E,r_ad,59,N],[11,r_vc,E,r_bd,59,N],[11,r_wc,E,r_cd,59,N],[11,r_xc,E,r_dd,59,N],[11,r_Wa,E,r_ed,59,N],[11,r_yc,E,r_fd,59,N],[11,r_zc,E,r_gd,59,N],[11,r_va,E,r_hd,59,N],[11,r_ja,E,r_id,59,[[[r_ba]],[r_la]]],[11,r_Ac,E,r_jd,59,[[[r_ba],[r_Sa]]]],[11,r_Bc,E,r_kd,59,[[[r_ba]],[r_Sa]]],[11,r_Cc,E,r_ld,59,[[[r_ba]]]],[11,r_Dc,E,r_md,59,[[[r_ba]],[r_Sa]]],[11,r_Ec,E,r_nd,59,[[[r_ba]],[r_Xa]]],[11,r_Fc,E,r_od,59,[[[r_ba],[r_Xa]]]],[11,r_Gc,E,r_pd,59,[[[r_ba]],[r_Xa]]],[11,r_Hc,E,r_qd,59,[[[r_ba],[r_Xa]]]],[11,r_Ic,E,r_rd,59,[[[r_ba],[r_Xa]]]],[11,r_Jc,E,r_sd,59,[[[r_ba]]]],[11,r_Kc,E,r_td,59,[[[r_ba],[r_Sa]]]],[11,r_Lc,E,r_Pc,59,[[[r_ba]],[r_Sa]]],[11,r_Mc,E,r_ud,59,[[[r_ba]]]],[11,r_Nc,E,r_vd,59,[[[r_ba],[r_Sa]]]],[11,r_Oc,E,r_Pc,59,[[[r_ba]],[r_Sa]]],[11,r_Qc,E,r_wd,59,[[[r_ba]]]],[11,r_Rc,E,r_xd,59,[[[r_ba],[r_Sa]]]],[11,r_Sc,E,r_Pc,59,[[[r_ba]],[r_Sa]]],[11,r_Tc,E,r_yd,59,[[[r_ba],[r_Fd,[r_zd]]]]],[11,r_Uc,E,r_Ad,59,[[[r_ba],[r_Fd,[r_Bd]]]]],[11,r_Vc,E,r_Cd,59,[[[r_ba],[r_Nb]]]],[11,r_Wc,E,r_Dd,59,[[[r_ba]],[r_Nb]]],[11,r_Xc,E,r_Ed,59,[[[r_ba]]]],[11,r_Yc,E,r_Zc,59,[[[r_ba],[r_0c]]]],[11,r_1c,E,r_2c,59,[[[r_ba],[r_0c]]]],[11,r_3c,E,r_4c,59,[[[r_ba],[r_Ob]]]],[11,r_Gd,r_Ib,r_5c,60,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_tc,E,r_6c,60,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_sa,E,r_7c,60,N],[11,r_ta,E,r_8c,60,N],[11,r_ua,E,r_9c,60,N],[11,r_uc,E,r_ad,60,N],[11,r_vc,E,r_bd,60,N],[11,r_wc,E,r_cd,60,N],[11,r_xc,E,r_dd,60,N],[11,r_Wa,E,r_ed,60,N],[11,r_yc,E,r_fd,60,N],[11,r_zc,E,r_gd,60,N],[11,r_va,E,r_hd,60,N],[11,r_ja,E,r_id,60,[[[r_ba]],[r_la]]],[11,r_Ac,E,r_jd,60,[[[r_ba],[r_Sa]]]],[11,r_Bc,E,r_kd,60,[[[r_ba]],[r_Sa]]],[11,r_Cc,E,r_ld,60,[[[r_ba]]]],[11,r_Dc,E,r_md,60,[[[r_ba]],[r_Sa]]],[11,r_Ec,E,r_nd,60,[[[r_ba]],[r_Xa]]],[11,r_Fc,E,r_od,60,[[[r_ba],[r_Xa]]]],[11,r_Gc,E,r_pd,60,[[[r_ba]],[r_Xa]]],[11,r_Hc,E,r_qd,60,[[[r_ba],[r_Xa]]]],[11,r_Ic,E,r_rd,60,[[[r_ba],[r_Xa]]]],[11,r_Jc,E,r_sd,60,[[[r_ba]]]],[11,r_Kc,E,r_td,60,[[[r_ba],[r_Sa]]]],[11,r_Lc,E,r_Pc,60,[[[r_ba]],[r_Sa]]],[11,r_Mc,E,r_ud,60,[[[r_ba]]]],[11,r_Nc,E,r_vd,60,[[[r_ba],[r_Sa]]]],[11,r_Oc,E,r_Pc,60,[[[r_ba]],[r_Sa]]],[11,r_Qc,E,r_wd,60,[[[r_ba]]]],[11,r_Rc,E,r_xd,60,[[[r_ba],[r_Sa]]]],[11,r_Sc,E,r_Pc,60,[[[r_ba]],[r_Sa]]],[11,r_Tc,E,r_yd,60,[[[r_ba],[r_Fd,[r_zd]]]]],[11,r_Uc,E,r_Ad,60,[[[r_ba],[r_Fd,[r_Bd]]]]],[11,r_Vc,E,r_Cd,60,[[[r_ba],[r_Nb]]]],[11,r_Wc,E,r_Dd,60,[[[r_ba]],[r_Nb]]],[11,r_Xc,E,r_Ed,60,[[[r_ba]]]],[11,r_Yc,E,r_Zc,60,[[[r_ba],[r_0c]]]],[11,r_1c,E,r_2c,60,[[[r_ba],[r_0c]]]],[11,r_3c,E,r_4c,60,[[[r_ba],[r_Ob]]]],[11,r_Gd,r_Jb,r_5c,61,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_tc,E,r_6c,61,[[[r_ba]],[r_ja,[r_la,r_ka]]]],[11,r_sa,E,r_7c,61,N],[11,r_ta,E,r_8c,61,N],[11,r_ua,E,r_9c,61,N],[11,r_uc,E,r_ad,61,N],[11,r_vc,E,r_bd,61,N],[11,r_wc,E,r_cd,61,N],[11,r_xc,E,r_dd,61,N],[11,r_Wa,E,r_ed,61,N],[11,r_yc,E,r_fd,61,N],[11,r_zc,E,r_gd,61,N],[11,r_va,E,r_hd,61,N],[11,r_ja,E,r_id,61,[[[r_ba]],[r_la]]],[11,r_Ac,E,r_jd,61,[[[r_ba],[r_Sa]]]],[11,r_Bc,E,r_kd,61,[[[r_ba]],[r_Sa]]],[11,r_Cc,E,r_ld,61,[[[r_ba]]]],[11,r_Dc,E,r_md,61,[[[r_ba]],[r_Sa]]],[11,r_Ec,E,r_nd,61,[[[r_ba]],[r_Xa]]],[11,r_Fc,E,r_od,61,[[[r_ba],[r_Xa]]]],[11,r_Gc,E,r_pd,61,[[[r_ba]],[r_Xa]]],[11,r_Hc,E,r_qd,61,[[[r_ba],[r_Xa]]]],[11,r_Ic,E,r_rd,61,[[[r_ba],[r_Xa]]]],[11,r_Jc,E,r_sd,61,[[[r_ba]]]],[11,r_Kc,E,r_td,61,[[[r_ba],[r_Sa]]]],[11,r_Lc,E,r_Pc,61,[[[r_ba]],[r_Sa]]],[11,r_Mc,E,r_ud,61,[[[r_ba]]]],[11,r_Nc,E,r_vd,61,[[[r_ba],[r_Sa]]]],[11,r_Oc,E,r_Pc,61,[[[r_ba]],[r_Sa]]],[11,r_Qc,E,r_wd,61,[[[r_ba]]]],[11,r_Rc,E,r_xd,61,[[[r_ba],[r_Sa]]]],[11,r_Sc,E,r_Pc,61,[[[r_ba]],[r_Sa]]],[11,r_Tc,E,r_yd,61,[[[r_ba],[r_Fd,[r_zd]]]]],[11,r_Uc,E,r_Ad,61,[[[r_ba],[r_Fd,[r_Bd]]]]],[11,r_Vc,E,r_Cd,61,[[[r_ba],[r_Nb]]]],[11,r_Wc,E,r_Dd,61,[[[r_ba]],[r_Nb]]],[11,r_Xc,E,r_Ed,61,[[[r_ba]]]],[11,r_Yc,E,r_Zc,61,[[[r_ba],[r_0c]]]],[11,r_1c,E,r_2c,61,[[[r_ba],[r_0c]]]],[11,r_3c,E,r_4c,61,[[[r_ba],[r_Ob]]]],[11,r_Jd,r_tb,E,37,[[[r_ba]],[r_ja,[r_ka]]]],[11,r_Hd,E,r_Kd,37,[[[r_ba]],[r_ja,[r_Id,r_ka]]]],[11,r_Jd,r_ub,E,38,[[[r_ba]],[r_ja,[r_ka]]]],[11,r_Hd,E,r_Kd,38,[[[r_ba]],[r_ja,[r_Id,r_ka]]]],[11,r_Hd,r_wb,r_Kd,43,[[[r_ba]],[r_ja,[r_Id,r_ka]]]],[11,r_Hd,r_xb,E,44,[[[r_ba]],[r_ja,[r_Id,r_ka]]]],[11,r_Hd,r_yb,E,45,[[[r_ba]],[r_ja,[r_Id,r_ka]]]],[11,r_Jd,r_Ab,E,51,[[[r_ba]],[r_ja,[r_ka]]]],[11,r_Hd,E,E,51,[[[r_ba]],[r_ja,[r_Id,r_ka]]]],[11,r_Jd,r_Bb,E,52,[[[r_ba]],[r_ja,[r_ka]]]],[11,r_Hd,E,E,52,[[[r_ba]],[r_ja,[r_Id,r_ka]]]],[11,r_Hd,r_Cb,E,53,[[[r_ba]],[r_ja,[r_Id,r_ka]]]],[11,r_Hd,r_Db,E,54,[[[r_ba]],[r_ja,[r_Id,r_ka]]]],[11,r_Jd,r_Eb,E,55,[[[r_ba]],[r_ja,[r_ka]]]],[11,r_Hd,E,E,55,[[[r_ba]],[r_ja,[r_Id,r_ka]]]],[11,r_Hd,r_Fb,r_Kd,57,[[[r_ba]],[r_ja,[r_Id,r_ka]]]],[11,r_Jd,r_Gb,E,58,[[[r_ba]],[r_ja,[r_ka]]]],[11,r_Hd,E,E,58,[[[r_ba]],[r_ja,[r_Id,r_ka]]]],[11,r_Jd,r_Hb,E,59,[[[r_ba]],[r_ja,[r_ka]]]],[11,r_Hd,E,E,59,[[[r_ba]],[r_ja,[r_Id,r_ka]]]],[11,r_Jd,r_Ib,E,60,[[[r_ba]],[r_ja,[r_ka]]]],[11,r_Hd,E,E,60,[[[r_ba]],[r_ja,[r_Id,r_ka]]]],[11,r_Jd,r_Jb,E,61,[[[r_ba]],[r_ja,[r_ka]]]],[11,r_Hd,E,E,61,[[[r_ba]],[r_ja,[r_Id,r_ka]]]],[11,r_Ld,r_yb,r_Td,45,N],[11,r_Md,E,r_Ud,45,N],[11,r_Nd,E,r_Xd,45,[[[r_ba],[r_Xa]],[r_ja,[r_ka]]]],[11,r_Od,E,r_Vd,45,[[[r_ba],[r_Xa]]]],[11,r_Pd,E,r_Wd,45,N],[11,r_Qd,E,r_Sd,45,[[[r_ba]],[r_ja,[r_ka]]]],[11,r_Rd,E,r_Sd,45,[[[r_ba]],[r_ja,[r_ka]]]],[11,r_Ld,r_Ab,r_Td,51,N],[11,r_Md,E,r_Ud,51,N],[11,r_Od,E,r_Vd,51,[[[r_ba],[r_Xa]]]],[11,r_Pd,E,r_Wd,51,N],[11,r_Qd,E,r_Sd,51,[[[r_ba]],[r_ja,[r_ka]]]],[11,r_Rd,E,r_Sd,51,[[[r_ba]],[r_ja,[r_ka]]]],[11,r_Nd,E,r_Xd,51,[[[r_ba],[r_Xa]],[r_ja,[r_ka]]]],[11,r_Ld,r_Bb,r_Td,52,N],[11,r_Md,E,r_Ud,52,N],[11,r_Od,E,r_Vd,52,[[[r_ba],[r_Xa]]]],[11,r_Pd,E,r_Wd,52,N],[11,r_Qd,E,r_Sd,52,[[[r_ba]],[r_ja,[r_ka]]]],[11,r_Rd,E,r_Sd,52,[[[r_ba]],[r_ja,[r_ka]]]],[11,r_Nd,E,r_Xd,52,[[[r_ba],[r_Xa]],[r_ja,[r_ka]]]],[11,r_7a,r_Gb,E,58,[[[r_ba],[r_Xa]]]],[11,r_Yd,E,E,58,N],[11,r_Zd,E,E,58,N],[11,r_7a,r_Hb,E,59,[[[r_ba],[r_Xa]]]],[11,r_Yd,E,E,59,N],[11,r_Zd,E,E,59,N],[11,r_7a,r_Ib,E,60,[[[r_ba],[r_Xa]]]],[11,r_Yd,E,E,60,N],[11,r_Zd,E,E,60,N],[11,r_0d,r_vb,E,39,[[[r_ba],[T],[T],[T]],[r_Xa]]],[11,r_0d,E,E,40,[[[r_ba],[T],[T],[T]],[r_Xa]]],[11,r_0d,E,E,41,[[[r_ba],[T],[T],[T]],[r_Xa]]],[11,r_0d,E,E,42,[[[r_ba],[T],[T],[T]],[r_Xa]]],[11,r_Ua,r_bb,"Create a new empty `PerturbationVector`",0,[[],[r_gc]]],[11,"add",E,"Add an index `x_idx` and the corresponding function…",0,[[[r_ba],[r_Da],["vec",[r_Da]]],[r_gc]]],[11,r_Ua,r_fa,r_Ta,62,[[[T],[r_Xa]],[r_Id]]],[11,r_1d,E,"Returns the parameter vector",62,[[[r_ba]],[T]]],[11,"cost",E,"Returns the cost function value",62,[[[r_ba]],[r_Xa]]],[11,"add_kv",E,"Adds an `ArgminKV`",62,[[[r_ba],[r_pa]],[r_Id]]],[11,"get_kv",E,"Returns an `ArgminKV`",62,[[[r_ba]],[r_9b,[r_pa]]]],[11,r_2d,E,"Returns `true` if a solver terminated and `false` otherwise",12,[[[r_ba]],[r_Xb]]],[11,r_Ma,E,"Returns a texual representation of what happened",12,[[[r_ba]],[r_0c]]],[11,r_Ua,E,E,63,[[],[r_ec]]],[11,r_ce,E,E,63,[[[r_ba],[r_Fd,[r_Bd]]],[r_ec]]],[11,r_Ua,r_mb,E,16,[[["l"],["e"],["p"]],[r_Ba]]],[11,r_Ua,r_fa,r_Ta,20,[[],[r_pa]]],[11,r_ce,E,"Push a key-value pair to the `kv` vector.",20,[[[r_ba],[r_0c],[T]],[r_pa]]],[11,"merge",E,"Merge another `kv` into `self.kv`",20,[[[r_ba],[r_pa]],[r_pa]]],[11,r_Ua,E,r_Ta,22,[[[T],[r_Xa],[r_Sa],[r_Nb]],[r_la]]],[11,r_Ua,r_pb,E,64,[[[r_0c],[r_0c]],[r_Rb]]],[11,"set_serializer",E,E,64,[[[r_ba],[r_Qb]],[r_Rb]]],[11,r_de,E,E,64,[[[r_ba],[r_Ub]],[r_Rb]]],[11,r_Ua,r_fa,r_Ta,65,N],[11,"kv_for_logs",E,"Return the KV for the initial logging",65,[[[r_ba]],[r_pa]]],[11,"kv_for_iter",E,"Return the KV for logging of the iterations",65,[[[r_ba]],[r_pa]]],[11,"reset",E,"Reset `self` to its initial state.",65,N],[11,r_sa,E,"Apply the operator to `param`",65,N],[11,r_ta,E,"Compute the gradient at `param`",65,N],[11,r_ua,E,"Compute the hessian at `param`",65,N],[11,r_va,E,"Modify a `param` with the `modify` method of `operator`.",65,N],[11,r_xc,E,"Set the current parameter vector",65,N],[11,r_uc,E,"Return the current parameter vector",65,N],[11,r_zc,E,"Set the new best parameter vector",65,N],[11,"best_param",E,"Return the current best parameter vector",65,N],[11,r_Fc,E,"Set the current cost function value",65,[[[r_ba],[r_Xa]],[r_cc]]],[11,r_Ec,E,"Return the current cost function value",65,[[[r_ba]],[r_Xa]]],[11,r_Hc,E,"Set the cost function value of the current best parameter…",65,[[[r_ba],[r_Xa]],[r_cc]]],[11,r_Gc,E,"Return the cost function value of the current best…",65,[[[r_ba]],[r_Xa]]],[11,r_Wa,E,"Set the current gradient",65,N],[11,r_vc,E,"Return the current gradient",65,N],[11,r_yc,E,"Set the current hessian",65,N],[11,r_wc,E,"Return the current hessian",65,N],[11,r_Ic,E,"Set the target cost function value",65,[[[r_ba],[r_Xa]],[r_cc]]],[11,"target_cost",E,"Return the target cost function value",65,[[[r_ba]],[r_Xa]]],[11,r_Cc,E,"Increment the number of iterations.",65,[[[r_ba]],[r_cc]]],[11,r_Dc,E,"Return the current number of iterations",65,[[[r_ba]],[r_Sa]]],[11,r_Jc,E,r_3d,65,[[[r_ba]],[r_cc]]],[11,r_Kc,E,r_4d,65,[[[r_ba],[r_Sa]],[r_cc]]],[11,r_Lc,E,r_5d,65,[[[r_ba]],[r_Sa]]],[11,r_Mc,E,r_6d,65,[[[r_ba]],[r_cc]]],[11,r_Nc,E,r_7d,65,[[[r_ba],[r_Sa]],[r_cc]]],[11,r_Oc,E,r_na,65,[[[r_ba]],[r_Sa]]],[11,r_Qc,E,r_8d,65,[[[r_ba]],[r_cc]]],[11,r_Rc,E,r_9d,65,[[[r_ba],[r_Sa]],[r_cc]]],[11,r_Sc,E,r_na,65,[[[r_ba]],[r_Sa]]],[11,r_Ac,E,"Set the maximum number of iterations.",65,[[[r_ba],[r_Sa]],[r_cc]]],[11,r_Bc,E,"Return the maximum number of iterations",65,[[[r_ba]],[r_Sa]]],[11,r_Vc,E,"Set the `TerminationReason`",65,[[[r_ba],[r_Nb]],[r_cc]]],[11,r_ae,E,"Return the `TerminationReason`",65,[[[r_ba]],[r_Nb]]],[11,"termination_reason_text",E,"Return the textual representation of the `TerminationReason`",65,[[[r_ba]],[r_0c]]],[11,r_2d,E,"Return whether the algorithm has terminated or not",65,[[[r_ba]],[r_Xb]]],[11,r_ja,E,"Return the result.",65,[[[r_ba]],[r_la]]],[11,"set_total_time",E,"Set the total time needed by the solver",65,[[[r_ba],[r_be]],[r_cc]]],[11,"total_time",E,"Return the total time",65,[[[r_ba]],[r_be]]],[11,r_Tc,E,"Add a logger to the list of loggers",65,[[[r_ba],[r_Fd,[r_zd]]],[r_cc]]],[11,r_Uc,E,"Add a writer to the list of writers",65,[[[r_ba],[r_Fd,[r_Bd]]],[r_cc]]],[11,r_Zb,E,"Log a `kv`",65,[[[r_ba],[r_pa]],[r_ja,[r_ka]]]],[11,r_Yb,E,"Log a message and a `kv`",65,[[[r_ba],[r_0c],[r_pa]],[r_ja,[r_ka]]]],[11,r_Wb,E,"Write",65,N],[11,r_Yc,E,r_Zc,65,N],[11,r_1c,E,r_2c,65,N],[11,r_3c,E,E,65,N],[11,"store_checkpoint",E,E,65,[[[r_ba],[T]],[r_ja,[r_ka]]]],[11,r_Ua,E,E,66,[[],[r_5b]]],[11,r_Ua,E,r_Ta,67,[[],[r_dc]]],[11,r_ce,E,"Push another `ArgminLog` to the `logger` field",67,[[[r_ba],[r_Fd,[r_zd]]],[r_dc]]],[11,r_Ua,E,E,68,[[],[r_4b]]],[11,r_Ua,E,E,69,[[[r_0c],[r_Ob]],[r_ja,[r_Tb,r_ka]]]],[11,"set_dir",E,E,69,N],[11,"dir",E,E,69,[[[r_ba]],[r_ob]]],[11,"set_name",E,E,69,N],[11,r_fe,E,E,69,[[[r_ba]],[r_ob]]],[11,r_de,E,E,69,N],[11,"store",E,E,69,[[[r_ba],[T],[r_ob]],[r_ja,[r_ka]]]],[11,"store_cond",E,E,69,[[[r_ba],[T],[r_Sa]],[r_ja,[r_ka]]]],[11,"term",E,"Log to the terminal in a blocking way",70,[[],[r_Fd,[r_ee]]]],[11,"term_noblock",E,"Log to the terminal in a non-blocking way (in case of…",70,[[],[r_Fd,[r_ee]]]],[11,"file",E,"Log JSON to a file in a blocking way",70,[[[r_0c]],[r_ja,[r_Fd,r_ka]]]],[11,"file_noblock",E,"Log JSON to a file in a non-blocking way (in case of…",70,[[[r_0c]],[r_ja,[r_Fd,r_ka]]]],[11,"from_boxed_compat",E,"Creates an `Error` from `Box<std::error::Error>`.",71,[[["box",[r_ka]]],[r_ka]]],[11,r_rb,E,"Return a reference to the underlying failure that this…",71,[[[r_ba]],[r_sb]]],[11,r_fe,E,"Returns the name of the underlying fail.",71,[[[r_ba]],[r_9b,[r_0c]]]],[11,r_fc,E,"Returns a reference to the underlying cause of this…",71,[[[r_ba]],[r_sb]]],[11,r_ac,E,"Gets a reference to the `Backtrace` for this `Error`.",71,[[[r_ba]],[r_ac]]],[11,r_ge,E,"Provides context for this `Error`.",71,[[[r_ba],["d"]],[r_ge]]],[11,r_he,E,"Wraps `Error` in a compatibility type.",71,[[[r_ba]],[r_he,[r_ka]]]],[11,"downcast",E,r_je,71,[[[r_ba]],[r_ja,[r_ka]]]],[11,"find_root_cause",E,"Returns the \"root cause\" of this error - the last value in…",71,[[[r_ba]],[r_sb]]],[11,"iter_causes",E,"Returns a iterator over the causes of this error with the…",71,[[[r_ba]],[r_ie]]],[11,"iter_chain",E,"Returns a iterator over all fails up the chain from the…",71,[[[r_ba]],[r_ie]]],[11,"downcast_ref",E,r_je,71,[[[r_ba]],[r_9b]]],[11,"downcast_mut",E,r_je,71,[[[r_ba]],[r_9b]]],[11,"root_cause",E,"Deprecated alias to `find_root_cause`.",71,[[[r_ba]],[r_sb]]],[11,r_ie,E,"Deprecated alias to `iter_causes`.",71,[[[r_ba]],[r_ie]]]],"p":[[3,r_ke],[8,r_le],[8,r_me],[8,r_ne],[8,r_oe],[8,r_pe],[8,r_qe],[8,r_re],[8,r_se],[8,r_te],[8,r_ue],[8,r_ve],[4,r_we],[8,r_xe],[8,r_ye],[8,r_ze],[3,r_Ae],[8,r_Be],[8,r_Ce],[8,r_De],[3,r_Ee],[8,r_Fe],[3,r_Ge],[8,r_He],[4,r_Ie],[8,r_Je],[4,r_Ke],[8,r_Le],[8,r_Me],[4,r_Ne],[4,r_Pa],[4,r_Oe],[4,r_Pe],[8,r_Qe],[8,r_Re],[8,r_Se],[8,r_Te],[3,r_Ue],[3,r_Ve],[3,r_We],[3,r_Xe],[3,r_Ye],[3,r_Ze],[3,r_0e],[3,r_1e],[3,r_2e],[8,r_3e],[3,r_4e],[3,r_5e],[3,r_6e],[3,r_7e],[3,r_8e],[3,r_9e],[3,r_af],[3,r_bf],[3,"BFGS"],[4,r_cf],[3,r_df],[3,r_ef],[3,r_ff],[3,r_gf],[3,r_hf],[3,r_if],[3,r_jf],[3,r_kf],[3,r_lf],[3,r_mf],[3,r_nf],[3,r_of],[3,r_pf],[3,r_qf],[3,r_Pa]]};
initSearch(searchIndex);addSearchOptions(searchIndex);