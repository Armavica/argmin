var N=null,E="",T="t",U="u",searchIndex={};
var r_0a="set_alpha_min_max",r_0b="nooperator",r_0c="Sets the current Hessian to `hessian`.",r_0d="context",r_0e="ArgminIterationData",r_1a="set alpha limits",r_1b="bool",r_1c="Sets the best parameter vector to `param`.",r_1d="compat",r_1e="NoOperator",r_2a="argmin::solver::newton",r_2b="serialize",r_2c="Modify the parameter vector by calling the `modify` method…",r_2d="causes",r_2e="ArgminBase",r_3a="set_gamma",r_3b="__s",r_3c="Returns the result of the optimization.",r_3d="Attempts to downcast this `Error` to a particular `Fail`…",r_3e="ArgminWriter",r_4a="set gamma",r_4b="partial_cmp",r_4c="Sets the maximum number of iterations to `iters`.",r_4d="PerturbationVector",r_4e="ArgminLogger",r_5a="box",r_5b="option",r_5c="Returns the maximum number of iterations.",r_5d="FiniteDiff",r_5e="ArgminCheckpoint",r_6a="argmin::solver::trustregion",r_6b="backtrace",r_6c="Increments the iteration counter.",r_6d="ArgminSolver",r_6e="ArgminSlogLogger",r_7a="set_epsilon",r_7b="clone",r_7c="Returns the current number of iterations.",r_7d="ArgminNextIter",r_7e="MinimalNoOperator",r_8a="set_radius",r_8b="argminbase",r_8c="Returns the most recently stored cost function value.",r_8d="ArgminLog",r_8e="WriteToFile",r_9a="set_eta",r_9b="argminwriter",r_9c="Sets the current cost function value to `cost`",r_9d="ArgminWrite",r_Aa="Return zero(s)",r_Ab="argmin::solver::linesearch::hagerzhang",r_Ac="set_target_cost",r_Ad="set_initial_gradient",r_Ae="ArgminNorm",r_Ba="(Pointwise) Multiply a `T` with `self`",r_Bb="argmin::solver::linesearch::morethuente",r_Bc="increment_cost_func_count",r_Bd="calc_initial_cost",r_Be="ArgminDot",r_Ca="Add a `T` to `self`",r_Cb="argmin::solver::newton::newton_cg",r_Cc="increase_cost_func_count",r_Cd="calc_initial_gradient",r_Ce="ConjugateGradient",r_Da="Subtract a `T` scaled by an `U` from `self`",r_Db="argmin::solver::newton::newton_method",r_Dc="cost_func_count",r_Dd="Calculate initial cost function value",r_De="NonlinearConjugateGradient",r_Ea="Subtract a `T` from `self`",r_Eb="argmin::solver::quasinewton::bfgs",r_Ec="increment_grad_func_count",r_Ed="Set search direction",r_Ee="FletcherReeves",r_Fa="argmin::prelude::ArgminError",r_Fb="argmin::solver::simulatedannealing",r_Fc="increase_grad_func_count",r_Fd="Set initial parameter",r_Fe="PolakRibiere",r_Ga="text",r_Gb="argmin::solver::trustregion::cauchypoint",r_Gc="grad_func_count",r_Gd="Set initial cost function value",r_Ge="PolakRibierePlus",r_Ha="(Pointwise) Divide a `T` by `self`",r_Hb="argmin::solver::trustregion::dogleg",r_Hc="Returns the current value of the counter for the…",r_Hd="Set initial gradient",r_He="HestenesStiefel",r_Ia="decomposition",r_Ib="argmin::solver::trustregion::steihaug",r_Ic="increment_hessian_func_count",r_Id="Set initial alpha value",r_Ie="SteepestDescent",r_Ja="usize",r_Jb="argmin::solver::trustregion::trustregion_method",r_Jc="increase_hessian_func_count",r_Jd="set_grad",r_Je="Landweber",r_Ka="arraybase",r_Kb="formatter",r_Kc="hessian_func_count",r_Kd="set_hessian",r_Ke="BacktrackingLineSearch",r_La="Compute the l2-norm (`U`) of `self`",r_Lb="write",r_Lc="add_logger",r_Ld="update",r_Le="LineSearchCondition",r_Ma="Dot/scalar product of `T` and `self`",r_Mb="log_info",r_Mc="add_writer",r_Md="param",r_Me="ArmijoCondition",r_Na="Error",r_Nb="log_iter",r_Nc="set_termination_reason",r_Nd="terminated",r_Ne="WolfeCondition",r_Oa="argmin::solver::conjugategradient",r_Ob="Log general info",r_Oc="terminate",r_Od="str",r_Oe="StrongWolfeCondition",r_Pa="u64",r_Pb="This should be used to log iteration data only (because…",r_Pc="base_reset",r_Pd="Increment the cost function evaluation count",r_Pe="GoldsteinCondition",r_Qa="Constructor",r_Qb="terminationreason",r_Qc="Run the optimization algorithm",r_Qd="Increaese the cost function evaluation count by a given…",r_Qe="HagerZhangLineSearch",r_Ra="new",r_Rb="ordering",r_Rc="Run the essential parts of the optimization algorithm (no…",r_Rd="Return the cost function evaluation count",r_Re="MoreThuenteLineSearch",r_Sa="argmin::solver",r_Sb="deserialize",r_Sc="Applies the cost function or operator to a parameter…",r_Sd="Increment the gradient evaluation count",r_Se="NewtonCG",r_Ta="set_linesearch",r_Tb="checkpointmode",r_Tc="Computes the gradient at parameter `param`. Returns an…",r_Td="Increase the gradient evaluation count by a given value",r_Te="Newton",r_Ua="Specify line search method",r_Ub="argmincheckpoint",r_Uc="Computes the Hessian at parameter `param`. Returns an…",r_Ud="Increment the hessian evaluation count",r_Ue="SATempFunc",r_Va="argminlinesearch",r_Vb="__d",r_Vc="Returns the current parameter vector.",r_Vd="Increase the hessian evaluation count by a given value",r_Ve="SimulatedAnnealing",r_Wa="f64",r_Wb="fmt",r_Wc="Returns the most recently stored gradient.",r_Wd="termination_reason",r_We="CauchyPoint",r_Xa="set_cur_grad",r_Xb="hash",r_Xc="Returns the most recently stored Hessian.",r_Xd="duration",r_Xe="Dogleg",r_Ya="argmin::solver::linesearch",r_Yb="default",r_Yc="Sets the current parameter to `param`.",r_Yd="push",r_Ye="Steihaug",r_Za="set current gradient value",r_Zb="minimalnooperator",r_Zc="Sets the current gradient to `grad`.",r_Zd="argminsloglogger",r_Ze="TrustRegion",r_aa="argmin",r_ab="Rastrigin test function",r_ac="argminlogger",r_ad="Returns the best cost function value obtained so far.",r_ae="ArgminOperator",r_ba="self",r_bb="Ackley test function",r_bc="cause",r_bd="Sets the best cost function value.",r_be="ArgminLineSearch",r_ca="Calculation of the Jacobian J(x) of a vector function `fs`…",r_cb="argmin::prelude::finitediff",r_cc="perturbationvector",r_cd="Sets the target cost function value to `cost`. The…",r_ce="ArgminTrustRegion",r_da="Calculation of the product of the Jacobian J(x) of a…",r_db="try_from",r_dc="requires_cur_grad",r_dd="Increments the counter for the computations of the cost…",r_de="ArgminNLCGBetaUpdate",r_ea="Calculation of the product of the Hessian H(x) of a…",r_eb="borrow",r_ec="eval",r_ed="Increases the counter for the computations of the cost…",r_ee="ArgminScaledAdd",r_fa="argmin::prelude",r_fb="type_id",r_fc="fletcherreeves",r_fd="Increments the counter for the computations of the…",r_fe="TerminationReason",r_ga="return current gradient",r_gb="typeid",r_gc="polakribiere",r_gd="Increases the counter for the computations of the gradient…",r_ge="ArgminInv",r_ha="set current gradient",r_hb="borrow_mut",r_hc="polakribiereplus",r_hd="Increments the counter for the computations of the Hessian…",r_he="ArgminZero",r_ia="set current parameter vector",r_ib="try_into",r_ic="hestenesstiefel",r_id="Increases the counter for the computations of the Hessian…",r_ie="ArgminMul",r_ja="result",r_jb="from",r_jc="conjugategradient",r_jd="Attaches a logger which implements `ArgminLog` to the…",r_je="ArgminKV",r_ka="argminresult",r_kb="into",r_kc="cmp",r_kd="argminlog",r_ke="ArgminResult",r_la="error",r_lb="to_owned",r_lc="run_fast",r_ld="Attaches a writer which implements `ArgminWrite` to the…",r_le="ArgminAdd",r_ma="Get current cost function value",r_mb="clone_into",r_mc="cur_param",r_md="argminwrite",r_me="ArgminScaledSub",r_na="Return the gradient evaluation count",r_nb="to_string",r_nc="cur_grad",r_nd="Sets the `TerminationReason`",r_ne="ArgminWeightedDot",r_oa="OperatorOutput",r_ob="string",r_oc="cur_hessian",r_od="Checks whether any of the conditions to terminate is true…",r_oe="ArgminTranspose",r_pa="Hessian",r_pb="argmin::prelude::ctrlc",r_pc="set_cur_param",r_pd="Resets the `base` field to it's initial conditions. This…",r_pe="ArgminEye",r_qa="argminkv",r_qb="as_fail",r_qc="set_cur_hessian",r_qd="arc",r_qe="ArgminSub",r_ra="Parameters",r_rb="argmin::prelude::modcholesky",r_rc="set_best_param",r_rd="run",r_re="CheckpointMode",r_sa="apply",r_sb="fail",r_sc="set_max_iters",r_sd="next_iter",r_se="ArgminError",r_ta="gradient",r_tb="argmin::solver::conjugategradient::cg",r_tc="max_iters",r_td="argminiterationdata",r_te="SignalType",r_ua="hessian",r_ub="argmin::solver::conjugategradient::nonlinear_cg",r_uc="increment_iter",r_ud="init",r_ue="ArgminDiv",r_va="modify",r_vb="argmin::solver::conjugategradient::beta",r_vc="cur_iter",r_vd="Perform one iteration of SA algorithm",r_ve="ModCholeskySE99",r_wa="Set the initial step length",r_wb="argmin::solver::gradientdescent::steepestdescent",r_wc="cur_cost",r_wd="set_search_direction",r_we="ModCholeskyGMW81",r_xa="Set the gradient at the starting point",r_xb="argmin::solver::landweber",r_xc="set_cur_cost",r_xd="set_initial_parameter",r_xe="Decomposition",r_ya="Add a `T` scaled by an `U` to `self`",r_yb="argmin::solver::linesearch::backtracking",r_yc="best_cost",r_yd="set_initial_alpha",r_ye="ModCholeskySE90",r_za="Aborted",r_zb="argmin::solver::linesearch::condition",r_zc="set_best_cost",r_zd="set_initial_cost",r_ze="GershgorinCircles";

searchIndex[r_aa]={"doc":"A pure Rust optimization framework","i":[[0,"prelude",r_aa,"Definition of all relevant traits and types # Re-export of…",N,N],[0,"macros",r_fa,"Macros # Macros",N,N],[0,"finitediff",E,"Finite Differentiation",N,N],[3,r_4d,r_cb,"Perturbation Vector for the accelerated computation of the…",N,N],[12,"x_idx",E,"x indices",0,N],[12,"r_idx",E,"correspoding function indices",0,N],[6,"PerturbationVectors",E,"A collection of `PerturbationVector`s",N,N],[8,r_5d,E,E,N,N],[16,"Jacobian",E,E,1,N],[16,r_pa,E,E,1,N],[16,r_oa,E,E,1,N],[10,"forward_diff",E,"Forward difference calculated as",1,[[[r_ba],["fn"]],[r_ba]]],[10,"central_diff",E,"Central difference calculated as",1,[[[r_ba],["fn"]],[r_ba]]],[10,"forward_jacobian",E,r_ca,1,N],[10,"central_jacobian",E,r_ca,1,N],[10,"forward_jacobian_vec_prod",E,r_da,1,[[[r_ba],["fn"],[r_ba]],[r_ba]]],[10,"central_jacobian_vec_prod",E,r_da,1,[[[r_ba],["fn"],[r_ba]],[r_ba]]],[10,"forward_jacobian_pert",E,E,1,N],[10,"central_jacobian_pert",E,E,1,N],[10,"forward_hessian",E,"Calculation of the Hessian using forward differences",1,N],[10,"central_hessian",E,"Calculation of the Hessian using central differences",1,N],[10,"forward_hessian_vec_prod",E,r_ea,1,[[[r_ba],["fn"],[r_ba]],[r_ba]]],[10,"central_hessian_vec_prod",E,r_ea,1,[[[r_ba],["fn"],[r_ba]],[r_ba]]],[10,"forward_hessian_nograd",E,"Calculation of the Hessian using forward differences…",1,N],[10,"forward_hessian_nograd_sparse",E,"Calculation of a sparse Hessian using forward differences…",1,N],[8,r_6d,r_fa,"Defines the interface to a solver. Usually, there is no…",N,N],[10,r_sa,E,"apply cost function or operator to a parameter vector",2,N],[10,r_ta,E,"compute the gradient for a parameter vector",2,N],[10,r_ua,E,"compute the hessian for a parameter vector",2,N],[10,r_va,E,"modify the parameter vector",2,N],[10,r_mc,E,"return current parameter vector",2,N],[10,r_nc,E,r_ga,2,N],[10,r_oc,E,r_ga,2,N],[10,r_pc,E,r_ia,2,N],[10,r_Xa,E,r_ha,2,N],[10,r_qc,E,r_ha,2,N],[10,r_rc,E,r_ia,2,N],[10,r_rd,E,"Execute the optimization algorithm.",2,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[10,r_lc,E,"Execute the optimization algorithm without Ctrl-C…",2,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[10,r_ja,E,"Returns the best solution found during optimization.",2,[[[r_ba]],[r_ka]]],[10,r_Nc,E,"Set termination reason (doesn't terminate yet! -- this is…",2,N],[10,r_Oc,E,"Evaluate all stopping criterions and return the…",2,[[[r_ba]],[r_Qb]]],[10,r_sc,E,"Set max number of iterations.",2,N],[10,r_tc,E,"Get max number of iterations.",2,[[[r_ba]],[r_Pa]]],[10,r_vc,E,"Get current iteration number.",2,[[[r_ba]],[r_Pa]]],[10,r_uc,E,"Increment the iteration number by one",2,N],[10,r_wc,E,r_ma,2,[[[r_ba]],[r_Wa]]],[10,r_xc,E,r_ma,2,N],[10,r_yc,E,"Get best cost function value",2,[[[r_ba]],[r_Wa]]],[10,r_zc,E,"set best cost value",2,N],[10,r_Ac,E,"Set the target cost function value which is used as a…",2,N],[10,r_Lc,E,"Add a logger to the array of loggers",2,N],[10,r_Mc,E,"Add a writer to the array of writers",2,N],[10,r_Pc,E,"Reset the base of the algorithm to its initial state",2,N],[10,r_Bc,E,r_Pd,2,N],[10,r_Cc,E,r_Qd,2,N],[10,r_Dc,E,r_Rd,2,[[[r_ba]],[r_Pa]]],[10,r_Ec,E,r_Sd,2,N],[10,r_Fc,E,r_Td,2,N],[10,r_Gc,E,r_na,2,[[[r_ba]],[r_Pa]]],[10,r_Ic,E,r_Ud,2,N],[10,r_Jc,E,r_Vd,2,N],[10,r_Kc,E,r_na,2,[[[r_ba]],[r_Pa]]],[8,r_7d,E,"Main part of every solver: `next_iter` computes one…",N,N],[16,r_ra,E,"Parameter vectors",3,N],[16,r_oa,E,"Output of the operator",3,N],[16,r_pa,E,r_pa,3,N],[10,r_sd,E,"Computes one iteration of the algorithm.",3,[[[r_ba]],[r_ja,[r_td,r_la]]]],[11,r_ud,E,"Initializes the algorithm",3,[[[r_ba]],[r_ja,[r_la]]]],[8,r_8d,E,"Defince the interface every logger needs to expose",N,N],[10,r_Mb,E,"Logs general information (a message `msg` and/or key-value…",4,[[[r_ba],[r_Od],[r_qa]],[r_ja,[r_la]]]],[10,r_Nb,E,"Logs information from iterations. Only accepts key-value…",4,[[[r_ba],[r_qa]],[r_ja,[r_la]]]],[8,r_9d,E,"Every writer (which is something that writes parameter…",N,N],[16,"Param",E,E,5,N],[10,r_Lb,E,"Writes the parameter vector somewhere",5,N],[3,r_0e,E,"The datastructure which is returned by the `next_iter`…",N,N],[8,r_ae,E,"This trait needs to be implemented for every operator/cost…",N,N],[16,r_ra,E,"Type of the parameter vector",6,N],[16,r_oa,E,"Output of the operator. Most solvers expect `f64`.",6,N],[16,r_pa,E,"Type of Hessian",6,N],[11,r_sa,E,"Applies the operator/cost function to parameters",6,N],[11,r_ta,E,"Computes the gradient at the given parameters",6,N],[11,r_ua,E,"Computes the hessian at the given parameters",6,N],[11,r_va,E,"Modifies a parameter vector. Comes with a variable that…",6,N],[8,r_be,E,"Defines a common interface to line search methods.…",N,N],[10,r_xd,E,"Set the initial parameter (starting point)",7,N],[10,r_wd,E,"Set the search direction",7,N],[10,r_yd,E,r_wa,7,[[[r_ba],[r_Wa]],[r_ja,[r_la]]]],[10,r_zd,E,"Set the cost function value at the starting point as…",7,N],[10,r_Ad,E,"Set the gradient at the starting point as opposed to…",7,N],[10,r_Bd,E,"calculate the initial cost function value using an…",7,[[[r_ba]],[r_ja,[r_la]]]],[10,r_Cd,E,"calculate the initial gradient using an operator as…",7,[[[r_ba]],[r_ja,[r_la]]]],[8,r_ce,E,"Defines a common interface to methods which calculate…",N,N],[10,r_8a,E,r_wa,8,N],[10,r_Jd,E,r_xa,8,N],[10,r_Kd,E,r_xa,8,N],[8,r_de,E,"Every method for the update of beta needs to implement…",N,N],[10,r_Ld,E,"Update beta Parameter 1: \\nabla f_k Parameter 2: \\nabla…",9,[[[r_ba],[T],[T],[T]],[r_Wa]]],[8,r_ee,E,r_ya,N,N],[10,"scaled_add",E,r_ya,10,[[[r_ba],[U],[T]],["v"]]],[4,r_fe,E,"Indicates why the optimization algorithm stopped",N,N],[13,"NotTerminated",E,"In case it has not terminated yet",11,N],[13,"MaxItersReached",E,"Maximum number of iterations reached",11,N],[13,"TargetCostReached",E,"Target cost function value reached",11,N],[13,"TargetPrecisionReached",E,"Target precision reached",11,N],[13,"AcceptedStallIterExceeded",E,"Acceped stall iter exceeded",11,N],[13,"BestStallIterExceeded",E,"Best stall iter exceeded",11,N],[13,"LineSearchConditionMet",E,"Condition for Line search met",11,N],[13,r_za,E,r_za,11,N],[8,r_ge,E,"Compute the inverse (`T`) of `self`",N,N],[10,"inv",E,E,12,[[[r_ba]],[r_ja,[r_la]]]],[8,r_he,E,"Return param vector of all zeros (for now, this is a hack.…",N,N],[10,"zero_like",E,r_Aa,13,[[[r_ba]],[r_ba]]],[10,"zero",E,r_Aa,13,[[],[r_ba]]],[8,r_ie,E,r_Ba,N,N],[10,"mul",E,r_Ba,14,[[[r_ba],[T]],[U]]],[3,r_1e,E,E,N,N],[3,r_je,E,"A simple key-value storage",N,N],[12,"kv",E,"The actual key value storage",15,N],[3,r_ke,E,"Return struct for all solvers.",N,N],[12,r_Md,E,"Final parameter vector",16,N],[12,"cost",E,"Final cost value",16,N],[12,"iters",E,"Number of iterations",16,N],[12,r_Nd,E,"Indicated whether it terminated or not",16,N],[12,r_Wd,E,"Reason of termination",16,N],[5,"load_checkpoint",E,E,N,[[["p"]],[r_ja,[r_la]]]],[8,r_le,E,r_Ca,N,N],[10,"add",E,r_Ca,17,[[[r_ba],[T]],[U]]],[8,r_me,E,r_Da,N,N],[10,"scaled_sub",E,r_Da,18,[[[r_ba],[U],[T]],["v"]]],[3,r_2e,E,"Storage for data needed by most solvers",N,N],[8,r_ne,E,"Dot/scalar product of `T` and `self` weighted by W (p^TWv)",N,N],[10,"weighted_dot",E,r_Ma,19,[[[r_ba],["v"],[T]],[U]]],[3,r_3e,E,E,N,N],[8,r_oe,E,E,N,N],[10,T,E,E,20,[[[r_ba]],[r_ba]]],[8,r_pe,E,E,N,N],[10,"eye",E,E,21,[[[r_Ja]],[r_ba]]],[10,"eye_like",E,E,21,[[[r_ba]],[r_ba]]],[3,r_4e,E,"Container for `ArgminLog`gers",N,N],[8,r_qe,E,r_Ea,N,N],[10,"sub",E,r_Ea,22,[[[r_ba],[T]],[U]]],[4,r_re,E,E,N,N],[13,"Never",E,E,23,N],[13,"Every",E,E,23,N],[13,"Always",E,E,23,N],[4,r_se,E,E,N,N],[13,"InvalidParameter",E,"Indicates and invalid parameter",24,N],[12,r_Ga,r_Fa,E,24,N],[13,"NotImplemented",r_fa,"Indicates that a function is not implemented",24,N],[12,r_Ga,r_Fa,E,24,N],[13,"NotInitialized",r_fa,"Indicates that a function is not initialized",24,N],[12,r_Ga,r_Fa,E,24,N],[13,"ConditionViolated",r_fa,"Indicates that a condition is violated",24,N],[12,r_Ga,r_Fa,E,24,N],[13,"ImpossibleError",r_fa,"Indicates an impossible error",24,N],[12,r_Ga,r_Fa,E,24,N],[14,"check_param",r_fa,"Release an `T` from an `Option<T>` if it is not `None`. If…",N,N],[5,"set_handler",r_pb,"Register signal handler for Ctrl-C.",N,[[["f"]],[r_ja,[r_la]]]],[4,r_Na,E,"Ctrl-C error.",N,N],[13,"NoSuchSignal",E,"Signal could not be found from the system.",25,N],[13,"MultipleHandlers",E,"Ctrl-C signal handler already registered.",25,N],[13,"System",E,"Unexpected system error.",25,N],[4,r_te,E,"A cross-platform way to represent Ctrl-C or program…",N,N],[13,"Ctrlc",E,"Ctrl-C",26,N],[13,"Termination",E,"Program termination Maps to `SIGTERM` on *nix,…",26,N],[13,"Other",E,"Other signal/event using platform-specific data",26,N],[6,"Signal",E,"Platform specific signal type",N,N],[3,r_5e,r_fa,E,N,N],[3,r_6e,E,"A logger based on `slog`",N,N],[8,r_ue,E,r_Ha,N,N],[10,"div",E,r_Ha,27,[[[r_ba],[T]],[U]]],[0,"modcholesky",E,"Modified Cholesky decompositions Modified Cholesky…",N,N],[8,r_ve,r_rb,"Schnabel & Eskow algorithm (1999)",N,N],[11,"mod_cholesky_se99",E,"Computes the modified Cholesky decomposition with the SE99…",28,[[[r_ba]],[r_Ia]]],[8,r_we,E,"Gill, Murray and Wright (1981)",N,N],[11,"mod_cholesky_gmw81",E,"Computes the modified Cholesky decomposition with the…",29,[[[r_ba]],[r_Ia]]],[3,r_xe,E,E,N,N],[12,"l",E,E,30,N],[12,"e",E,E,30,N],[12,"p",E,E,30,N],[8,r_ye,E,"Schnabel & Eskow algorithm (1990)",N,N],[11,"mod_cholesky_se90",E,"Computes the modified Cholesky decomposition with the SE90…",31,[[[r_ba]],[r_Ia]]],[8,r_ze,E,"Gershgorin circles",N,N],[10,"gershgorin_circles",E,"Computes the Gershgorin Circles of a matrix",32,[[[r_ba]],["vec"]]],[0,"utils",E,"Utility functions",N,N],[5,"eigenvalues_2x2","argmin::prelude::modcholesky::utils","Computes the Eigenvalues of a 2x2 matrix",N,N],[5,"swap_columns",E,"Swaps columns `idx1` and `idx2` of matrix `mat`",N,N],[5,"swap_rows",E,"Swaps rows `idx1` and `idx2` of matrix `mat`",N,N],[5,"index_of_largest",E,"Returns the index of the largest element in a 1D array",N,[[[r_Ka]],[r_Ja]]],[5,"index_of_largest_abs",E,"Returns the index of the element with the largest absolute…",N,[[[r_Ka]],[r_Ja]]],[5,"index_to_permutation_mat",E,"Returns the permutation matrix for a vector of permuted…",N,N],[5,"diag_mat_from_arr",E,"Builds a diagonal matrix from a 1D slice",N,N],[5,"random_householder",E,"Returns a random Householder matrix of dimension `dim` and…",N,[[[r_Ja],["u8"]],[r_Ka,["ownedrepr","dim"]]]],[5,"random_diagonal",E,"Returns a random diagonal matrix with Eigenvalues…",N,N],[14,"make_kv",r_fa,"Creates an `ArgminKV` at compile time in order to avoid…",N,N],[8,r_Ae,E,r_La,N,N],[10,"norm",E,r_La,33,[[[r_ba]],[U]]],[8,r_Be,E,r_Ma,N,N],[10,"dot",E,r_Ma,34,[[[r_ba],[T]],[U]]],[3,r_7e,E,E,N,N],[3,r_Na,E,"The `Error` type, which can contain any failure.",N,N],[3,r_8e,E,E,N,N],[0,"solver",r_aa,"Solvers",N,N],[0,r_jc,r_Sa,"Conjugate Gradient methods",N,N],[0,"cg",r_Oa,"Conjugate gradient method # References:",N,N],[3,r_Ce,r_tb,"The conjugate gradient method is a solver for systems of…",N,N],[11,r_Ra,E,r_Qa,35,[[["o"],[T],[T]],[r_ja,[r_la]]]],[11,"p",E,"Return the current search direction (This is needed by…",35,[[[r_ba]],[T]]],[11,"p_prev",E,"Return the previous search direction (This is needed by…",35,[[[r_ba]],[T]]],[11,"residual",E,"Return the current residual (This is needed by NewtonCG…",35,[[[r_ba]],[T]]],[0,"nonlinear_cg",r_Oa,"Nonlinear conjugate gradient method Important TODO: Find…",N,N],[3,r_De,r_ub,"The nonlinear conjugate gradient is a generalization of…",N,N],[11,r_Ra,E,"Constructor (Polak Ribiere Conjugate Gradient (PR-CG))",36,[[["o"],[T]],[r_ja,[r_la]]]],[11,"new_pr",E,"New PolakRibiere CG (PR-CG)",36,[[["o"],[T]],[r_ja,[r_la]]]],[11,"new_prplus",E,"New PolakRibierePlus CG (PR+-CG)",36,[[["o"],[T]],[r_ja,[r_la]]]],[11,"new_fr",E,"New FletcherReeves CG (FR-CG)",36,[[["o"],[T]],[r_ja,[r_la]]]],[11,"new_hs",E,"New HestenesStiefel CG (HS-CG)",36,[[["o"],[T]],[r_ja,[r_la]]]],[11,r_Ta,E,r_Ua,36,[[[r_ba],[r_5a,[r_Va]]],[r_ba]]],[11,"set_beta_update",E,"Specify beta update method",36,[[[r_ba],[r_5a,["argminnlcgbetaupdate"]]],[r_ba]]],[11,"set_restart_iters",E,"Specifiy the number of iterations after which a restart…",36,[[[r_ba],[r_Pa]],[r_ba]]],[11,"set_restart_orthogonality",E,"Set the value for the orthogonality measure. Setting this…",36,[[[r_ba],[r_Wa]],[r_ba]]],[0,"beta",r_Oa,"Beta update methods for nonlinear CG # Beta update methods",N,N],[3,r_Ee,r_vb,"Fletcher and Reeves (FR) method TODO: Reference",N,N],[3,r_Fe,E,"Polak and Ribiere (PR) method TODO: Reference",N,N],[3,r_Ge,E,"Polak and Ribiere Plus (PR+) method TODO: Reference",N,N],[3,r_He,E,"Hestenes and Stiefel (HS) method TODO: Reference",N,N],[11,r_Ra,E,r_Qa,37,[[],[r_ba]]],[11,r_Ra,E,r_Qa,38,[[],[r_ba]]],[11,r_Ra,E,r_Qa,39,[[],[r_ba]]],[11,r_Ra,E,r_Qa,40,[[],[r_ba]]],[0,"gradientdescent",r_Sa,"Gradient descent methods",N,N],[0,"steepestdescent","argmin::solver::gradientdescent","Steepest Descent method",N,N],[3,r_Ie,r_wb,"Steepest descent iteratively takes steps in the direction…",N,N],[11,r_Ra,E,r_Qa,41,[[["o"],[T]],[r_ja,[r_la]]]],[11,r_Ta,E,r_Ua,41,[[[r_ba],[r_5a,[r_Va]]],[r_ba]]],[0,"landweber",r_Sa,"Landweber iteration",N,N],[3,r_Je,r_xb,"The Landweber iteration is a solver for ill-posed linear…",N,N],[11,r_Ra,E,r_Qa,42,[[["o"],[r_Wa],[T]],[r_ja,[r_la]]]],[0,"linesearch",r_Sa,"Line search methods",N,N],[0,"backtracking",r_Ya,"Backtracking line search algorithm * Backtracking line…",N,N],[3,r_Ke,r_yb,"The Backtracking line search is a simple method to find a…",N,N],[11,r_Ra,E,r_Qa,43,[[["o"]],[r_ba]]],[11,r_Xa,E,r_Za,43,[[[r_ba],[T]],[r_ba]]],[11,"set_rho",E,"Set contraction factor rho",43,[[[r_ba],[r_Wa]],[r_ja,[r_la]]]],[11,"set_condition",E,"Set condition",43,[[[r_ba],[r_5a,["linesearchcondition"]]],[r_ba]]],[0,"condition",r_Ya,"Acceptance conditions # References:",N,N],[3,r_Me,r_zb,"Armijo Condition",N,N],[3,r_Ne,E,"Wolfe Condition",N,N],[3,r_Oe,E,"Strong Wolfe conditions",N,N],[3,r_Pe,E,"Goldstein conditions",N,N],[8,r_Le,E,"Needs to be implemented by everything that wants to be a…",N,N],[10,r_ec,E,"Evaluate the condition",44,[[[r_ba],[r_Wa],[T],[r_Wa],[T],[T],[r_Wa]],[r_1b]]],[10,r_dc,E,"Indicates whether this condition requires the computation…",44,[[[r_ba]],[r_1b]]],[11,r_Ra,E,r_Qa,45,[[[r_Wa]],[r_ja,[r_la]]]],[11,r_Ra,E,r_Qa,46,[[[r_Wa],[r_Wa]],[r_ja,[r_la]]]],[11,r_Ra,E,r_Qa,47,[[[r_Wa],[r_Wa]],[r_ja,[r_la]]]],[11,r_Ra,E,r_Qa,48,[[[r_Wa]],[r_ja,[r_la]]]],[0,"hagerzhang",r_Ya,"Hager-Zhang line search algorithm * Hager-Zhang line search",N,N],[3,r_Qe,r_Ab,"The Hager-Zhang line search is a method to find a step…",N,N],[11,r_Ra,E,r_Qa,49,[[["o"]],[r_ba]]],[11,r_Xa,E,r_Za,49,[[[r_ba],[T]],[r_ba]]],[11,"set_delta",E,"set delta",49,[[[r_ba],[r_Wa]],[r_ja,[r_la]]]],[11,"set_sigma",E,"set sigma",49,[[[r_ba],[r_Wa]],[r_ja,[r_la]]]],[11,r_7a,E,"set epsilon",49,[[[r_ba],[r_Wa]],[r_ja,[r_la]]]],[11,"set_theta",E,"set theta",49,[[[r_ba],[r_Wa]],[r_ja,[r_la]]]],[11,r_3a,E,r_4a,49,[[[r_ba],[r_Wa]],[r_ja,[r_la]]]],[11,r_9a,E,"set eta",49,[[[r_ba],[r_Wa]],[r_ja,[r_la]]]],[11,r_0a,E,r_1a,49,[[[r_ba],[r_Wa],[r_Wa]],[r_ja,[r_la]]]],[0,"morethuente",r_Ya,"More-Thuente line search algorithm * More-Thuente line…",N,N],[3,r_Re,r_Bb,"The More-Thuente line search is a method to find a step…",N,N],[11,r_Ra,E,r_Qa,50,[[["o"]],[r_ba]]],[11,r_Xa,E,r_Za,50,[[[r_ba],[T]],[r_ba]]],[11,"set_c",E,"Set c1 and c2 where 0 < c1 < c2 < 1.",50,[[[r_ba],[r_Wa],[r_Wa]],[r_ja,[r_la]]]],[11,r_0a,E,r_1a,50,[[[r_ba],[r_Wa],[r_Wa]],[r_ja,[r_la]]]],[0,"newton",r_Sa,"Newton Methods",N,N],[0,"newton_cg",r_2a,"Newton-CG method TODO: Stop when search direction is close…",N,N],[3,r_Se,r_Cb,"The Newton-CG method (also called truncated Newton method)…",N,N],[11,r_Ra,E,r_Qa,51,[[["o"],[T]],[r_ba]]],[11,r_Ta,E,r_Ua,51,[[[r_ba],[r_5a,[r_Va]]],[r_ba]]],[11,"set_curvature_threshold",E,"Set curvature threshold",51,[[[r_ba],[r_Wa]],[r_ba]]],[0,"newton_method",r_2a,"Newton's method # References:",N,N],[3,r_Te,r_Db,"Newton's method iteratively finds the stationary points of…",N,N],[11,r_Ra,E,r_Qa,52,[[["o"],[T]],[r_ba]]],[11,r_3a,E,r_4a,52,[[[r_ba],[r_Wa]],[r_ja,[r_la]]]],[0,"quasinewton",r_Sa,"Quasi-Newton methods",N,N],[0,"bfgs","argmin::solver::quasinewton","References:",N,N],[3,"BFGS",r_Eb,"BFGS method",N,N],[11,r_Ra,E,r_Qa,53,[[["o"],[T],["h"]],[r_ba]]],[11,r_Ta,E,r_Ua,53,[[[r_ba],[r_5a,[r_Va]]],[r_ba]]],[0,"simulatedannealing",r_Sa,E,N,N],[3,r_Ve,r_Fb,"Simulated Annealing",N,N],[4,r_Ue,E,"Temperature functions for Simulated Annealing.",N,N],[13,"TemperatureFast",E,"`t_i = t_init / i`",54,N],[13,"Boltzmann",E,"`t_i = t_init / ln(i)`",54,N],[13,"Exponential",E,"`t_i = t_init * x^i`",54,N],[13,"Custom",E,"User-provided temperature function. The first parameter…",54,N],[11,r_Ra,E,r_Qa,55,[[["o"],[T],[r_Wa]],[r_ja,[r_la]]]],[11,"temp_func",E,"Set temperature function to one of the options in…",55,[[[r_ba],["satempfunc"]],[r_ba]]],[11,"stall_accepted",E,"The optimization stops after there has been no accepted…",55,[[[r_ba],[r_Pa]],[r_ba]]],[11,"stall_best",E,"The optimization stops after there has been no new best…",55,[[[r_ba],[r_Pa]],[r_ba]]],[11,"reannealing_fixed",E,"Start reannealing after `iter` iterations",55,[[[r_ba],[r_Pa]],[r_ba]]],[11,"reannealing_accepted",E,"Start reannealing after no accepted solution has been…",55,[[[r_ba],[r_Pa]],[r_ba]]],[11,"reannealing_best",E,"Start reannealing after no new best solution has been…",55,[[[r_ba],[r_Pa]],[r_ba]]],[0,"trustregion",r_Sa,"Argmin Trust region methods",N,N],[5,"reduction_ratio",r_6a,"Computes reduction ratio",N,[[[r_Wa],[r_Wa],[r_Wa],[r_Wa]],[r_Wa]]],[0,"cauchypoint",E,"Cauchy Point # References:",N,N],[3,r_We,r_Gb,"The Cauchy point is the minimum of the quadratic…",N,N],[11,r_Ra,E,r_Qa,56,[[["o"]],[r_ba]]],[0,"dogleg",r_6a,"Dogleg method # References:",N,N],[3,r_Xe,r_Hb,"The Dogleg method computes the intersection of the trust…",N,N],[11,r_Ra,E,r_Qa,57,[[["o"]],[r_ba]]],[0,"steihaug",r_6a,"Steihaug method # References:",N,N],[3,r_Ye,r_Ib,"The Steihaug method is a conjugate gradients based…",N,N],[11,r_Ra,E,r_Qa,58,[[["o"]],[r_ba]]],[11,r_7a,E,"Set epsilon",58,[[[r_ba],[r_Wa]],[r_ja,[r_la]]]],[0,"trustregion_method",r_6a,"Trust region solver # References:",N,N],[3,r_Ze,r_Jb,"The trust region method approximates the cost function…",N,N],[11,r_Ra,E,r_Qa,59,[[["o"],[T]],[r_ba]]],[11,r_8a,E,"set radius",59,[[[r_ba],[r_Wa]],[r_ba]]],[11,"set_max_radius",E,"Set maximum radius",59,[[[r_ba],[r_Wa]],[r_ba]]],[11,r_9a,E,"Set eta",59,[[[r_ba],[r_Wa]],[r_ja,[r_la]]]],[11,"set_subproblem",E,"Set subproblem",59,[[[r_ba],[r_5a,["argmintrustregion"]]],[r_ba]]],[0,"testfunctions",r_aa,"Testfunctions # Testfunctions",N,N],[5,"mccorminck","argmin::testfunctions","McCorminck test function",N,N],[5,"himmelblau",E,"Himmelblau test function",N,N],[5,"sphere_derivative",E,"Derivative of sphere test function",N,N],[5,"schaffer_n2",E,"Schaffer test function No. 2",N,N],[5,"holder_table",E,"Holder table test function",N,N],[5,"rosenbrock_2d_hessian",E,"Hessian of 2D Rosenbrock function",N,N],[5,"rastrigin",E,r_ab,N,N],[5,"rosenbrock_2d",E,"2D Rosenbrock test function",N,N],[5,"ackley",E,r_bb,N,N],[5,"zero",E,"Zero test function",N,N],[5,"goldsteinprice",E,"Goldstein-Price test function",N,N],[5,"matyas",E,"Matyas test function",N,N],[5,"schaffer_n4",E,"Schaffer test function No. 4",N,N],[5,"booth",E,"Booth test function",N,N],[5,"eggholder",E,"Eggholder test function",N,N],[5,"picheny",E,"Picheny test function",N,N],[5,"rastrigin_a",E,r_ab,N,N],[5,"levy_n13",E,"Levy test function No. 13",N,N],[5,"cross_in_tray",E,"Cross-in-tray test function",N,N],[5,"sphere",E,"Sphere test function",N,N],[5,"zero_derivative",E,"Derivative of zero test function",N,N],[5,"threehumpcamel",E,"Three-hump camel test function",N,N],[5,"styblinski_tang",E,"Styblinski-Tang test function",N,N],[5,"levy",E,"Levy test function",N,N],[5,"rosenbrock_2d_derivative",E,"Derivative of 2D Rosenbrock function",N,N],[5,"easom",E,"Easom test function",N,N],[5,"rosenbrock",E,"Multidimensional Rosenbrock test function",N,N],[5,"ackley_param",E,r_bb,N,N],[5,"bukin_n6",E,"Bukin test function No. 6",N,N],[5,"beale",E,"Beale test function",N,N],[11,r_jb,r_cb,E,0,[[[T]],[T]]],[11,r_kb,E,E,0,[[[r_ba]],[U]]],[11,r_lb,E,E,0,[[[r_ba]],[T]]],[11,r_mb,E,E,0,N],[11,r_db,E,E,0,[[[U]],[r_ja]]],[11,r_eb,E,E,0,[[[r_ba]],[T]]],[11,r_fb,E,E,0,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,0,[[[r_ba]],[T]]],[11,r_ib,E,E,0,[[[r_ba]],[r_ja]]],[11,r_jb,r_fa,E,60,[[[T]],[T]]],[11,r_kb,E,E,60,[[[r_ba]],[U]]],[11,r_db,E,E,60,[[[U]],[r_ja]]],[11,r_eb,E,E,60,[[[r_ba]],[T]]],[11,r_fb,E,E,60,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,60,[[[r_ba]],[T]]],[11,r_ib,E,E,60,[[[r_ba]],[r_ja]]],[11,r_nb,E,E,11,[[[r_ba]],[r_ob]]],[11,r_jb,E,E,11,[[[T]],[T]]],[11,r_kb,E,E,11,[[[r_ba]],[U]]],[11,r_lb,E,E,11,[[[r_ba]],[T]]],[11,r_mb,E,E,11,N],[11,r_db,E,E,11,[[[U]],[r_ja]]],[11,r_eb,E,E,11,[[[r_ba]],[T]]],[11,r_fb,E,E,11,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,11,[[[r_ba]],[T]]],[11,r_ib,E,E,11,[[[r_ba]],[r_ja]]],[11,r_jb,E,E,61,[[[T]],[T]]],[11,r_kb,E,E,61,[[[r_ba]],[U]]],[11,r_lb,E,E,61,[[[r_ba]],[T]]],[11,r_mb,E,E,61,N],[11,r_db,E,E,61,[[[U]],[r_ja]]],[11,r_eb,E,E,61,[[[r_ba]],[T]]],[11,r_fb,E,E,61,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,61,[[[r_ba]],[T]]],[11,r_ib,E,E,61,[[[r_ba]],[r_ja]]],[11,r_nb,E,E,15,[[[r_ba]],[r_ob]]],[11,r_jb,E,E,15,[[[T]],[T]]],[11,r_kb,E,E,15,[[[r_ba]],[U]]],[11,r_lb,E,E,15,[[[r_ba]],[T]]],[11,r_mb,E,E,15,N],[11,r_db,E,E,15,[[[U]],[r_ja]]],[11,r_eb,E,E,15,[[[r_ba]],[T]]],[11,r_fb,E,E,15,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,15,[[[r_ba]],[T]]],[11,r_ib,E,E,15,[[[r_ba]],[r_ja]]],[11,r_nb,E,E,16,[[[r_ba]],[r_ob]]],[11,r_jb,E,E,16,[[[T]],[T]]],[11,r_kb,E,E,16,[[[r_ba]],[U]]],[11,r_lb,E,E,16,[[[r_ba]],[T]]],[11,r_mb,E,E,16,N],[11,r_db,E,E,16,[[[U]],[r_ja]]],[11,r_eb,E,E,16,[[[r_ba]],[T]]],[11,r_fb,E,E,16,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,16,[[[r_ba]],[T]]],[11,r_ib,E,E,16,[[[r_ba]],[r_ja]]],[11,r_jb,E,E,62,[[[T]],[T]]],[11,r_kb,E,E,62,[[[r_ba]],[U]]],[11,r_lb,E,E,62,[[[r_ba]],[T]]],[11,r_mb,E,E,62,N],[11,r_db,E,E,62,[[[U]],[r_ja]]],[11,r_eb,E,E,62,[[[r_ba]],[T]]],[11,r_fb,E,E,62,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,62,[[[r_ba]],[T]]],[11,r_ib,E,E,62,[[[r_ba]],[r_ja]]],[11,r_jb,E,E,63,[[[T]],[T]]],[11,r_kb,E,E,63,[[[r_ba]],[U]]],[11,r_lb,E,E,63,[[[r_ba]],[T]]],[11,r_mb,E,E,63,N],[11,r_db,E,E,63,[[[U]],[r_ja]]],[11,r_eb,E,E,63,[[[r_ba]],[T]]],[11,r_fb,E,E,63,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,63,[[[r_ba]],[T]]],[11,r_ib,E,E,63,[[[r_ba]],[r_ja]]],[11,r_jb,E,E,64,[[[T]],[T]]],[11,r_kb,E,E,64,[[[r_ba]],[U]]],[11,r_lb,E,E,64,[[[r_ba]],[T]]],[11,r_mb,E,E,64,N],[11,r_db,E,E,64,[[[U]],[r_ja]]],[11,r_eb,E,E,64,[[[r_ba]],[T]]],[11,r_fb,E,E,64,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,64,[[[r_ba]],[T]]],[11,r_ib,E,E,64,[[[r_ba]],[r_ja]]],[11,r_jb,E,E,23,[[[T]],[T]]],[11,r_kb,E,E,23,[[[r_ba]],[U]]],[11,r_lb,E,E,23,[[[r_ba]],[T]]],[11,r_mb,E,E,23,N],[11,r_db,E,E,23,[[[U]],[r_ja]]],[11,r_eb,E,E,23,[[[r_ba]],[T]]],[11,r_fb,E,E,23,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,23,[[[r_ba]],[T]]],[11,r_ib,E,E,23,[[[r_ba]],[r_ja]]],[11,r_nb,E,E,24,[[[r_ba]],[r_ob]]],[11,r_jb,E,E,24,[[[T]],[T]]],[11,r_kb,E,E,24,[[[r_ba]],[U]]],[11,r_db,E,E,24,[[[U]],[r_ja]]],[11,r_eb,E,E,24,[[[r_ba]],[T]]],[11,r_fb,E,E,24,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,24,[[[r_ba]],[T]]],[11,r_ib,E,E,24,[[[r_ba]],[r_ja]]],[11,r_qb,E,E,24,[[[r_ba]],[r_sb]]],[11,r_nb,r_pb,E,25,[[[r_ba]],[r_ob]]],[11,r_jb,E,E,25,[[[T]],[T]]],[11,r_kb,E,E,25,[[[r_ba]],[U]]],[11,r_db,E,E,25,[[[U]],[r_ja]]],[11,r_eb,E,E,25,[[[r_ba]],[T]]],[11,r_fb,E,E,25,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,25,[[[r_ba]],[T]]],[11,r_ib,E,E,25,[[[r_ba]],[r_ja]]],[11,r_qb,E,E,25,[[[r_ba]],[r_sb]]],[11,r_jb,E,E,26,[[[T]],[T]]],[11,r_kb,E,E,26,[[[r_ba]],[U]]],[11,r_db,E,E,26,[[[U]],[r_ja]]],[11,r_eb,E,E,26,[[[r_ba]],[T]]],[11,r_fb,E,E,26,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,26,[[[r_ba]],[T]]],[11,r_ib,E,E,26,[[[r_ba]],[r_ja]]],[11,r_jb,r_fa,E,65,[[[T]],[T]]],[11,r_kb,E,E,65,[[[r_ba]],[U]]],[11,r_lb,E,E,65,[[[r_ba]],[T]]],[11,r_mb,E,E,65,N],[11,r_db,E,E,65,[[[U]],[r_ja]]],[11,r_eb,E,E,65,[[[r_ba]],[T]]],[11,r_fb,E,E,65,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,65,[[[r_ba]],[T]]],[11,r_ib,E,E,65,[[[r_ba]],[r_ja]]],[11,r_jb,E,E,66,[[[T]],[T]]],[11,r_kb,E,E,66,[[[r_ba]],[U]]],[11,r_lb,E,E,66,[[[r_ba]],[T]]],[11,r_mb,E,E,66,N],[11,r_db,E,E,66,[[[U]],[r_ja]]],[11,r_eb,E,E,66,[[[r_ba]],[T]]],[11,r_fb,E,E,66,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,66,[[[r_ba]],[T]]],[11,r_ib,E,E,66,[[[r_ba]],[r_ja]]],[11,r_jb,r_rb,E,30,[[[T]],[T]]],[11,r_kb,E,E,30,[[[r_ba]],[U]]],[11,r_db,E,E,30,[[[U]],[r_ja]]],[11,r_eb,E,E,30,[[[r_ba]],[T]]],[11,r_fb,E,E,30,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,30,[[[r_ba]],[T]]],[11,r_ib,E,E,30,[[[r_ba]],[r_ja]]],[11,r_jb,r_fa,E,67,[[[T]],[T]]],[11,r_kb,E,E,67,[[[r_ba]],[U]]],[11,r_lb,E,E,67,[[[r_ba]],[T]]],[11,r_mb,E,E,67,N],[11,r_db,E,E,67,[[[U]],[r_ja]]],[11,r_eb,E,E,67,[[[r_ba]],[T]]],[11,r_fb,E,E,67,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,67,[[[r_ba]],[T]]],[11,r_ib,E,E,67,[[[r_ba]],[r_ja]]],[11,r_nb,E,E,68,[[[r_ba]],[r_ob]]],[11,r_jb,E,E,68,[[[T]],[T]]],[11,r_kb,E,E,68,[[[r_ba]],[U]]],[11,r_db,E,E,68,[[[U]],[r_ja]]],[11,r_eb,E,E,68,[[[r_ba]],[T]]],[11,r_fb,E,E,68,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,68,[[[r_ba]],[T]]],[11,r_ib,E,E,68,[[[r_ba]],[r_ja]]],[11,r_qb,E,E,68,[[[r_ba]],[r_sb]]],[11,r_jb,E,E,69,[[[T]],[T]]],[11,r_kb,E,E,69,[[[r_ba]],[U]]],[11,r_db,E,E,69,[[[U]],[r_ja]]],[11,r_eb,E,E,69,[[[r_ba]],[T]]],[11,r_fb,E,E,69,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,69,[[[r_ba]],[T]]],[11,r_ib,E,E,69,[[[r_ba]],[r_ja]]],[11,r_jb,r_tb,E,35,[[[T]],[T]]],[11,r_kb,E,E,35,[[[r_ba]],[U]]],[11,r_lb,E,E,35,[[[r_ba]],[T]]],[11,r_mb,E,E,35,N],[11,r_db,E,E,35,[[[U]],[r_ja]]],[11,r_eb,E,E,35,[[[r_ba]],[T]]],[11,r_fb,E,E,35,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,35,[[[r_ba]],[T]]],[11,r_ib,E,E,35,[[[r_ba]],[r_ja]]],[11,r_jb,r_ub,E,36,[[[T]],[T]]],[11,r_kb,E,E,36,[[[r_ba]],[U]]],[11,r_db,E,E,36,[[[U]],[r_ja]]],[11,r_eb,E,E,36,[[[r_ba]],[T]]],[11,r_fb,E,E,36,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,36,[[[r_ba]],[T]]],[11,r_ib,E,E,36,[[[r_ba]],[r_ja]]],[11,r_jb,r_vb,E,37,[[[T]],[T]]],[11,r_kb,E,E,37,[[[r_ba]],[U]]],[11,r_lb,E,E,37,[[[r_ba]],[T]]],[11,r_mb,E,E,37,N],[11,r_db,E,E,37,[[[U]],[r_ja]]],[11,r_eb,E,E,37,[[[r_ba]],[T]]],[11,r_fb,E,E,37,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,37,[[[r_ba]],[T]]],[11,r_ib,E,E,37,[[[r_ba]],[r_ja]]],[11,r_jb,E,E,38,[[[T]],[T]]],[11,r_kb,E,E,38,[[[r_ba]],[U]]],[11,r_lb,E,E,38,[[[r_ba]],[T]]],[11,r_mb,E,E,38,N],[11,r_db,E,E,38,[[[U]],[r_ja]]],[11,r_eb,E,E,38,[[[r_ba]],[T]]],[11,r_fb,E,E,38,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,38,[[[r_ba]],[T]]],[11,r_ib,E,E,38,[[[r_ba]],[r_ja]]],[11,r_jb,E,E,39,[[[T]],[T]]],[11,r_kb,E,E,39,[[[r_ba]],[U]]],[11,r_lb,E,E,39,[[[r_ba]],[T]]],[11,r_mb,E,E,39,N],[11,r_db,E,E,39,[[[U]],[r_ja]]],[11,r_eb,E,E,39,[[[r_ba]],[T]]],[11,r_fb,E,E,39,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,39,[[[r_ba]],[T]]],[11,r_ib,E,E,39,[[[r_ba]],[r_ja]]],[11,r_jb,E,E,40,[[[T]],[T]]],[11,r_kb,E,E,40,[[[r_ba]],[U]]],[11,r_lb,E,E,40,[[[r_ba]],[T]]],[11,r_mb,E,E,40,N],[11,r_db,E,E,40,[[[U]],[r_ja]]],[11,r_eb,E,E,40,[[[r_ba]],[T]]],[11,r_fb,E,E,40,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,40,[[[r_ba]],[T]]],[11,r_ib,E,E,40,[[[r_ba]],[r_ja]]],[11,r_jb,r_wb,E,41,[[[T]],[T]]],[11,r_kb,E,E,41,[[[r_ba]],[U]]],[11,r_db,E,E,41,[[[U]],[r_ja]]],[11,r_eb,E,E,41,[[[r_ba]],[T]]],[11,r_fb,E,E,41,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,41,[[[r_ba]],[T]]],[11,r_ib,E,E,41,[[[r_ba]],[r_ja]]],[11,r_jb,r_xb,E,42,[[[T]],[T]]],[11,r_kb,E,E,42,[[[r_ba]],[U]]],[11,r_db,E,E,42,[[[U]],[r_ja]]],[11,r_eb,E,E,42,[[[r_ba]],[T]]],[11,r_fb,E,E,42,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,42,[[[r_ba]],[T]]],[11,r_ib,E,E,42,[[[r_ba]],[r_ja]]],[11,r_jb,r_yb,E,43,[[[T]],[T]]],[11,r_kb,E,E,43,[[[r_ba]],[U]]],[11,r_db,E,E,43,[[[U]],[r_ja]]],[11,r_eb,E,E,43,[[[r_ba]],[T]]],[11,r_fb,E,E,43,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,43,[[[r_ba]],[T]]],[11,r_ib,E,E,43,[[[r_ba]],[r_ja]]],[11,r_jb,r_zb,E,45,[[[T]],[T]]],[11,r_kb,E,E,45,[[[r_ba]],[U]]],[11,r_db,E,E,45,[[[U]],[r_ja]]],[11,r_eb,E,E,45,[[[r_ba]],[T]]],[11,r_fb,E,E,45,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,45,[[[r_ba]],[T]]],[11,r_ib,E,E,45,[[[r_ba]],[r_ja]]],[11,r_jb,E,E,46,[[[T]],[T]]],[11,r_kb,E,E,46,[[[r_ba]],[U]]],[11,r_db,E,E,46,[[[U]],[r_ja]]],[11,r_eb,E,E,46,[[[r_ba]],[T]]],[11,r_fb,E,E,46,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,46,[[[r_ba]],[T]]],[11,r_ib,E,E,46,[[[r_ba]],[r_ja]]],[11,r_jb,E,E,47,[[[T]],[T]]],[11,r_kb,E,E,47,[[[r_ba]],[U]]],[11,r_db,E,E,47,[[[U]],[r_ja]]],[11,r_eb,E,E,47,[[[r_ba]],[T]]],[11,r_fb,E,E,47,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,47,[[[r_ba]],[T]]],[11,r_ib,E,E,47,[[[r_ba]],[r_ja]]],[11,r_jb,E,E,48,[[[T]],[T]]],[11,r_kb,E,E,48,[[[r_ba]],[U]]],[11,r_db,E,E,48,[[[U]],[r_ja]]],[11,r_eb,E,E,48,[[[r_ba]],[T]]],[11,r_fb,E,E,48,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,48,[[[r_ba]],[T]]],[11,r_ib,E,E,48,[[[r_ba]],[r_ja]]],[11,r_jb,r_Ab,E,49,[[[T]],[T]]],[11,r_kb,E,E,49,[[[r_ba]],[U]]],[11,r_db,E,E,49,[[[U]],[r_ja]]],[11,r_eb,E,E,49,[[[r_ba]],[T]]],[11,r_fb,E,E,49,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,49,[[[r_ba]],[T]]],[11,r_ib,E,E,49,[[[r_ba]],[r_ja]]],[11,r_jb,r_Bb,E,50,[[[T]],[T]]],[11,r_kb,E,E,50,[[[r_ba]],[U]]],[11,r_db,E,E,50,[[[U]],[r_ja]]],[11,r_eb,E,E,50,[[[r_ba]],[T]]],[11,r_fb,E,E,50,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,50,[[[r_ba]],[T]]],[11,r_ib,E,E,50,[[[r_ba]],[r_ja]]],[11,r_jb,r_Cb,E,51,[[[T]],[T]]],[11,r_kb,E,E,51,[[[r_ba]],[U]]],[11,r_db,E,E,51,[[[U]],[r_ja]]],[11,r_eb,E,E,51,[[[r_ba]],[T]]],[11,r_fb,E,E,51,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,51,[[[r_ba]],[T]]],[11,r_ib,E,E,51,[[[r_ba]],[r_ja]]],[11,r_jb,r_Db,E,52,[[[T]],[T]]],[11,r_kb,E,E,52,[[[r_ba]],[U]]],[11,r_db,E,E,52,[[[U]],[r_ja]]],[11,r_eb,E,E,52,[[[r_ba]],[T]]],[11,r_fb,E,E,52,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,52,[[[r_ba]],[T]]],[11,r_ib,E,E,52,[[[r_ba]],[r_ja]]],[11,r_jb,r_Eb,E,53,[[[T]],[T]]],[11,r_kb,E,E,53,[[[r_ba]],[U]]],[11,r_db,E,E,53,[[[U]],[r_ja]]],[11,r_eb,E,E,53,[[[r_ba]],[T]]],[11,r_fb,E,E,53,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,53,[[[r_ba]],[T]]],[11,r_ib,E,E,53,[[[r_ba]],[r_ja]]],[11,r_jb,r_Fb,E,55,[[[T]],[T]]],[11,r_kb,E,E,55,[[[r_ba]],[U]]],[11,r_db,E,E,55,[[[U]],[r_ja]]],[11,r_eb,E,E,55,[[[r_ba]],[T]]],[11,r_fb,E,E,55,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,55,[[[r_ba]],[T]]],[11,r_ib,E,E,55,[[[r_ba]],[r_ja]]],[11,r_jb,E,E,54,[[[T]],[T]]],[11,r_kb,E,E,54,[[[r_ba]],[U]]],[11,r_db,E,E,54,[[[U]],[r_ja]]],[11,r_eb,E,E,54,[[[r_ba]],[T]]],[11,r_fb,E,E,54,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,54,[[[r_ba]],[T]]],[11,r_ib,E,E,54,[[[r_ba]],[r_ja]]],[11,r_jb,r_Gb,E,56,[[[T]],[T]]],[11,r_kb,E,E,56,[[[r_ba]],[U]]],[11,r_db,E,E,56,[[[U]],[r_ja]]],[11,r_eb,E,E,56,[[[r_ba]],[T]]],[11,r_fb,E,E,56,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,56,[[[r_ba]],[T]]],[11,r_ib,E,E,56,[[[r_ba]],[r_ja]]],[11,r_jb,r_Hb,E,57,[[[T]],[T]]],[11,r_kb,E,E,57,[[[r_ba]],[U]]],[11,r_db,E,E,57,[[[U]],[r_ja]]],[11,r_eb,E,E,57,[[[r_ba]],[T]]],[11,r_fb,E,E,57,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,57,[[[r_ba]],[T]]],[11,r_ib,E,E,57,[[[r_ba]],[r_ja]]],[11,r_jb,r_Ib,E,58,[[[T]],[T]]],[11,r_kb,E,E,58,[[[r_ba]],[U]]],[11,r_db,E,E,58,[[[U]],[r_ja]]],[11,r_eb,E,E,58,[[[r_ba]],[T]]],[11,r_fb,E,E,58,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,58,[[[r_ba]],[T]]],[11,r_ib,E,E,58,[[[r_ba]],[r_ja]]],[11,r_jb,r_Jb,E,59,[[[T]],[T]]],[11,r_kb,E,E,59,[[[r_ba]],[U]]],[11,r_db,E,E,59,[[[U]],[r_ja]]],[11,r_eb,E,E,59,[[[r_ba]],[T]]],[11,r_fb,E,E,59,[[[r_ba]],[r_gb]]],[11,r_hb,E,E,59,[[[r_ba]],[T]]],[11,r_ib,E,E,59,[[[r_ba]],[r_ja]]],[11,r_Wb,r_fa,E,15,[[[r_ba],[r_Kb]],[r_ja,[r_la]]]],[11,r_Wb,E,E,24,[[[r_ba],[r_Kb]],[r_ja,[r_la]]]],[11,r_Wb,E,E,11,[[[r_ba],[r_Kb]],[r_ja,[r_la]]]],[11,r_Wb,E,E,16,[[[r_ba],[r_Kb]],[r_ja,[r_la]]]],[11,r_Lb,E,E,63,[[[r_ba],[T]],[r_ja,[r_la]]]],[11,r_Lb,E,E,69,[[[r_ba],[T]],[r_ja,[r_la]]]],[11,r_Mb,E,r_Ob,66,[[[r_ba],[r_Od],[r_qa]],[r_ja,[r_la]]]],[11,r_Nb,E,r_Pb,66,[[[r_ba],[r_qa]],[r_ja,[r_la]]]],[11,r_Mb,E,r_Ob,64,[[[r_ba],[r_Od],[r_qa]],[r_ja,[r_la]]]],[11,r_Nb,E,r_Pb,64,[[[r_ba],[r_qa]],[r_ja,[r_la]]]],[11,r_kc,E,E,15,[[[r_ba],[r_qa]],[r_Rb]]],[11,r_kc,E,E,11,[[[r_ba],[r_Qb]],[r_Rb]]],[11,r_kc,E,E,65,[[[r_ba],[r_Ub]],[r_Rb]]],[11,r_kc,E,E,16,[[[r_ba],[r_ka]],[r_Rb]]],[11,r_kc,E,E,23,[[[r_ba],[r_Tb]],[r_Rb]]],[11,r_Sb,E,E,62,[[[r_Vb]],[r_ja,[r_8b]]]],[11,r_Sb,E,E,23,[[[r_Vb]],[r_ja,[r_Tb]]]],[11,r_Sb,E,E,16,[[[r_Vb]],[r_ja,[r_ka]]]],[11,r_Sb,E,E,65,[[[r_Vb]],[r_ja,[r_Ub]]]],[11,r_Sb,E,E,61,[[[r_Vb]],[r_ja,[r_0b]]]],[11,r_Sb,E,E,11,[[[r_Vb]],[r_ja,[r_Qb]]]],[11,r_Sb,E,E,67,[[[r_Vb]],[r_ja,[r_Zb]]]],[11,r_Sb,E,E,15,[[[r_Vb]],[r_ja,[r_qa]]]],[11,r_Wb,E,E,67,[[[r_ba],[r_Kb]],[r_ja,[r_la]]]],[11,r_Wb,E,E,61,[[[r_ba],[r_Kb]],[r_ja,[r_la]]]],[11,r_Wb,E,E,15,[[[r_ba],[r_Kb]],[r_ja,[r_la]]]],[11,r_Wb,E,E,16,[[[r_ba],[r_Kb]],[r_ja,[r_la]]]],[11,r_Wb,E,E,62,[[[r_ba],[r_Kb]],[r_ja,[r_la]]]],[11,r_Wb,E,E,23,[[[r_ba],[r_Kb]],[r_ja,[r_la]]]],[11,r_Wb,E,E,24,[[[r_ba],[r_Kb]],[r_ja,[r_la]]]],[11,r_Wb,E,E,11,[[[r_ba],[r_Kb]],[r_ja,[r_la]]]],[11,r_Wb,E,E,65,[[[r_ba],[r_Kb]],[r_ja,[r_la]]]],[11,r_Xb,E,E,11,N],[11,r_Xb,E,E,23,N],[11,r_Xb,E,E,15,N],[11,r_Xb,E,E,65,N],[11,r_Yb,E,E,16,[[],[r_ka]]],[11,r_Yb,E,E,64,[[],[r_ac]]],[11,r_Yb,E,E,11,[[],[r_Qb]]],[11,r_Yb,E,E,67,[[],[r_Zb]]],[11,r_Yb,E,E,65,[[],[r_Ub]]],[11,r_Yb,E,E,61,[[],[r_0b]]],[11,r_Yb,E,E,63,[[],[r_9b]]],[11,r_Yb,E,E,23,[[],[r_Tb]]],[11,r_Yb,E,E,15,[[],[r_qa]]],[11,"from_iter",E,E,15,[[["i"]],[r_qa]]],[11,r_sa,E,E,67,N],[11,r_ta,E,E,67,N],[11,r_ua,E,E,67,N],[11,r_va,E,E,67,N],[11,r_sa,E,E,61,N],[11,r_ta,E,E,61,N],[11,r_ua,E,E,61,N],[11,r_va,E,E,61,N],[11,"eq",E,E,23,[[[r_ba],[r_Tb]],[r_1b]]],[11,"ne",E,E,23,[[[r_ba],[r_Tb]],[r_1b]]],[11,"eq",E,E,16,[[[r_ba],[r_ka]],[r_1b]]],[11,"eq",E,E,11,[[[r_ba],[r_Qb]],[r_1b]]],[11,"eq",E,E,65,[[[r_ba],[r_Ub]],[r_1b]]],[11,"ne",E,E,65,[[[r_ba],[r_Ub]],[r_1b]]],[11,"eq",E,E,15,[[[r_ba],[r_qa]],[r_1b]]],[11,"ne",E,E,15,[[[r_ba],[r_qa]],[r_1b]]],[11,"extend",E,E,15,N],[11,r_2b,E,E,16,[[[r_ba],[r_3b]],[r_ja]]],[11,r_2b,E,E,67,[[[r_ba],[r_3b]],[r_ja]]],[11,r_2b,E,E,61,[[[r_ba],[r_3b]],[r_ja]]],[11,r_2b,E,E,23,[[[r_ba],[r_3b]],[r_ja]]],[11,r_2b,E,E,62,[[[r_ba],[r_3b]],[r_ja]]],[11,r_2b,E,E,15,[[[r_ba],[r_3b]],[r_ja]]],[11,r_2b,E,E,11,[[[r_ba],[r_3b]],[r_ja]]],[11,r_2b,E,E,65,[[[r_ba],[r_3b]],[r_ja]]],[11,r_4b,E,E,16,[[[r_ba],[r_ka]],[r_5b,[r_Rb]]]],[11,r_4b,E,E,23,[[[r_ba],[r_Tb]],[r_5b,[r_Rb]]]],[11,"lt",E,E,23,[[[r_ba],[r_Tb]],[r_1b]]],[11,"le",E,E,23,[[[r_ba],[r_Tb]],[r_1b]]],[11,"gt",E,E,23,[[[r_ba],[r_Tb]],[r_1b]]],[11,"ge",E,E,23,[[[r_ba],[r_Tb]],[r_1b]]],[11,r_4b,E,E,15,[[[r_ba],[r_qa]],[r_5b,[r_Rb]]]],[11,"lt",E,E,15,[[[r_ba],[r_qa]],[r_1b]]],[11,"le",E,E,15,[[[r_ba],[r_qa]],[r_1b]]],[11,"gt",E,E,15,[[[r_ba],[r_qa]],[r_1b]]],[11,"ge",E,E,15,[[[r_ba],[r_qa]],[r_1b]]],[11,r_4b,E,E,65,[[[r_ba],[r_Ub]],[r_5b,[r_Rb]]]],[11,"lt",E,E,65,[[[r_ba],[r_Ub]],[r_1b]]],[11,"le",E,E,65,[[[r_ba],[r_Ub]],[r_1b]]],[11,"gt",E,E,65,[[[r_ba],[r_Ub]],[r_1b]]],[11,"ge",E,E,65,[[[r_ba],[r_Ub]],[r_1b]]],[11,r_4b,E,E,11,[[[r_ba],[r_Qb]],[r_5b,[r_Rb]]]],[11,"name",E,E,24,[[[r_ba]],[r_5b,[r_Od]]]],[11,r_bc,E,E,24,[[[r_ba]],[r_5b,[r_sb]]]],[11,r_6b,E,E,24,[[[r_ba]],[r_5b,[r_6b]]]],[11,r_7b,E,E,15,[[[r_ba]],[r_qa]]],[11,r_7b,E,E,61,[[[r_ba]],[r_0b]]],[11,r_7b,E,E,65,[[[r_ba]],[r_Ub]]],[11,r_7b,E,E,66,[[[r_ba]],[r_Zd]]],[11,r_7b,E,E,67,[[[r_ba]],[r_Zb]]],[11,r_7b,E,E,62,[[[r_ba]],[r_8b]]],[11,r_7b,E,E,16,[[[r_ba]],[r_ka]]],[11,r_7b,E,E,23,[[[r_ba]],[r_Tb]]],[11,r_7b,E,E,63,[[[r_ba]],[r_9b]]],[11,r_7b,E,E,11,[[[r_ba]],[r_Qb]]],[11,r_7b,E,E,64,[[[r_ba]],[r_ac]]],[11,r_Wb,r_pb,E,25,[[[r_ba],[r_Kb]],[r_ja,[r_la]]]],[11,"description",E,E,25,[[[r_ba]],[r_Od]]],[11,r_bc,E,E,25,[[[r_ba]],[r_5b,[r_la]]]],[11,r_Wb,E,E,26,[[[r_ba],[r_Kb]],[r_ja,[r_la]]]],[11,r_Wb,E,E,25,[[[r_ba],[r_Kb]],[r_ja,[r_la]]]],[11,r_jb,E,E,25,[[[r_la]],[r_la]]],[11,r_Wb,r_fa,E,68,[[[r_ba],[r_Kb]],[r_ja,[r_la]]]],[11,r_qb,E,E,68,[[[r_ba]],[r_sb]]],[11,"as_ref",E,E,68,[[[r_ba]],[r_sb]]],[11,r_Wb,E,E,68,[[[r_ba],[r_Kb]],[r_ja,[r_la]]]],[11,r_jb,E,E,68,[[["f"]],[r_la]]],[11,r_Yb,r_cb,E,0,[[],[r_cc]]],[11,r_7b,E,E,0,[[[r_ba]],[r_cc]]],[11,r_ec,r_zb,E,45,[[[r_ba],[r_Wa],[T],[r_Wa],[T],[T],[r_Wa]],[r_1b]]],[11,r_dc,E,E,45,[[[r_ba]],[r_1b]]],[11,r_ec,E,E,46,[[[r_ba],[r_Wa],[T],[r_Wa],[T],[T],[r_Wa]],[r_1b]]],[11,r_dc,E,E,46,[[[r_ba]],[r_1b]]],[11,r_ec,E,E,47,[[[r_ba],[r_Wa],[T],[r_Wa],[T],[T],[r_Wa]],[r_1b]]],[11,r_dc,E,E,47,[[[r_ba]],[r_1b]]],[11,r_ec,E,E,48,[[[r_ba],[r_Wa],[T],[r_Wa],[T],[T],[r_Wa]],[r_1b]]],[11,r_dc,E,E,48,[[[r_ba]],[r_1b]]],[11,"eq",r_vb,E,37,[[[r_ba],[r_fc]],[r_1b]]],[11,"eq",E,E,38,[[[r_ba],[r_gc]],[r_1b]]],[11,"eq",E,E,39,[[[r_ba],[r_hc]],[r_1b]]],[11,"eq",E,E,40,[[[r_ba],[r_ic]],[r_1b]]],[11,r_Yb,E,E,37,[[],[r_fc]]],[11,r_Yb,E,E,38,[[],[r_gc]]],[11,r_Yb,E,E,39,[[],[r_hc]]],[11,r_Yb,E,E,40,[[],[r_ic]]],[11,r_7b,r_tb,E,35,[[[r_ba]],[r_jc]]],[11,r_7b,r_vb,E,37,[[[r_ba]],[r_fc]]],[11,r_7b,E,E,38,[[[r_ba]],[r_gc]]],[11,r_7b,E,E,39,[[[r_ba]],[r_hc]]],[11,r_7b,E,E,40,[[[r_ba]],[r_ic]]],[11,r_kc,E,E,37,[[[r_ba],[r_fc]],[r_Rb]]],[11,r_kc,E,E,38,[[[r_ba],[r_gc]],[r_Rb]]],[11,r_kc,E,E,39,[[[r_ba],[r_hc]],[r_Rb]]],[11,r_kc,E,E,40,[[[r_ba],[r_ic]],[r_Rb]]],[11,r_4b,E,E,37,[[[r_ba],[r_fc]],[r_5b,[r_Rb]]]],[11,r_4b,E,E,38,[[[r_ba],[r_gc]],[r_5b,[r_Rb]]]],[11,r_4b,E,E,39,[[[r_ba],[r_hc]],[r_5b,[r_Rb]]]],[11,r_4b,E,E,40,[[[r_ba],[r_ic]],[r_5b,[r_Rb]]]],[11,r_Wb,E,E,37,[[[r_ba],[r_Kb]],[r_ja]]],[11,r_Wb,E,E,38,[[[r_ba],[r_Kb]],[r_ja]]],[11,r_Wb,E,E,39,[[[r_ba],[r_Kb]],[r_ja]]],[11,r_Wb,E,E,40,[[[r_ba],[r_Kb]],[r_ja]]],[11,r_Xb,E,E,37,N],[11,r_Xb,E,E,38,N],[11,r_Xb,E,E,39,N],[11,r_Xb,E,E,40,N],[11,r_2b,r_tb,E,35,[[[r_ba],[r_3b]],[r_ja]]],[11,r_2b,r_vb,E,37,[[[r_ba],[r_3b]],[r_ja]]],[11,r_2b,E,E,38,[[[r_ba],[r_3b]],[r_ja]]],[11,r_2b,E,E,39,[[[r_ba],[r_3b]],[r_ja]]],[11,r_2b,E,E,40,[[[r_ba],[r_3b]],[r_ja]]],[11,r_Sb,r_tb,E,35,[[[r_Vb]],[r_ja]]],[11,r_Sb,r_vb,E,37,[[[r_Vb]],[r_ja]]],[11,r_Sb,E,E,38,[[[r_Vb]],[r_ja]]],[11,r_Sb,E,E,39,[[[r_Vb]],[r_ja]]],[11,r_Sb,E,E,40,[[[r_Vb]],[r_ja]]],[11,r_rd,r_tb,r_Qc,35,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_lc,E,r_Rc,35,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_sa,E,r_Sc,35,N],[11,r_ta,E,r_Tc,35,N],[11,r_ua,E,r_Uc,35,N],[11,r_mc,E,r_Vc,35,N],[11,r_nc,E,r_Wc,35,N],[11,r_oc,E,r_Xc,35,N],[11,r_pc,E,r_Yc,35,N],[11,r_Xa,E,r_Zc,35,N],[11,r_qc,E,r_0c,35,N],[11,r_rc,E,r_1c,35,N],[11,r_va,E,r_2c,35,N],[11,r_ja,E,r_3c,35,[[[r_ba]],[r_ka]]],[11,r_sc,E,r_4c,35,[[[r_ba],[r_Pa]]]],[11,r_tc,E,r_5c,35,[[[r_ba]],[r_Pa]]],[11,r_uc,E,r_6c,35,[[[r_ba]]]],[11,r_vc,E,r_7c,35,[[[r_ba]],[r_Pa]]],[11,r_wc,E,r_8c,35,[[[r_ba]],[r_Wa]]],[11,r_xc,E,r_9c,35,[[[r_ba],[r_Wa]]]],[11,r_yc,E,r_ad,35,[[[r_ba]],[r_Wa]]],[11,r_zc,E,r_bd,35,[[[r_ba],[r_Wa]]]],[11,r_Ac,E,r_cd,35,[[[r_ba],[r_Wa]]]],[11,r_Bc,E,r_dd,35,[[[r_ba]]]],[11,r_Cc,E,r_ed,35,[[[r_ba],[r_Pa]]]],[11,r_Dc,E,r_Hc,35,[[[r_ba]],[r_Pa]]],[11,r_Ec,E,r_fd,35,[[[r_ba]]]],[11,r_Fc,E,r_gd,35,[[[r_ba],[r_Pa]]]],[11,r_Gc,E,r_Hc,35,[[[r_ba]],[r_Pa]]],[11,r_Ic,E,r_hd,35,[[[r_ba]]]],[11,r_Jc,E,r_id,35,[[[r_ba],[r_Pa]]]],[11,r_Kc,E,r_Hc,35,[[[r_ba]],[r_Pa]]],[11,r_Lc,E,r_jd,35,[[[r_ba],[r_qd,[r_kd]]]]],[11,r_Mc,E,r_ld,35,[[[r_ba],[r_qd,[r_md]]]]],[11,r_Nc,E,r_nd,35,[[[r_ba],[r_Qb]]]],[11,r_Oc,E,r_od,35,[[[r_ba]],[r_Qb]]],[11,r_Pc,E,r_pd,35,[[[r_ba]]]],[11,r_rd,r_ub,r_Qc,36,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_lc,E,r_Rc,36,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_sa,E,r_Sc,36,N],[11,r_ta,E,r_Tc,36,N],[11,r_ua,E,r_Uc,36,N],[11,r_mc,E,r_Vc,36,N],[11,r_nc,E,r_Wc,36,N],[11,r_oc,E,r_Xc,36,N],[11,r_pc,E,r_Yc,36,N],[11,r_Xa,E,r_Zc,36,N],[11,r_qc,E,r_0c,36,N],[11,r_rc,E,r_1c,36,N],[11,r_va,E,r_2c,36,N],[11,r_ja,E,r_3c,36,[[[r_ba]],[r_ka]]],[11,r_sc,E,r_4c,36,[[[r_ba],[r_Pa]]]],[11,r_tc,E,r_5c,36,[[[r_ba]],[r_Pa]]],[11,r_uc,E,r_6c,36,[[[r_ba]]]],[11,r_vc,E,r_7c,36,[[[r_ba]],[r_Pa]]],[11,r_wc,E,r_8c,36,[[[r_ba]],[r_Wa]]],[11,r_xc,E,r_9c,36,[[[r_ba],[r_Wa]]]],[11,r_yc,E,r_ad,36,[[[r_ba]],[r_Wa]]],[11,r_zc,E,r_bd,36,[[[r_ba],[r_Wa]]]],[11,r_Ac,E,r_cd,36,[[[r_ba],[r_Wa]]]],[11,r_Bc,E,r_dd,36,[[[r_ba]]]],[11,r_Cc,E,r_ed,36,[[[r_ba],[r_Pa]]]],[11,r_Dc,E,r_Hc,36,[[[r_ba]],[r_Pa]]],[11,r_Ec,E,r_fd,36,[[[r_ba]]]],[11,r_Fc,E,r_gd,36,[[[r_ba],[r_Pa]]]],[11,r_Gc,E,r_Hc,36,[[[r_ba]],[r_Pa]]],[11,r_Ic,E,r_hd,36,[[[r_ba]]]],[11,r_Jc,E,r_id,36,[[[r_ba],[r_Pa]]]],[11,r_Kc,E,r_Hc,36,[[[r_ba]],[r_Pa]]],[11,r_Lc,E,r_jd,36,[[[r_ba],[r_qd,[r_kd]]]]],[11,r_Mc,E,r_ld,36,[[[r_ba],[r_qd,[r_md]]]]],[11,r_Nc,E,r_nd,36,[[[r_ba],[r_Qb]]]],[11,r_Oc,E,r_od,36,[[[r_ba]],[r_Qb]]],[11,r_Pc,E,r_pd,36,[[[r_ba]]]],[11,r_rd,r_wb,r_Qc,41,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_lc,E,r_Rc,41,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_sa,E,r_Sc,41,N],[11,r_ta,E,r_Tc,41,N],[11,r_ua,E,r_Uc,41,N],[11,r_mc,E,r_Vc,41,N],[11,r_nc,E,r_Wc,41,N],[11,r_oc,E,r_Xc,41,N],[11,r_pc,E,r_Yc,41,N],[11,r_Xa,E,r_Zc,41,N],[11,r_qc,E,r_0c,41,N],[11,r_rc,E,r_1c,41,N],[11,r_va,E,r_2c,41,N],[11,r_ja,E,r_3c,41,[[[r_ba]],[r_ka]]],[11,r_sc,E,r_4c,41,[[[r_ba],[r_Pa]]]],[11,r_tc,E,r_5c,41,[[[r_ba]],[r_Pa]]],[11,r_uc,E,r_6c,41,[[[r_ba]]]],[11,r_vc,E,r_7c,41,[[[r_ba]],[r_Pa]]],[11,r_wc,E,r_8c,41,[[[r_ba]],[r_Wa]]],[11,r_xc,E,r_9c,41,[[[r_ba],[r_Wa]]]],[11,r_yc,E,r_ad,41,[[[r_ba]],[r_Wa]]],[11,r_zc,E,r_bd,41,[[[r_ba],[r_Wa]]]],[11,r_Ac,E,r_cd,41,[[[r_ba],[r_Wa]]]],[11,r_Bc,E,r_dd,41,[[[r_ba]]]],[11,r_Cc,E,r_ed,41,[[[r_ba],[r_Pa]]]],[11,r_Dc,E,r_Hc,41,[[[r_ba]],[r_Pa]]],[11,r_Ec,E,r_fd,41,[[[r_ba]]]],[11,r_Fc,E,r_gd,41,[[[r_ba],[r_Pa]]]],[11,r_Gc,E,r_Hc,41,[[[r_ba]],[r_Pa]]],[11,r_Ic,E,r_hd,41,[[[r_ba]]]],[11,r_Jc,E,r_id,41,[[[r_ba],[r_Pa]]]],[11,r_Kc,E,r_Hc,41,[[[r_ba]],[r_Pa]]],[11,r_Lc,E,r_jd,41,[[[r_ba],[r_qd,[r_kd]]]]],[11,r_Mc,E,r_ld,41,[[[r_ba],[r_qd,[r_md]]]]],[11,r_Nc,E,r_nd,41,[[[r_ba],[r_Qb]]]],[11,r_Oc,E,r_od,41,[[[r_ba]],[r_Qb]]],[11,r_Pc,E,r_pd,41,[[[r_ba]]]],[11,r_rd,r_xb,r_Qc,42,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_lc,E,r_Rc,42,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_sa,E,r_Sc,42,N],[11,r_ta,E,r_Tc,42,N],[11,r_ua,E,r_Uc,42,N],[11,r_mc,E,r_Vc,42,N],[11,r_nc,E,r_Wc,42,N],[11,r_oc,E,r_Xc,42,N],[11,r_pc,E,r_Yc,42,N],[11,r_Xa,E,r_Zc,42,N],[11,r_qc,E,r_0c,42,N],[11,r_rc,E,r_1c,42,N],[11,r_va,E,r_2c,42,N],[11,r_ja,E,r_3c,42,[[[r_ba]],[r_ka]]],[11,r_sc,E,r_4c,42,[[[r_ba],[r_Pa]]]],[11,r_tc,E,r_5c,42,[[[r_ba]],[r_Pa]]],[11,r_uc,E,r_6c,42,[[[r_ba]]]],[11,r_vc,E,r_7c,42,[[[r_ba]],[r_Pa]]],[11,r_wc,E,r_8c,42,[[[r_ba]],[r_Wa]]],[11,r_xc,E,r_9c,42,[[[r_ba],[r_Wa]]]],[11,r_yc,E,r_ad,42,[[[r_ba]],[r_Wa]]],[11,r_zc,E,r_bd,42,[[[r_ba],[r_Wa]]]],[11,r_Ac,E,r_cd,42,[[[r_ba],[r_Wa]]]],[11,r_Bc,E,r_dd,42,[[[r_ba]]]],[11,r_Cc,E,r_ed,42,[[[r_ba],[r_Pa]]]],[11,r_Dc,E,r_Hc,42,[[[r_ba]],[r_Pa]]],[11,r_Ec,E,r_fd,42,[[[r_ba]]]],[11,r_Fc,E,r_gd,42,[[[r_ba],[r_Pa]]]],[11,r_Gc,E,r_Hc,42,[[[r_ba]],[r_Pa]]],[11,r_Ic,E,r_hd,42,[[[r_ba]]]],[11,r_Jc,E,r_id,42,[[[r_ba],[r_Pa]]]],[11,r_Kc,E,r_Hc,42,[[[r_ba]],[r_Pa]]],[11,r_Lc,E,r_jd,42,[[[r_ba],[r_qd,[r_kd]]]]],[11,r_Mc,E,r_ld,42,[[[r_ba],[r_qd,[r_md]]]]],[11,r_Nc,E,r_nd,42,[[[r_ba],[r_Qb]]]],[11,r_Oc,E,r_od,42,[[[r_ba]],[r_Qb]]],[11,r_Pc,E,r_pd,42,[[[r_ba]]]],[11,r_rd,r_yb,r_Qc,43,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_lc,E,r_Rc,43,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_sa,E,r_Sc,43,N],[11,r_ta,E,r_Tc,43,N],[11,r_ua,E,r_Uc,43,N],[11,r_mc,E,r_Vc,43,N],[11,r_nc,E,r_Wc,43,N],[11,r_oc,E,r_Xc,43,N],[11,r_pc,E,r_Yc,43,N],[11,r_Xa,E,r_Zc,43,N],[11,r_qc,E,r_0c,43,N],[11,r_rc,E,r_1c,43,N],[11,r_va,E,r_2c,43,N],[11,r_ja,E,r_3c,43,[[[r_ba]],[r_ka]]],[11,r_sc,E,r_4c,43,[[[r_ba],[r_Pa]]]],[11,r_tc,E,r_5c,43,[[[r_ba]],[r_Pa]]],[11,r_uc,E,r_6c,43,[[[r_ba]]]],[11,r_vc,E,r_7c,43,[[[r_ba]],[r_Pa]]],[11,r_wc,E,r_8c,43,[[[r_ba]],[r_Wa]]],[11,r_xc,E,r_9c,43,[[[r_ba],[r_Wa]]]],[11,r_yc,E,r_ad,43,[[[r_ba]],[r_Wa]]],[11,r_zc,E,r_bd,43,[[[r_ba],[r_Wa]]]],[11,r_Ac,E,r_cd,43,[[[r_ba],[r_Wa]]]],[11,r_Bc,E,r_dd,43,[[[r_ba]]]],[11,r_Cc,E,r_ed,43,[[[r_ba],[r_Pa]]]],[11,r_Dc,E,r_Hc,43,[[[r_ba]],[r_Pa]]],[11,r_Ec,E,r_fd,43,[[[r_ba]]]],[11,r_Fc,E,r_gd,43,[[[r_ba],[r_Pa]]]],[11,r_Gc,E,r_Hc,43,[[[r_ba]],[r_Pa]]],[11,r_Ic,E,r_hd,43,[[[r_ba]]]],[11,r_Jc,E,r_id,43,[[[r_ba],[r_Pa]]]],[11,r_Kc,E,r_Hc,43,[[[r_ba]],[r_Pa]]],[11,r_Lc,E,r_jd,43,[[[r_ba],[r_qd,[r_kd]]]]],[11,r_Mc,E,r_ld,43,[[[r_ba],[r_qd,[r_md]]]]],[11,r_Nc,E,r_nd,43,[[[r_ba],[r_Qb]]]],[11,r_Oc,E,r_od,43,[[[r_ba]],[r_Qb]]],[11,r_Pc,E,r_pd,43,[[[r_ba]]]],[11,r_rd,r_Ab,r_Qc,49,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_lc,E,r_Rc,49,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_sa,E,r_Sc,49,N],[11,r_ta,E,r_Tc,49,N],[11,r_ua,E,r_Uc,49,N],[11,r_mc,E,r_Vc,49,N],[11,r_nc,E,r_Wc,49,N],[11,r_oc,E,r_Xc,49,N],[11,r_pc,E,r_Yc,49,N],[11,r_Xa,E,r_Zc,49,N],[11,r_qc,E,r_0c,49,N],[11,r_rc,E,r_1c,49,N],[11,r_va,E,r_2c,49,N],[11,r_ja,E,r_3c,49,[[[r_ba]],[r_ka]]],[11,r_sc,E,r_4c,49,[[[r_ba],[r_Pa]]]],[11,r_tc,E,r_5c,49,[[[r_ba]],[r_Pa]]],[11,r_uc,E,r_6c,49,[[[r_ba]]]],[11,r_vc,E,r_7c,49,[[[r_ba]],[r_Pa]]],[11,r_wc,E,r_8c,49,[[[r_ba]],[r_Wa]]],[11,r_xc,E,r_9c,49,[[[r_ba],[r_Wa]]]],[11,r_yc,E,r_ad,49,[[[r_ba]],[r_Wa]]],[11,r_zc,E,r_bd,49,[[[r_ba],[r_Wa]]]],[11,r_Ac,E,r_cd,49,[[[r_ba],[r_Wa]]]],[11,r_Bc,E,r_dd,49,[[[r_ba]]]],[11,r_Cc,E,r_ed,49,[[[r_ba],[r_Pa]]]],[11,r_Dc,E,r_Hc,49,[[[r_ba]],[r_Pa]]],[11,r_Ec,E,r_fd,49,[[[r_ba]]]],[11,r_Fc,E,r_gd,49,[[[r_ba],[r_Pa]]]],[11,r_Gc,E,r_Hc,49,[[[r_ba]],[r_Pa]]],[11,r_Ic,E,r_hd,49,[[[r_ba]]]],[11,r_Jc,E,r_id,49,[[[r_ba],[r_Pa]]]],[11,r_Kc,E,r_Hc,49,[[[r_ba]],[r_Pa]]],[11,r_Lc,E,r_jd,49,[[[r_ba],[r_qd,[r_kd]]]]],[11,r_Mc,E,r_ld,49,[[[r_ba],[r_qd,[r_md]]]]],[11,r_Nc,E,r_nd,49,[[[r_ba],[r_Qb]]]],[11,r_Oc,E,r_od,49,[[[r_ba]],[r_Qb]]],[11,r_Pc,E,r_pd,49,[[[r_ba]]]],[11,r_rd,r_Bb,r_Qc,50,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_lc,E,r_Rc,50,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_sa,E,r_Sc,50,N],[11,r_ta,E,r_Tc,50,N],[11,r_ua,E,r_Uc,50,N],[11,r_mc,E,r_Vc,50,N],[11,r_nc,E,r_Wc,50,N],[11,r_oc,E,r_Xc,50,N],[11,r_pc,E,r_Yc,50,N],[11,r_Xa,E,r_Zc,50,N],[11,r_qc,E,r_0c,50,N],[11,r_rc,E,r_1c,50,N],[11,r_va,E,r_2c,50,N],[11,r_ja,E,r_3c,50,[[[r_ba]],[r_ka]]],[11,r_sc,E,r_4c,50,[[[r_ba],[r_Pa]]]],[11,r_tc,E,r_5c,50,[[[r_ba]],[r_Pa]]],[11,r_uc,E,r_6c,50,[[[r_ba]]]],[11,r_vc,E,r_7c,50,[[[r_ba]],[r_Pa]]],[11,r_wc,E,r_8c,50,[[[r_ba]],[r_Wa]]],[11,r_xc,E,r_9c,50,[[[r_ba],[r_Wa]]]],[11,r_yc,E,r_ad,50,[[[r_ba]],[r_Wa]]],[11,r_zc,E,r_bd,50,[[[r_ba],[r_Wa]]]],[11,r_Ac,E,r_cd,50,[[[r_ba],[r_Wa]]]],[11,r_Bc,E,r_dd,50,[[[r_ba]]]],[11,r_Cc,E,r_ed,50,[[[r_ba],[r_Pa]]]],[11,r_Dc,E,r_Hc,50,[[[r_ba]],[r_Pa]]],[11,r_Ec,E,r_fd,50,[[[r_ba]]]],[11,r_Fc,E,r_gd,50,[[[r_ba],[r_Pa]]]],[11,r_Gc,E,r_Hc,50,[[[r_ba]],[r_Pa]]],[11,r_Ic,E,r_hd,50,[[[r_ba]]]],[11,r_Jc,E,r_id,50,[[[r_ba],[r_Pa]]]],[11,r_Kc,E,r_Hc,50,[[[r_ba]],[r_Pa]]],[11,r_Lc,E,r_jd,50,[[[r_ba],[r_qd,[r_kd]]]]],[11,r_Mc,E,r_ld,50,[[[r_ba],[r_qd,[r_md]]]]],[11,r_Nc,E,r_nd,50,[[[r_ba],[r_Qb]]]],[11,r_Oc,E,r_od,50,[[[r_ba]],[r_Qb]]],[11,r_Pc,E,r_pd,50,[[[r_ba]]]],[11,r_rd,r_Cb,r_Qc,51,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_lc,E,r_Rc,51,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_sa,E,r_Sc,51,N],[11,r_ta,E,r_Tc,51,N],[11,r_ua,E,r_Uc,51,N],[11,r_mc,E,r_Vc,51,N],[11,r_nc,E,r_Wc,51,N],[11,r_oc,E,r_Xc,51,N],[11,r_pc,E,r_Yc,51,N],[11,r_Xa,E,r_Zc,51,N],[11,r_qc,E,r_0c,51,N],[11,r_rc,E,r_1c,51,N],[11,r_va,E,r_2c,51,N],[11,r_ja,E,r_3c,51,[[[r_ba]],[r_ka]]],[11,r_sc,E,r_4c,51,[[[r_ba],[r_Pa]]]],[11,r_tc,E,r_5c,51,[[[r_ba]],[r_Pa]]],[11,r_uc,E,r_6c,51,[[[r_ba]]]],[11,r_vc,E,r_7c,51,[[[r_ba]],[r_Pa]]],[11,r_wc,E,r_8c,51,[[[r_ba]],[r_Wa]]],[11,r_xc,E,r_9c,51,[[[r_ba],[r_Wa]]]],[11,r_yc,E,r_ad,51,[[[r_ba]],[r_Wa]]],[11,r_zc,E,r_bd,51,[[[r_ba],[r_Wa]]]],[11,r_Ac,E,r_cd,51,[[[r_ba],[r_Wa]]]],[11,r_Bc,E,r_dd,51,[[[r_ba]]]],[11,r_Cc,E,r_ed,51,[[[r_ba],[r_Pa]]]],[11,r_Dc,E,r_Hc,51,[[[r_ba]],[r_Pa]]],[11,r_Ec,E,r_fd,51,[[[r_ba]]]],[11,r_Fc,E,r_gd,51,[[[r_ba],[r_Pa]]]],[11,r_Gc,E,r_Hc,51,[[[r_ba]],[r_Pa]]],[11,r_Ic,E,r_hd,51,[[[r_ba]]]],[11,r_Jc,E,r_id,51,[[[r_ba],[r_Pa]]]],[11,r_Kc,E,r_Hc,51,[[[r_ba]],[r_Pa]]],[11,r_Lc,E,r_jd,51,[[[r_ba],[r_qd,[r_kd]]]]],[11,r_Mc,E,r_ld,51,[[[r_ba],[r_qd,[r_md]]]]],[11,r_Nc,E,r_nd,51,[[[r_ba],[r_Qb]]]],[11,r_Oc,E,r_od,51,[[[r_ba]],[r_Qb]]],[11,r_Pc,E,r_pd,51,[[[r_ba]]]],[11,r_rd,r_Db,r_Qc,52,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_lc,E,r_Rc,52,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_sa,E,r_Sc,52,N],[11,r_ta,E,r_Tc,52,N],[11,r_ua,E,r_Uc,52,N],[11,r_mc,E,r_Vc,52,N],[11,r_nc,E,r_Wc,52,N],[11,r_oc,E,r_Xc,52,N],[11,r_pc,E,r_Yc,52,N],[11,r_Xa,E,r_Zc,52,N],[11,r_qc,E,r_0c,52,N],[11,r_rc,E,r_1c,52,N],[11,r_va,E,r_2c,52,N],[11,r_ja,E,r_3c,52,[[[r_ba]],[r_ka]]],[11,r_sc,E,r_4c,52,[[[r_ba],[r_Pa]]]],[11,r_tc,E,r_5c,52,[[[r_ba]],[r_Pa]]],[11,r_uc,E,r_6c,52,[[[r_ba]]]],[11,r_vc,E,r_7c,52,[[[r_ba]],[r_Pa]]],[11,r_wc,E,r_8c,52,[[[r_ba]],[r_Wa]]],[11,r_xc,E,r_9c,52,[[[r_ba],[r_Wa]]]],[11,r_yc,E,r_ad,52,[[[r_ba]],[r_Wa]]],[11,r_zc,E,r_bd,52,[[[r_ba],[r_Wa]]]],[11,r_Ac,E,r_cd,52,[[[r_ba],[r_Wa]]]],[11,r_Bc,E,r_dd,52,[[[r_ba]]]],[11,r_Cc,E,r_ed,52,[[[r_ba],[r_Pa]]]],[11,r_Dc,E,r_Hc,52,[[[r_ba]],[r_Pa]]],[11,r_Ec,E,r_fd,52,[[[r_ba]]]],[11,r_Fc,E,r_gd,52,[[[r_ba],[r_Pa]]]],[11,r_Gc,E,r_Hc,52,[[[r_ba]],[r_Pa]]],[11,r_Ic,E,r_hd,52,[[[r_ba]]]],[11,r_Jc,E,r_id,52,[[[r_ba],[r_Pa]]]],[11,r_Kc,E,r_Hc,52,[[[r_ba]],[r_Pa]]],[11,r_Lc,E,r_jd,52,[[[r_ba],[r_qd,[r_kd]]]]],[11,r_Mc,E,r_ld,52,[[[r_ba],[r_qd,[r_md]]]]],[11,r_Nc,E,r_nd,52,[[[r_ba],[r_Qb]]]],[11,r_Oc,E,r_od,52,[[[r_ba]],[r_Qb]]],[11,r_Pc,E,r_pd,52,[[[r_ba]]]],[11,r_rd,r_Eb,r_Qc,53,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_lc,E,r_Rc,53,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_sa,E,r_Sc,53,N],[11,r_ta,E,r_Tc,53,N],[11,r_ua,E,r_Uc,53,N],[11,r_mc,E,r_Vc,53,N],[11,r_nc,E,r_Wc,53,N],[11,r_oc,E,r_Xc,53,N],[11,r_pc,E,r_Yc,53,N],[11,r_Xa,E,r_Zc,53,N],[11,r_qc,E,r_0c,53,N],[11,r_rc,E,r_1c,53,N],[11,r_va,E,r_2c,53,N],[11,r_ja,E,r_3c,53,[[[r_ba]],[r_ka]]],[11,r_sc,E,r_4c,53,[[[r_ba],[r_Pa]]]],[11,r_tc,E,r_5c,53,[[[r_ba]],[r_Pa]]],[11,r_uc,E,r_6c,53,[[[r_ba]]]],[11,r_vc,E,r_7c,53,[[[r_ba]],[r_Pa]]],[11,r_wc,E,r_8c,53,[[[r_ba]],[r_Wa]]],[11,r_xc,E,r_9c,53,[[[r_ba],[r_Wa]]]],[11,r_yc,E,r_ad,53,[[[r_ba]],[r_Wa]]],[11,r_zc,E,r_bd,53,[[[r_ba],[r_Wa]]]],[11,r_Ac,E,r_cd,53,[[[r_ba],[r_Wa]]]],[11,r_Bc,E,r_dd,53,[[[r_ba]]]],[11,r_Cc,E,r_ed,53,[[[r_ba],[r_Pa]]]],[11,r_Dc,E,r_Hc,53,[[[r_ba]],[r_Pa]]],[11,r_Ec,E,r_fd,53,[[[r_ba]]]],[11,r_Fc,E,r_gd,53,[[[r_ba],[r_Pa]]]],[11,r_Gc,E,r_Hc,53,[[[r_ba]],[r_Pa]]],[11,r_Ic,E,r_hd,53,[[[r_ba]]]],[11,r_Jc,E,r_id,53,[[[r_ba],[r_Pa]]]],[11,r_Kc,E,r_Hc,53,[[[r_ba]],[r_Pa]]],[11,r_Lc,E,r_jd,53,[[[r_ba],[r_qd,[r_kd]]]]],[11,r_Mc,E,r_ld,53,[[[r_ba],[r_qd,[r_md]]]]],[11,r_Nc,E,r_nd,53,[[[r_ba],[r_Qb]]]],[11,r_Oc,E,r_od,53,[[[r_ba]],[r_Qb]]],[11,r_Pc,E,r_pd,53,[[[r_ba]]]],[11,r_rd,r_Fb,r_Qc,55,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_lc,E,r_Rc,55,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_sa,E,r_Sc,55,N],[11,r_ta,E,r_Tc,55,N],[11,r_ua,E,r_Uc,55,N],[11,r_mc,E,r_Vc,55,N],[11,r_nc,E,r_Wc,55,N],[11,r_oc,E,r_Xc,55,N],[11,r_pc,E,r_Yc,55,N],[11,r_Xa,E,r_Zc,55,N],[11,r_qc,E,r_0c,55,N],[11,r_rc,E,r_1c,55,N],[11,r_va,E,r_2c,55,N],[11,r_ja,E,r_3c,55,[[[r_ba]],[r_ka]]],[11,r_sc,E,r_4c,55,[[[r_ba],[r_Pa]]]],[11,r_tc,E,r_5c,55,[[[r_ba]],[r_Pa]]],[11,r_uc,E,r_6c,55,[[[r_ba]]]],[11,r_vc,E,r_7c,55,[[[r_ba]],[r_Pa]]],[11,r_wc,E,r_8c,55,[[[r_ba]],[r_Wa]]],[11,r_xc,E,r_9c,55,[[[r_ba],[r_Wa]]]],[11,r_yc,E,r_ad,55,[[[r_ba]],[r_Wa]]],[11,r_zc,E,r_bd,55,[[[r_ba],[r_Wa]]]],[11,r_Ac,E,r_cd,55,[[[r_ba],[r_Wa]]]],[11,r_Bc,E,r_dd,55,[[[r_ba]]]],[11,r_Cc,E,r_ed,55,[[[r_ba],[r_Pa]]]],[11,r_Dc,E,r_Hc,55,[[[r_ba]],[r_Pa]]],[11,r_Ec,E,r_fd,55,[[[r_ba]]]],[11,r_Fc,E,r_gd,55,[[[r_ba],[r_Pa]]]],[11,r_Gc,E,r_Hc,55,[[[r_ba]],[r_Pa]]],[11,r_Ic,E,r_hd,55,[[[r_ba]]]],[11,r_Jc,E,r_id,55,[[[r_ba],[r_Pa]]]],[11,r_Kc,E,r_Hc,55,[[[r_ba]],[r_Pa]]],[11,r_Lc,E,r_jd,55,[[[r_ba],[r_qd,[r_kd]]]]],[11,r_Mc,E,r_ld,55,[[[r_ba],[r_qd,[r_md]]]]],[11,r_Nc,E,r_nd,55,[[[r_ba],[r_Qb]]]],[11,r_Oc,E,r_od,55,[[[r_ba]],[r_Qb]]],[11,r_Pc,E,r_pd,55,[[[r_ba]]]],[11,r_rd,r_Gb,r_Qc,56,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_lc,E,r_Rc,56,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_sa,E,r_Sc,56,N],[11,r_ta,E,r_Tc,56,N],[11,r_ua,E,r_Uc,56,N],[11,r_mc,E,r_Vc,56,N],[11,r_nc,E,r_Wc,56,N],[11,r_oc,E,r_Xc,56,N],[11,r_pc,E,r_Yc,56,N],[11,r_Xa,E,r_Zc,56,N],[11,r_qc,E,r_0c,56,N],[11,r_rc,E,r_1c,56,N],[11,r_va,E,r_2c,56,N],[11,r_ja,E,r_3c,56,[[[r_ba]],[r_ka]]],[11,r_sc,E,r_4c,56,[[[r_ba],[r_Pa]]]],[11,r_tc,E,r_5c,56,[[[r_ba]],[r_Pa]]],[11,r_uc,E,r_6c,56,[[[r_ba]]]],[11,r_vc,E,r_7c,56,[[[r_ba]],[r_Pa]]],[11,r_wc,E,r_8c,56,[[[r_ba]],[r_Wa]]],[11,r_xc,E,r_9c,56,[[[r_ba],[r_Wa]]]],[11,r_yc,E,r_ad,56,[[[r_ba]],[r_Wa]]],[11,r_zc,E,r_bd,56,[[[r_ba],[r_Wa]]]],[11,r_Ac,E,r_cd,56,[[[r_ba],[r_Wa]]]],[11,r_Bc,E,r_dd,56,[[[r_ba]]]],[11,r_Cc,E,r_ed,56,[[[r_ba],[r_Pa]]]],[11,r_Dc,E,r_Hc,56,[[[r_ba]],[r_Pa]]],[11,r_Ec,E,r_fd,56,[[[r_ba]]]],[11,r_Fc,E,r_gd,56,[[[r_ba],[r_Pa]]]],[11,r_Gc,E,r_Hc,56,[[[r_ba]],[r_Pa]]],[11,r_Ic,E,r_hd,56,[[[r_ba]]]],[11,r_Jc,E,r_id,56,[[[r_ba],[r_Pa]]]],[11,r_Kc,E,r_Hc,56,[[[r_ba]],[r_Pa]]],[11,r_Lc,E,r_jd,56,[[[r_ba],[r_qd,[r_kd]]]]],[11,r_Mc,E,r_ld,56,[[[r_ba],[r_qd,[r_md]]]]],[11,r_Nc,E,r_nd,56,[[[r_ba],[r_Qb]]]],[11,r_Oc,E,r_od,56,[[[r_ba]],[r_Qb]]],[11,r_Pc,E,r_pd,56,[[[r_ba]]]],[11,r_rd,r_Hb,r_Qc,57,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_lc,E,r_Rc,57,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_sa,E,r_Sc,57,N],[11,r_ta,E,r_Tc,57,N],[11,r_ua,E,r_Uc,57,N],[11,r_mc,E,r_Vc,57,N],[11,r_nc,E,r_Wc,57,N],[11,r_oc,E,r_Xc,57,N],[11,r_pc,E,r_Yc,57,N],[11,r_Xa,E,r_Zc,57,N],[11,r_qc,E,r_0c,57,N],[11,r_rc,E,r_1c,57,N],[11,r_va,E,r_2c,57,N],[11,r_ja,E,r_3c,57,[[[r_ba]],[r_ka]]],[11,r_sc,E,r_4c,57,[[[r_ba],[r_Pa]]]],[11,r_tc,E,r_5c,57,[[[r_ba]],[r_Pa]]],[11,r_uc,E,r_6c,57,[[[r_ba]]]],[11,r_vc,E,r_7c,57,[[[r_ba]],[r_Pa]]],[11,r_wc,E,r_8c,57,[[[r_ba]],[r_Wa]]],[11,r_xc,E,r_9c,57,[[[r_ba],[r_Wa]]]],[11,r_yc,E,r_ad,57,[[[r_ba]],[r_Wa]]],[11,r_zc,E,r_bd,57,[[[r_ba],[r_Wa]]]],[11,r_Ac,E,r_cd,57,[[[r_ba],[r_Wa]]]],[11,r_Bc,E,r_dd,57,[[[r_ba]]]],[11,r_Cc,E,r_ed,57,[[[r_ba],[r_Pa]]]],[11,r_Dc,E,r_Hc,57,[[[r_ba]],[r_Pa]]],[11,r_Ec,E,r_fd,57,[[[r_ba]]]],[11,r_Fc,E,r_gd,57,[[[r_ba],[r_Pa]]]],[11,r_Gc,E,r_Hc,57,[[[r_ba]],[r_Pa]]],[11,r_Ic,E,r_hd,57,[[[r_ba]]]],[11,r_Jc,E,r_id,57,[[[r_ba],[r_Pa]]]],[11,r_Kc,E,r_Hc,57,[[[r_ba]],[r_Pa]]],[11,r_Lc,E,r_jd,57,[[[r_ba],[r_qd,[r_kd]]]]],[11,r_Mc,E,r_ld,57,[[[r_ba],[r_qd,[r_md]]]]],[11,r_Nc,E,r_nd,57,[[[r_ba],[r_Qb]]]],[11,r_Oc,E,r_od,57,[[[r_ba]],[r_Qb]]],[11,r_Pc,E,r_pd,57,[[[r_ba]]]],[11,r_rd,r_Ib,r_Qc,58,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_lc,E,r_Rc,58,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_sa,E,r_Sc,58,N],[11,r_ta,E,r_Tc,58,N],[11,r_ua,E,r_Uc,58,N],[11,r_mc,E,r_Vc,58,N],[11,r_nc,E,r_Wc,58,N],[11,r_oc,E,r_Xc,58,N],[11,r_pc,E,r_Yc,58,N],[11,r_Xa,E,r_Zc,58,N],[11,r_qc,E,r_0c,58,N],[11,r_rc,E,r_1c,58,N],[11,r_va,E,r_2c,58,N],[11,r_ja,E,r_3c,58,[[[r_ba]],[r_ka]]],[11,r_sc,E,r_4c,58,[[[r_ba],[r_Pa]]]],[11,r_tc,E,r_5c,58,[[[r_ba]],[r_Pa]]],[11,r_uc,E,r_6c,58,[[[r_ba]]]],[11,r_vc,E,r_7c,58,[[[r_ba]],[r_Pa]]],[11,r_wc,E,r_8c,58,[[[r_ba]],[r_Wa]]],[11,r_xc,E,r_9c,58,[[[r_ba],[r_Wa]]]],[11,r_yc,E,r_ad,58,[[[r_ba]],[r_Wa]]],[11,r_zc,E,r_bd,58,[[[r_ba],[r_Wa]]]],[11,r_Ac,E,r_cd,58,[[[r_ba],[r_Wa]]]],[11,r_Bc,E,r_dd,58,[[[r_ba]]]],[11,r_Cc,E,r_ed,58,[[[r_ba],[r_Pa]]]],[11,r_Dc,E,r_Hc,58,[[[r_ba]],[r_Pa]]],[11,r_Ec,E,r_fd,58,[[[r_ba]]]],[11,r_Fc,E,r_gd,58,[[[r_ba],[r_Pa]]]],[11,r_Gc,E,r_Hc,58,[[[r_ba]],[r_Pa]]],[11,r_Ic,E,r_hd,58,[[[r_ba]]]],[11,r_Jc,E,r_id,58,[[[r_ba],[r_Pa]]]],[11,r_Kc,E,r_Hc,58,[[[r_ba]],[r_Pa]]],[11,r_Lc,E,r_jd,58,[[[r_ba],[r_qd,[r_kd]]]]],[11,r_Mc,E,r_ld,58,[[[r_ba],[r_qd,[r_md]]]]],[11,r_Nc,E,r_nd,58,[[[r_ba],[r_Qb]]]],[11,r_Oc,E,r_od,58,[[[r_ba]],[r_Qb]]],[11,r_Pc,E,r_pd,58,[[[r_ba]]]],[11,r_rd,r_Jb,r_Qc,59,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_lc,E,r_Rc,59,[[[r_ba]],[r_ja,[r_ka,r_la]]]],[11,r_sa,E,r_Sc,59,N],[11,r_ta,E,r_Tc,59,N],[11,r_ua,E,r_Uc,59,N],[11,r_mc,E,r_Vc,59,N],[11,r_nc,E,r_Wc,59,N],[11,r_oc,E,r_Xc,59,N],[11,r_pc,E,r_Yc,59,N],[11,r_Xa,E,r_Zc,59,N],[11,r_qc,E,r_0c,59,N],[11,r_rc,E,r_1c,59,N],[11,r_va,E,r_2c,59,N],[11,r_ja,E,r_3c,59,[[[r_ba]],[r_ka]]],[11,r_sc,E,r_4c,59,[[[r_ba],[r_Pa]]]],[11,r_tc,E,r_5c,59,[[[r_ba]],[r_Pa]]],[11,r_uc,E,r_6c,59,[[[r_ba]]]],[11,r_vc,E,r_7c,59,[[[r_ba]],[r_Pa]]],[11,r_wc,E,r_8c,59,[[[r_ba]],[r_Wa]]],[11,r_xc,E,r_9c,59,[[[r_ba],[r_Wa]]]],[11,r_yc,E,r_ad,59,[[[r_ba]],[r_Wa]]],[11,r_zc,E,r_bd,59,[[[r_ba],[r_Wa]]]],[11,r_Ac,E,r_cd,59,[[[r_ba],[r_Wa]]]],[11,r_Bc,E,r_dd,59,[[[r_ba]]]],[11,r_Cc,E,r_ed,59,[[[r_ba],[r_Pa]]]],[11,r_Dc,E,r_Hc,59,[[[r_ba]],[r_Pa]]],[11,r_Ec,E,r_fd,59,[[[r_ba]]]],[11,r_Fc,E,r_gd,59,[[[r_ba],[r_Pa]]]],[11,r_Gc,E,r_Hc,59,[[[r_ba]],[r_Pa]]],[11,r_Ic,E,r_hd,59,[[[r_ba]]]],[11,r_Jc,E,r_id,59,[[[r_ba],[r_Pa]]]],[11,r_Kc,E,r_Hc,59,[[[r_ba]],[r_Pa]]],[11,r_Lc,E,r_jd,59,[[[r_ba],[r_qd,[r_kd]]]]],[11,r_Mc,E,r_ld,59,[[[r_ba],[r_qd,[r_md]]]]],[11,r_Nc,E,r_nd,59,[[[r_ba],[r_Qb]]]],[11,r_Oc,E,r_od,59,[[[r_ba]],[r_Qb]]],[11,r_Pc,E,r_pd,59,[[[r_ba]]]],[11,r_ud,r_tb,E,35,[[[r_ba]],[r_ja,[r_la]]]],[11,r_sd,E,r_vd,35,[[[r_ba]],[r_ja,[r_td,r_la]]]],[11,r_ud,r_ub,E,36,[[[r_ba]],[r_ja,[r_la]]]],[11,r_sd,E,r_vd,36,[[[r_ba]],[r_ja,[r_td,r_la]]]],[11,r_sd,r_wb,r_vd,41,[[[r_ba]],[r_ja,[r_td,r_la]]]],[11,r_sd,r_xb,E,42,[[[r_ba]],[r_ja,[r_td,r_la]]]],[11,r_sd,r_yb,E,43,[[[r_ba]],[r_ja,[r_td,r_la]]]],[11,r_ud,r_Ab,E,49,[[[r_ba]],[r_ja,[r_la]]]],[11,r_sd,E,E,49,[[[r_ba]],[r_ja,[r_td,r_la]]]],[11,r_ud,r_Bb,E,50,[[[r_ba]],[r_ja,[r_la]]]],[11,r_sd,E,E,50,[[[r_ba]],[r_ja,[r_td,r_la]]]],[11,r_sd,r_Cb,E,51,[[[r_ba]],[r_ja,[r_td,r_la]]]],[11,r_sd,r_Db,E,52,[[[r_ba]],[r_ja,[r_td,r_la]]]],[11,r_ud,r_Eb,E,53,[[[r_ba]],[r_ja,[r_la]]]],[11,r_sd,E,E,53,[[[r_ba]],[r_ja,[r_td,r_la]]]],[11,r_sd,r_Fb,r_vd,55,[[[r_ba]],[r_ja,[r_td,r_la]]]],[11,r_ud,r_Gb,E,56,[[[r_ba]],[r_ja,[r_la]]]],[11,r_sd,E,E,56,[[[r_ba]],[r_ja,[r_td,r_la]]]],[11,r_ud,r_Hb,E,57,[[[r_ba]],[r_ja,[r_la]]]],[11,r_sd,E,E,57,[[[r_ba]],[r_ja,[r_td,r_la]]]],[11,r_ud,r_Ib,E,58,[[[r_ba]],[r_ja,[r_la]]]],[11,r_sd,E,E,58,[[[r_ba]],[r_ja,[r_td,r_la]]]],[11,r_ud,r_Jb,E,59,[[[r_ba]],[r_ja,[r_la]]]],[11,r_sd,E,E,59,[[[r_ba]],[r_ja,[r_td,r_la]]]],[11,r_wd,r_yb,r_Ed,43,[[[r_ba],[T]]]],[11,r_xd,E,r_Fd,43,[[[r_ba],[T]]]],[11,r_yd,E,r_Id,43,[[[r_ba],[r_Wa]],[r_ja,[r_la]]]],[11,r_zd,E,r_Gd,43,[[[r_ba],[r_Wa]]]],[11,r_Ad,E,r_Hd,43,[[[r_ba],[T]]]],[11,r_Bd,E,r_Dd,43,[[[r_ba]],[r_ja,[r_la]]]],[11,r_Cd,E,r_Dd,43,[[[r_ba]],[r_ja,[r_la]]]],[11,r_wd,r_Ab,r_Ed,49,[[[r_ba],[T]]]],[11,r_xd,E,r_Fd,49,[[[r_ba],[T]]]],[11,r_zd,E,r_Gd,49,[[[r_ba],[r_Wa]]]],[11,r_Ad,E,r_Hd,49,[[[r_ba],[T]]]],[11,r_Bd,E,r_Dd,49,[[[r_ba]],[r_ja,[r_la]]]],[11,r_Cd,E,r_Dd,49,[[[r_ba]],[r_ja,[r_la]]]],[11,r_yd,E,r_Id,49,[[[r_ba],[r_Wa]],[r_ja,[r_la]]]],[11,r_wd,r_Bb,r_Ed,50,[[[r_ba],[T]]]],[11,r_xd,E,r_Fd,50,[[[r_ba],[T]]]],[11,r_zd,E,r_Gd,50,[[[r_ba],[r_Wa]]]],[11,r_Ad,E,r_Hd,50,[[[r_ba],[T]]]],[11,r_Bd,E,r_Dd,50,[[[r_ba]],[r_ja,[r_la]]]],[11,r_Cd,E,r_Dd,50,[[[r_ba]],[r_ja,[r_la]]]],[11,r_yd,E,r_Id,50,[[[r_ba],[r_Wa]],[r_ja,[r_la]]]],[11,r_8a,r_Gb,E,56,[[[r_ba],[r_Wa]]]],[11,r_Jd,E,E,56,[[[r_ba],[T]]]],[11,r_Kd,E,E,56,[[[r_ba],["h"]]]],[11,r_8a,r_Hb,E,57,[[[r_ba],[r_Wa]]]],[11,r_Jd,E,E,57,[[[r_ba],[T]]]],[11,r_Kd,E,E,57,[[[r_ba],["h"]]]],[11,r_8a,r_Ib,E,58,[[[r_ba],[r_Wa]]]],[11,r_Jd,E,E,58,[[[r_ba],[T]]]],[11,r_Kd,E,E,58,[[[r_ba],["h"]]]],[11,r_Ld,r_vb,E,37,[[[r_ba],[T],[T],[T]],[r_Wa]]],[11,r_Ld,E,E,38,[[[r_ba],[T],[T],[T]],[r_Wa]]],[11,r_Ld,E,E,39,[[[r_ba],[T],[T],[T]],[r_Wa]]],[11,r_Ld,E,E,40,[[[r_ba],[T],[T],[T]],[r_Wa]]],[11,r_Ra,r_cb,"Create a new empty `PerturbationVector`",0,[[],[r_cc]]],[11,"add",E,"Add an index `x_idx` and the corresponding function…",0,[[[r_ba],[r_Ja],["vec",[r_Ja]]],[r_cc]]],[11,r_Ra,r_fa,r_Qa,60,[[[T],[r_Wa]],[r_td]]],[11,r_Md,E,"Returns the parameter vector",60,[[[r_ba]],[T]]],[11,"cost",E,"Returns the cost function value",60,[[[r_ba]],[r_Wa]]],[11,"add_kv",E,"Adds an `ArgminKV`",60,[[[r_ba],[r_qa]],[r_td]]],[11,"get_kv",E,"Returns an `ArgminKV`",60,[[[r_ba]],[r_5b,[r_qa]]]],[11,r_Nd,E,"Returns `true` if a solver terminated and `false` otherwise",11,[[[r_ba]],[r_1b]]],[11,r_Ga,E,"Returns a texual representation of what happened",11,[[[r_ba]],[r_Od]]],[11,r_Ra,E,E,61,[[],[r_0b]]],[11,r_Ra,E,r_Qa,15,[[],[r_qa]]],[11,r_Yd,E,"Push a key-value pair to the `kv` vector.",15,[[[r_ba],[r_Od],[T]],[r_qa]]],[11,"merge",E,"Merge another `kv` into `self.kv`",15,[[[r_ba],[r_qa]],[r_qa]]],[11,r_Ra,E,r_Qa,16,[[[T],[r_Wa],[r_Pa],[r_Qb]],[r_ka]]],[11,r_Ra,E,r_Qa,62,[[["o"],[T]],[r_8b]]],[11,"kv_for_logs",E,"Return the KV for the initial logging",62,[[[r_ba]],[r_qa]]],[11,"kv_for_iter",E,"Return the KV for logging of the iterations",62,[[[r_ba]],[r_qa]]],[11,"reset",E,"Reset `self` to its initial state.",62,N],[11,r_sa,E,"Apply the operator to `param`",62,[[[r_ba],[T]],[r_ja,[r_la]]]],[11,r_ta,E,"Compute the gradient at `param`",62,[[[r_ba],[T]],[r_ja,[r_la]]]],[11,r_ua,E,"Compute the hessian at `param`",62,[[[r_ba],[T]],[r_ja,[r_la]]]],[11,r_va,E,"Modify a `param` with the `modify` method of `operator`.",62,[[[r_ba],[T],[r_Wa]],[r_ja,[r_la]]]],[11,r_pc,E,"Set the current parameter vector",62,[[[r_ba],[T]],[r_8b]]],[11,r_mc,E,"Return the current parameter vector",62,[[[r_ba]],[T]]],[11,r_rc,E,"Set the new best parameter vector",62,[[[r_ba],[T]],[r_8b]]],[11,"best_param",E,"Return the current best parameter vector",62,[[[r_ba]],[T]]],[11,r_xc,E,"Set the current cost function value",62,[[[r_ba],[r_Wa]],[r_8b]]],[11,r_wc,E,"Return the current cost function value",62,[[[r_ba]],[r_Wa]]],[11,r_zc,E,"Set the cost function value of the current best parameter…",62,[[[r_ba],[r_Wa]],[r_8b]]],[11,r_yc,E,"Return the cost function value of the current best…",62,[[[r_ba]],[r_Wa]]],[11,r_Xa,E,"Set the current gradient",62,[[[r_ba],[T]],[r_8b]]],[11,r_nc,E,"Return the current gradient",62,[[[r_ba]],[T]]],[11,r_qc,E,"Set the current hessian",62,[[[r_ba],["h"]],[r_8b]]],[11,r_oc,E,"Return the current hessian",62,[[[r_ba]],["h"]]],[11,r_Ac,E,"Set the target cost function value",62,[[[r_ba],[r_Wa]],[r_8b]]],[11,"target_cost",E,"Return the target cost function value",62,[[[r_ba]],[r_Wa]]],[11,r_uc,E,"Increment the number of iterations.",62,[[[r_ba]],[r_8b]]],[11,r_vc,E,"Return the current number of iterations",62,[[[r_ba]],[r_Pa]]],[11,r_Bc,E,r_Pd,62,[[[r_ba]],[r_8b]]],[11,r_Cc,E,r_Qd,62,[[[r_ba],[r_Pa]],[r_8b]]],[11,r_Dc,E,r_Rd,62,[[[r_ba]],[r_Pa]]],[11,r_Ec,E,r_Sd,62,[[[r_ba]],[r_8b]]],[11,r_Fc,E,r_Td,62,[[[r_ba],[r_Pa]],[r_8b]]],[11,r_Gc,E,r_na,62,[[[r_ba]],[r_Pa]]],[11,r_Ic,E,r_Ud,62,[[[r_ba]],[r_8b]]],[11,r_Jc,E,r_Vd,62,[[[r_ba],[r_Pa]],[r_8b]]],[11,r_Kc,E,r_na,62,[[[r_ba]],[r_Pa]]],[11,r_sc,E,"Set the maximum number of iterations.",62,[[[r_ba],[r_Pa]],[r_8b]]],[11,r_tc,E,"Return the maximum number of iterations",62,[[[r_ba]],[r_Pa]]],[11,r_Nc,E,"Set the `TerminationReason`",62,[[[r_ba],[r_Qb]],[r_8b]]],[11,r_Wd,E,"Return the `TerminationReason`",62,[[[r_ba]],[r_Qb]]],[11,"termination_reason_text",E,"Return the textual representation of the `TerminationReason`",62,[[[r_ba]],[r_Od]]],[11,r_Nd,E,"Return whether the algorithm has terminated or not",62,[[[r_ba]],[r_1b]]],[11,r_ja,E,"Return the result.",62,[[[r_ba]],[r_ka]]],[11,"set_total_time",E,"Set the total time needed by the solver",62,[[[r_ba],[r_Xd]],[r_8b]]],[11,"total_time",E,"Return the total time",62,[[[r_ba]],[r_Xd]]],[11,r_Lc,E,"Add a logger to the list of loggers",62,[[[r_ba],[r_qd,[r_kd]]],[r_8b]]],[11,r_Mc,E,"Add a writer to the list of writers",62,[[[r_ba],[r_qd,[r_md]]],[r_8b]]],[11,r_Nb,E,"Log a `kv`",62,[[[r_ba],[r_qa]],[r_ja,[r_la]]]],[11,r_Mb,E,"Log a message and a `kv`",62,[[[r_ba],[r_Od],[r_qa]],[r_ja,[r_la]]]],[11,r_Lb,E,"Write (TODO)",62,[[[r_ba],[T]],[r_ja,[r_la]]]],[11,r_Ra,E,E,63,[[],[r_9b]]],[11,r_Yd,E,E,63,[[[r_ba],[r_qd,[r_md]]],[r_9b]]],[11,r_Ra,E,r_Qa,64,[[],[r_ac]]],[11,r_Yd,E,"Push another `ArgminLog` to the `logger` field",64,[[[r_ba],[r_qd,[r_kd]]],[r_ac]]],[11,r_Ra,E,E,65,[[[r_Od],[r_Tb]],[r_ja,[r_Ub,r_la]]]],[11,"dir",E,E,65,[[[r_ba]],[r_ob]]],[11,"set_prefix",E,E,65,N],[11,"prefix",E,E,65,[[[r_ba]],[r_ob]]],[11,"store",E,E,65,[[[r_ba],[T]],[r_ja,[r_la]]]],[11,"store_cond",E,E,65,[[[r_ba],[T],[r_Pa]],[r_ja,[r_la]]]],[11,"term",E,"Log to the terminal in a blocking way",66,[[],[r_qd,[r_Zd]]]],[11,"term_noblock",E,"Log to the terminal in a non-blocking way (in case of…",66,[[],[r_qd,[r_Zd]]]],[11,"file",E,"Log JSON to a file in a blocking way",66,[[[r_Od]],[r_ja,[r_qd,r_la]]]],[11,"file_noblock",E,"Log JSON to a file in a non-blocking way (in case of…",66,[[[r_Od]],[r_ja,[r_qd,r_la]]]],[11,r_Ra,r_rb,E,30,[[["l"],["e"],["p"]],[r_Ia]]],[11,r_Ra,r_fa,E,67,[[],[r_Zb]]],[11,"from_boxed_compat",E,"Creates an `Error` from `Box<std::error::Error>`.",68,[[[r_5a,[r_la]]],[r_la]]],[11,r_qb,E,"Return a reference to the underlying failure that this…",68,[[[r_ba]],[r_sb]]],[11,"name",E,"Returns the name of the underlying fail.",68,[[[r_ba]],[r_5b,[r_Od]]]],[11,r_bc,E,"Returns a reference to the underlying cause of this…",68,[[[r_ba]],[r_sb]]],[11,r_6b,E,"Gets a reference to the `Backtrace` for this `Error`.",68,[[[r_ba]],[r_6b]]],[11,r_0d,E,"Provides context for this `Error`.",68,[[[r_ba],["d"]],[r_0d]]],[11,r_1d,E,"Wraps `Error` in a compatibility type.",68,[[[r_ba]],[r_1d,[r_la]]]],[11,"downcast",E,r_3d,68,[[[r_ba]],[r_ja,[r_la]]]],[11,"find_root_cause",E,"Returns the \"root cause\" of this error - the last value in…",68,[[[r_ba]],[r_sb]]],[11,"iter_causes",E,"Returns a iterator over the causes of this error with the…",68,[[[r_ba]],[r_2d]]],[11,"iter_chain",E,"Returns a iterator over all fails up the chain from the…",68,[[[r_ba]],[r_2d]]],[11,"downcast_ref",E,r_3d,68,[[[r_ba]],[r_5b]]],[11,"downcast_mut",E,r_3d,68,[[[r_ba]],[r_5b]]],[11,"root_cause",E,"Deprecated alias to `find_root_cause`.",68,[[[r_ba]],[r_sb]]],[11,r_2d,E,"Deprecated alias to `iter_causes`.",68,[[[r_ba]],[r_2d]]],[11,r_Ra,E,E,69,[[],[r_qd,["writetofile"]]]]],"p":[[3,r_4d],[8,r_5d],[8,r_6d],[8,r_7d],[8,r_8d],[8,r_9d],[8,r_ae],[8,r_be],[8,r_ce],[8,r_de],[8,r_ee],[4,r_fe],[8,r_ge],[8,r_he],[8,r_ie],[3,r_je],[3,r_ke],[8,r_le],[8,r_me],[8,r_ne],[8,r_oe],[8,r_pe],[8,r_qe],[4,r_re],[4,r_se],[4,r_Na],[4,r_te],[8,r_ue],[8,r_ve],[8,r_we],[3,r_xe],[8,r_ye],[8,r_ze],[8,r_Ae],[8,r_Be],[3,r_Ce],[3,r_De],[3,r_Ee],[3,r_Fe],[3,r_Ge],[3,r_He],[3,r_Ie],[3,r_Je],[3,r_Ke],[8,r_Le],[3,r_Me],[3,r_Ne],[3,r_Oe],[3,r_Pe],[3,r_Qe],[3,r_Re],[3,r_Se],[3,r_Te],[3,"BFGS"],[4,r_Ue],[3,r_Ve],[3,r_We],[3,r_Xe],[3,r_Ye],[3,r_Ze],[3,r_0e],[3,r_1e],[3,r_2e],[3,r_3e],[3,r_4e],[3,r_5e],[3,r_6e],[3,r_7e],[3,r_Na],[3,r_8e]]};
initSearch(searchIndex);addSearchOptions(searchIndex);